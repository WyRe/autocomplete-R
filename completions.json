{"keywords":{"AIC":{"text":"AIC","snippet":"AIC(object, ..., k = 2)BIC(object, ...)","prefix":"AIC","type":"function","description":"Generic function calculating Akaike's ‘An Information Criterion’ forone or several fitted model objects for which a log-likelihood valuecan be obtained, according to the formula-2*log-likelihood + k*npar,where npar represents the number of parameters in thefitted model, and k = 2 for the usual AIC, ork = log(n)(n being the number of observations) for the so-called BIC or SBC(Schwarz's Bayesian criterion).","leftLabel":"stats","rightLabel":"R: Akaike's An Information Criterion"},"ARMAacf":{"text":"ARMAacf","snippet":"ARMAacf(ar = numeric(), ma = numeric(), lag.max = r, pacf = FALSE)","prefix":"ARMAacf","type":"function","description":"Compute the theoretical autocorrelation function or partialautocorrelation function for an ARMA process.","leftLabel":"stats","rightLabel":"R: Compute Theoretical ACF for an ARMA Process"},"ARMAtoMA":{"text":"ARMAtoMA","snippet":"ARMAtoMA(ar = numeric(), ma = numeric(), lag.max)","prefix":"ARMAtoMA","type":"function","description":"Convert ARMA process to infinite MA process.","leftLabel":"stats","rightLabel":"R: Convert ARMA Process to Infinite MA Process"},"Beta":{"text":"Beta","snippet":"dbeta(x, shape1, shape2, ncp = 0, log = FALSE)pbeta(q, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE)qbeta(p, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE)rbeta(n, shape1, shape2, ncp = 0)","prefix":"Beta","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the Beta distribution with parameters shape1 andshape2 (and optional non-centrality parameter ncp).","leftLabel":"stats","rightLabel":"R: The Beta Distribution"},"Binomial":{"text":"Binomial","snippet":"dbinom(x, size, prob, log = FALSE)pbinom(q, size, prob, lower.tail = TRUE, log.p = FALSE)qbinom(p, size, prob, lower.tail = TRUE, log.p = FALSE)rbinom(n, size, prob)","prefix":"Binomial","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the binomial distribution with parameters sizeand prob.","leftLabel":"stats","rightLabel":"R: The Binomial Distribution"},"Cauchy":{"text":"Cauchy","snippet":"dcauchy(x, location = 0, scale = 1, log = FALSE)pcauchy(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)qcauchy(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)rcauchy(n, location = 0, scale = 1)","prefix":"Cauchy","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the Cauchy distribution with location parameterlocation and scale parameter scale.","leftLabel":"stats","rightLabel":"R: The Cauchy Distribution"},"Chisquare":{"text":"Chisquare","snippet":"dchisq(x, df, ncp = 0, log = FALSE)pchisq(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)qchisq(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)rchisq(n, df, ncp = 0)","prefix":"Chisquare","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the chi-squared (chi^2) distribution withdf degrees of freedom and optional non-centrality parameterncp.","leftLabel":"stats","rightLabel":"R: The (non-central) Chi-Squared Distribution"},"Distributions":{"text":"Distributions","snippet":{},"prefix":"Distributions","type":"function","description":"Density, cumulative distribution function, quantile function and randomvariate generation for many standard probability distributions areavailable in the stats package.","leftLabel":"stats","rightLabel":"R: Distributions in the stats package"},"Exponential":{"text":"Exponential","snippet":"dexp(x, rate = 1, log = FALSE)pexp(q, rate = 1, lower.tail = TRUE, log.p = FALSE)qexp(p, rate = 1, lower.tail = TRUE, log.p = FALSE)rexp(n, rate = 1)","prefix":"Exponential","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the exponential distribution with rate rate(i.e., mean 1/rate).","leftLabel":"stats","rightLabel":"R: The Exponential Distribution"},"Fdist":{"text":"Fdist","snippet":"df(x, df1, df2, ncp, log = FALSE)pf(q, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE)qf(p, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE)rf(n, df1, df2, ncp)","prefix":"Fdist","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the F distribution with df1 and df2degrees of freedom (and optional non-centrality parameter ncp).","leftLabel":"stats","rightLabel":"R: The F Distribution"},"GammaDist":{"text":"GammaDist","snippet":"dgamma(x, shape, rate = 1, scale = 1/rate, log = FALSE)pgamma(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,       log.p = FALSE)qgamma(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE,       log.p = FALSE)rgamma(n, shape, rate = 1, scale = 1/rate)","prefix":"GammaDist","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the Gamma distribution with parameters shape andscale.","leftLabel":"stats","rightLabel":"R: The Gamma Distribution"},"Geometric":{"text":"Geometric","snippet":"dgeom(x, prob, log = FALSE)pgeom(q, prob, lower.tail = TRUE, log.p = FALSE)qgeom(p, prob, lower.tail = TRUE, log.p = FALSE)rgeom(n, prob)","prefix":"Geometric","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the geometric distribution with parameter prob.","leftLabel":"stats","rightLabel":"R: The Geometric Distribution"},"HoltWinters":{"text":"HoltWinters","snippet":"HoltWinters(x, alpha = NULL, beta = NULL, gamma = NULL,            seasonal = c(\"additive\", \"multiplicative\"),            start.periods = 2, l.start = NULL, b.start = NULL,            s.start = NULL,            optim.start = c(alpha = 0.3, beta = 0.1, gamma = 0.1),            optim.control = list())","prefix":"HoltWinters","type":"function","description":"Computes Holt-Winters Filtering of a given time series.Unknown parameters are determined by minimizing the squaredprediction error.","leftLabel":"stats","rightLabel":"R: Holt-Winters Filtering"},"Hypergeometric":{"text":"Hypergeometric","snippet":"dhyper(x, m, n, k, log = FALSE)phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)qhyper(p, m, n, k, lower.tail = TRUE, log.p = FALSE)rhyper(nn, m, n, k)","prefix":"Hypergeometric","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the hypergeometric distribution.","leftLabel":"stats","rightLabel":"R: The Hypergeometric Distribution"},"IQR":{"text":"IQR","snippet":"IQR(x, na.rm = FALSE, type = 7)","prefix":"IQR","type":"function","description":"computes interquartile range of the x values.","leftLabel":"stats","rightLabel":"R: The Interquartile Range"},"KalmanLike":{"text":"KalmanLike","snippet":"KalmanLike(y, mod, nit = 0L, update = FALSE)KalmanRun(y, mod, nit = 0L, update = FALSE)KalmanSmooth(y, mod, nit = 0L)KalmanForecast(n.ahead = 10L, mod, update = FALSE)makeARIMA(phi, theta, Delta, kappa = 1e6,          SSinit = c(\"Gardner1980\", \"Rossignol2011\"),          tol = .Machine$double.eps)","prefix":"KalmanLike","type":"function","description":"Use Kalman Filtering to find the (Gaussian) log-likelihood, or forforecasting or smoothing.","leftLabel":"stats","rightLabel":"R: Kalman Filtering"},"Logistic":{"text":"Logistic","snippet":"dlogis(x, location = 0, scale = 1, log = FALSE)plogis(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)qlogis(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)rlogis(n, location = 0, scale = 1)","prefix":"Logistic","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the logistic distribution with parameterslocation and scale.","leftLabel":"stats","rightLabel":"R: The Logistic Distribution"},"Lognormal":{"text":"Lognormal","snippet":"dlnorm(x, meanlog = 0, sdlog = 1, log = FALSE)plnorm(q, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)qlnorm(p, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)rlnorm(n, meanlog = 0, sdlog = 1)","prefix":"Lognormal","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the log normal distribution whose logarithm has meanequal to meanlog and standard deviation equal to sdlog.","leftLabel":"stats","rightLabel":"R: The Log Normal Distribution"},"Multinom":{"text":"Multinom","snippet":"rmultinom(n, size, prob)dmultinom(x, size = NULL, prob, log = FALSE)","prefix":"Multinom","type":"function","description":"Generate multinomially distributed random number vectors andcompute multinomial probabilities.","leftLabel":"stats","rightLabel":"R: The Multinomial Distribution"},"NLSstAsymptotic":{"text":"NLSstAsymptotic","snippet":"NLSstAsymptotic(xy)","prefix":"NLSstAsymptotic","type":"function","description":"Fits the asymptotic regression model, in the form b0 +      b1*(1-exp(-exp(lrc) * x) to the xy data.This can be used as a building block in determining starting estimatesfor more complicated models.","leftLabel":"stats","rightLabel":"R: Fit the Asymptotic Regression Model"},"NLSstClosestX":{"text":"NLSstClosestX","snippet":"NLSstClosestX(xy, yval)","prefix":"NLSstClosestX","type":"function","description":"Use inverse linear interpolation to approximate the x value atwhich the function represented by xy is equal to yval.","leftLabel":"stats","rightLabel":"R: Inverse Interpolation"},"NLSstLfAsymptote":{"text":"NLSstLfAsymptote","snippet":"NLSstLfAsymptote(xy)","prefix":"NLSstLfAsymptote","type":"function","description":"Provide an initial guess at the horizontal asymptote on the left side(i.e., small values of x) of the graph of y versusx from the xy object.  Primarily used withininitial functions for self-starting nonlinear regressionmodels.","leftLabel":"stats","rightLabel":"R: Horizontal Asymptote on the Left Side"},"NLSstRtAsymptote":{"text":"NLSstRtAsymptote","snippet":"NLSstRtAsymptote(xy)","prefix":"NLSstRtAsymptote","type":"function","description":"Provide an initial guess at the horizontal asymptote on the right side(i.e., large values of x) of the graph of y versusx from the xy object.  Primarily used withininitial functions for self-starting nonlinear regressionmodels.","leftLabel":"stats","rightLabel":"R: Horizontal Asymptote on the Right Side"},"NegBinomial":{"text":"NegBinomial","snippet":"dnbinom(x, size, prob, mu, log = FALSE)pnbinom(q, size, prob, mu, lower.tail = TRUE, log.p = FALSE)qnbinom(p, size, prob, mu, lower.tail = TRUE, log.p = FALSE)rnbinom(n, size, prob, mu)","prefix":"NegBinomial","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the negative binomial distribution with parameterssize and prob.","leftLabel":"stats","rightLabel":"R: The Negative Binomial Distribution"},"Normal":{"text":"Normal","snippet":"dnorm(x, mean = 0, sd = 1, log = FALSE)pnorm(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)qnorm(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)rnorm(n, mean = 0, sd = 1)","prefix":"Normal","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the normal distribution with mean equal to meanand standard deviation equal to sd.","leftLabel":"stats","rightLabel":"R: The Normal Distribution"},"Poisson":{"text":"Poisson","snippet":"dpois(x, lambda, log = FALSE)ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)qpois(p, lambda, lower.tail = TRUE, log.p = FALSE)rpois(n, lambda)","prefix":"Poisson","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the Poisson distribution with parameter lambda.","leftLabel":"stats","rightLabel":"R: The Poisson Distribution"},"SSD":{"text":"SSD","snippet":"# S3 method for class 'mlm'SSD(object, ...)# S3 methods for class 'SSD' and 'mlm'estVar(object, ...)","prefix":"SSD","type":"function","description":"Functions to compute matrix of residual sums of squares and products,or the estimated variance matrix for multivariate linear models.","leftLabel":"stats","rightLabel":"R: SSD Matrix and Estimated Variance Matrix in Multivariate..."},"SSasymp":{"text":"SSasymp","snippet":"SSasymp(input, Asym, R0, lrc)","prefix":"SSasymp","type":"function","description":"This selfStart model evaluates the asymptotic regressionfunction and its gradient.  It has an initial attribute thatwill evaluate initial estimates of the parameters Asym, R0,and lrc for a given set of data.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Asymptotic Regression Model"},"SSasympOff":{"text":"SSasympOff","snippet":"SSasympOff(input, Asym, lrc, c0)","prefix":"SSasympOff","type":"function","description":"This selfStart model evaluates an alternative parametrizationof the asymptoticregression function and the gradient with respect to those parameters.It has an initialattribute that creates initial estimates of the parametersAsym, lrc, and c0.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Asymptotic Regression Model with an Offset"},"SSasympOrig":{"text":"SSasympOrig","snippet":"SSasympOrig(input, Asym, lrc)","prefix":"SSasympOrig","type":"function","description":"This selfStart model evaluates the asymptotic regressionfunction through the origin and its gradient.  It has aninitial attribute that will evaluate initial estimates of theparameters Asym and lrc for a given set of data.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Asymptotic Regression Model through the..."},"SSbiexp":{"text":"SSbiexp","snippet":"SSbiexp(input, A1, lrc1, A2, lrc2)","prefix":"SSbiexp","type":"function","description":"This selfStart model evaluates the biexponential model functionand its gradient.  It has an initial attribute thatcreates initial estimates of the parameters A1, lrc1,A2, and lrc2.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Biexponential model"},"SSfol":{"text":"SSfol","snippet":"SSfol(Dose, input, lKe, lKa, lCl)","prefix":"SSfol","type":"function","description":"This selfStart model evaluates the first-order compartmentfunction and its gradient.  It has an initial attribute thatcreates initial estimates of the parameters lKe, lKa,and lCl.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls First-order Compartment Model"},"SSfpl":{"text":"SSfpl","snippet":"SSfpl(input, A, B, xmid, scal)","prefix":"SSfpl","type":"function","description":"This selfStart model evaluates the four-parameter logisticfunction and its gradient.  It has an initial attribute thatwill evaluate initial estimates of the parameters A, B,xmid, and scal for a given set of data.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Four-Parameter Logistic Model"},"SSgompertz":{"text":"SSgompertz","snippet":"SSgompertz(x, Asym, b2, b3)","prefix":"SSgompertz","type":"function","description":"This selfStart model evaluates the Gompertz growth modeland its gradient.  It has an initial attribute thatcreates initial estimates of the parameters Asym,b2, and b3.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Gompertz Growth Model"},"SSlogis":{"text":"SSlogis","snippet":"SSlogis(input, Asym, xmid, scal)","prefix":"SSlogis","type":"function","description":"This selfStart model evaluates the logisticfunction and its gradient.  It has an initial attribute thatcreates initial estimates of the parameters Asym,xmid, and scal.   In R 3.4.2 and earlier, thatinit function failed when min(input) was exactly zero.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Logistic Model"},"SSmicmen":{"text":"SSmicmen","snippet":"SSmicmen(input, Vm, K)","prefix":"SSmicmen","type":"function","description":"This selfStart model evaluates the Michaelis-Menten model andits gradient.  It has an initial attribute thatwill evaluate initial estimates of the parameters Vm and K","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Michaelis-Menten Model"},"SSweibull":{"text":"SSweibull","snippet":"SSweibull(x, Asym, Drop, lrc, pwr)","prefix":"SSweibull","type":"function","description":"This selfStart model evaluates the Weibull model for growthcurve data and its gradient.  It has an initial attribute thatwill evaluate initial estimates of the parameters Asym, Drop,lrc, and pwr for a given set of data.","leftLabel":"stats","rightLabel":"R: Self-Starting Nls Weibull Growth Curve Model"},"SignRank":{"text":"SignRank","snippet":"dsignrank(x, n, log = FALSE)psignrank(q, n, lower.tail = TRUE, log.p = FALSE)qsignrank(p, n, lower.tail = TRUE, log.p = FALSE)rsignrank(nn, n)","prefix":"SignRank","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the distribution of the Wilcoxon Signed Rank statisticobtained from a sample with size n.","leftLabel":"stats","rightLabel":"R: Distribution of the Wilcoxon Signed Rank Statistic"},"StructTS":{"text":"StructTS","snippet":"StructTS(x, type = c(\"level\", \"trend\", \"BSM\"), init = NULL,         fixed = NULL, optim.control = NULL)","prefix":"StructTS","type":"function","description":"Fit a structural model for a time series by maximum likelihood.","leftLabel":"stats","rightLabel":"R: Fit Structural Time Series"},"TDist":{"text":"TDist","snippet":"dt(x, df, ncp, log = FALSE)pt(q, df, ncp, lower.tail = TRUE, log.p = FALSE)qt(p, df, ncp, lower.tail = TRUE, log.p = FALSE)rt(n, df, ncp)","prefix":"TDist","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the t distribution with df degrees of freedom(and optional non-centrality parameter ncp).","leftLabel":"stats","rightLabel":"R: The Student t Distribution"},"Tukey":{"text":"Tukey","snippet":"ptukey(q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)qtukey(p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)","prefix":"Tukey","type":"function","description":"Functions of the distribution of the studentized range, R/s,where R is the range of a standard normal sample anddf*s^2 is independently distributed aschi-squared with df degrees of freedom, see pchisq.","leftLabel":"stats","rightLabel":"R: The Studentized Range Distribution"},"TukeyHSD":{"text":"TukeyHSD","snippet":"TukeyHSD(x, which, ordered = FALSE, conf.level = 0.95, ...)","prefix":"TukeyHSD","type":"function","description":"Create a set of confidence intervals on the differences between themeans of the levels of a factor with the specified family-wiseprobability of coverage.  The intervals are based on the Studentizedrange statistic, Tukey's ‘Honest Significant Difference’method.","leftLabel":"stats","rightLabel":"R: Compute Tukey Honest Significant Differences"},"Uniform":{"text":"Uniform","snippet":"dunif(x, min = 0, max = 1, log = FALSE)punif(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)qunif(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)runif(n, min = 0, max = 1)","prefix":"Uniform","type":"function","description":"These functions provide information about the uniform distributionon the interval from min to max.  dunif gives thedensity, punif gives the distribution function qunifgives the quantile function and runif generates randomdeviates.","leftLabel":"stats","rightLabel":"R: The Uniform Distribution"},"Weibull":{"text":"Weibull","snippet":"dweibull(x, shape, scale = 1, log = FALSE)pweibull(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)qweibull(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)rweibull(n, shape, scale = 1)","prefix":"Weibull","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the Weibull distribution with parameters shapeand scale.","leftLabel":"stats","rightLabel":"R: The Weibull Distribution"},"Wilcoxon":{"text":"Wilcoxon","snippet":"dwilcox(x, m, n, log = FALSE)pwilcox(q, m, n, lower.tail = TRUE, log.p = FALSE)qwilcox(p, m, n, lower.tail = TRUE, log.p = FALSE)rwilcox(nn, m, n)","prefix":"Wilcoxon","type":"function","description":"Density, distribution function, quantile function and randomgeneration for the distribution of the Wilcoxon rank sum statisticobtained from samples with size m and n, respectively.","leftLabel":"stats","rightLabel":"R: Distribution of the Wilcoxon Rank Sum Statistic"},"acf":{"text":"acf","snippet":"acf(x, lag.max = NULL,    type = c(\"correlation\", \"covariance\", \"partial\"),    plot = TRUE, na.action = na.fail, demean = TRUE, ...)pacf(x, lag.max, plot, na.action, ...)## Default S3 method:pacf(x, lag.max = NULL, plot = TRUE, na.action = na.fail,    ...)ccf(x, y, lag.max = NULL, type = c(\"correlation\", \"covariance\"),    plot = TRUE, na.action = na.fail, ...)## S3 method for class 'acf'x[i, j]","prefix":"acf","type":"function","description":"The function acf computes (and by default plots) estimates ofthe autocovariance or autocorrelation function.  Function pacfis the function used for the partial autocorrelations.  Functionccf computes the cross-correlation or cross-covariance of twounivariate series.","leftLabel":"stats","rightLabel":"R: Auto- and Cross- Covariance and -Correlation Function..."},"acf2AR":{"text":"acf2AR","snippet":"acf2AR(acf)","prefix":"acf2AR","type":"function","description":"Compute an AR process exactly fitting an autocorrelation function.","leftLabel":"stats","rightLabel":"R: Compute an AR Process Exactly Fitting an ACF"},"add1":{"text":"add1","snippet":"add1(object, scope, ...)## Default S3 method:add1(object, scope, scale = 0, test = c(\"none\", \"Chisq\"),     k = 2, trace = FALSE, ...)## S3 method for class 'lm'add1(object, scope, scale = 0, test = c(\"none\", \"Chisq\", \"F\"),     x = NULL, k = 2, ...)## S3 method for class 'glm'add1(object, scope, scale = 0,     test = c(\"none\", \"Rao\", \"LRT\", \"Chisq\", \"F\"),     x = NULL, k = 2, ...)drop1(object, scope, ...)## Default S3 method:drop1(object, scope, scale = 0, test = c(\"none\", \"Chisq\"),      k = 2, trace = FALSE, ...)## S3 method for class 'lm'drop1(object, scope, scale = 0, all.cols = TRUE,      test = c(\"none\", \"Chisq\", \"F\"), k = 2, ...)## S3 method for class 'glm'drop1(object, scope, scale = 0,      test = c(\"none\", \"Rao\", \"LRT\", \"Chisq\", \"F\"),      k = 2, ...)","prefix":"add1","type":"function","description":"Compute all the single terms in the scope argument that can beadded to or dropped from the model, fit those models and compute atable of the changes in fit.","leftLabel":"stats","rightLabel":"R: Add or Drop All Possible Single Terms to a Model"},"addmargins":{"text":"addmargins","snippet":"addmargins(A, margin = seq_along(dim(A)), FUN = sum, quiet = FALSE)","prefix":"addmargins","type":"function","description":"For a given table one can specify which of the classifying factors toexpand by one or more levels to hold margins to be calculated.  One may forexample form sums and means over the first dimension and medians over thesecond.  The resulting table will then have two extra levels for the firstdimension and one extra level for the second.  The default is to sum overall margins in the table.  Other possibilities may give results thatdepend on the order in which the margins are computed.  This is flaggedin the printed output from the function.","leftLabel":"stats","rightLabel":"R: Puts Arbitrary Margins on Multidimensional Tables or Arrays"},"aggregate":{"text":"aggregate","snippet":"aggregate(x, ...)## Default S3 method:aggregate(x, ...)## S3 method for class 'data.frame'aggregate(x, by, FUN, ..., simplify = TRUE, drop = TRUE)## S3 method for class 'formula'aggregate(formula, data, FUN, ...,          subset, na.action = na.omit)## S3 method for class 'ts'aggregate(x, nfrequency = 1, FUN = sum, ndeltat = 1,          ts.eps = getOption(\"ts.eps\"), ...)","prefix":"aggregate","type":"function","description":"Splits the data into subsets, computes summary statistics for each,and returns the result in a convenient form.","leftLabel":"stats","rightLabel":"R: Compute Summary Statistics of Data Subsets"},"alias":{"text":"alias","snippet":"alias(object, ...)## S3 method for class 'formula'alias(object, data, ...)## S3 method for class 'lm'alias(object, complete = TRUE, partial = FALSE,      partial.pattern = FALSE, ...)","prefix":"alias","type":"function","description":"Find aliases (linearly dependent terms) in a linear model specified bya formula.","leftLabel":"stats","rightLabel":"R: Find Aliases (Dependencies) in a Model"},"anova":{"text":"anova","snippet":"anova(object, ...)","prefix":"anova","type":"function","description":"Compute analysis of variance (or deviance) tables for one or morefitted model objects.","leftLabel":"stats","rightLabel":"R: Anova Tables"},"anova.glm":{"text":"anova.glm","snippet":"## S3 method for class 'glm'anova(object, ..., dispersion = NULL, test = NULL)","prefix":"anova.glm","type":"function","description":"Compute an analysis of deviance table for one or more generalizedlinear model fits.","leftLabel":"stats","rightLabel":"R: Analysis of Deviance for Generalized Linear Model Fits"},"anova.lm":{"text":"anova.lm","snippet":"## S3 method for class 'lm'anova(object, ...)## S3 method for class 'lmlist'anova(object, ..., scale = 0, test = \"F\")","prefix":"anova.lm","type":"function","description":"Compute an analysis of variance table for one or more linear model fits.","leftLabel":"stats","rightLabel":"R: ANOVA for Linear Model Fits"},"anova.mlm":{"text":"anova.mlm","snippet":"## S3 method for class 'mlm'anova(object, ...,      test = c(\"Pillai\", \"Wilks\", \"Hotelling-Lawley\", \"Roy\",               \"Spherical\"),      Sigma = diag(nrow = p), T = Thin.row(proj(M) - proj(X)),      M = diag(nrow = p), X = ~0,      idata = data.frame(index = seq_len(p)), tol = 1e-7)","prefix":"anova.mlm","type":"function","description":"Compute a (generalized) analysis of variance table for one or moremultivariate linear models.","leftLabel":"stats","rightLabel":"R: Comparisons between Multivariate Linear Models"},"ansari.test":{"text":"ansari.test","snippet":"ansari.test(x, ...)## Default S3 method:ansari.test(x, y,            alternative = c(\"two.sided\", \"less\", \"greater\"),            exact = NULL, conf.int = FALSE, conf.level = 0.95,            ...)## S3 method for class 'formula'ansari.test(formula, data, subset, na.action, ...)","prefix":"ansari.test","type":"function","description":"Performs the Ansari-Bradley two-sample test for a difference in scaleparameters.","leftLabel":"stats","rightLabel":"R: Ansari-Bradley Test"},"aov":{"text":"aov","snippet":"aov(formula, data = NULL, projections = FALSE, qr = TRUE,    contrasts = NULL, ...)","prefix":"aov","type":"function","description":"Fit an analysis of variance model by a call to lm for each stratum.","leftLabel":"stats","rightLabel":"R: Fit an Analysis of Variance Model"},"approxfun":{"text":"approxfun","snippet":"approx   (x, y = NULL, xout, method = \"linear\", n = 50,          yleft, yright, rule = 1, f = 0, ties = mean)approxfun(x, y = NULL,       method = \"linear\",          yleft, yright, rule = 1, f = 0, ties = mean)","prefix":"approxfun","type":"function","description":"Return a list of points which linearly interpolate given data points,or a function performing the linear (or constant) interpolation.","leftLabel":"stats","rightLabel":"R: Interpolation Functions"},"ar":{"text":"ar","snippet":"ar(x, aic = TRUE, order.max = NULL,   method = c(\"yule-walker\", \"burg\", \"ols\", \"mle\", \"yw\"),   na.action, series, ...)ar.burg(x, ...)## Default S3 method:ar.burg(x, aic = TRUE, order.max = NULL,        na.action = na.fail, demean = TRUE, series,        var.method = 1, ...)## S3 method for class 'mts'ar.burg(x, aic = TRUE, order.max = NULL,        na.action = na.fail, demean = TRUE, series,        var.method = 1, ...)ar.yw(x, ...)## Default S3 method:ar.yw(x, aic = TRUE, order.max = NULL,      na.action = na.fail, demean = TRUE, series, ...)## S3 method for class 'mts'ar.yw(x, aic = TRUE, order.max = NULL,      na.action = na.fail, demean = TRUE, series,      var.method = 1, ...)ar.mle(x, aic = TRUE, order.max = NULL, na.action = na.fail,       demean = TRUE, series, ...)## S3 method for class 'ar'predict(object, newdata, n.ahead = 1, se.fit = TRUE, ...)","prefix":"ar","type":"function","description":"Fit an autoregressive time series model to the data, by defaultselecting the complexity by AIC.","leftLabel":"stats","rightLabel":"R: Fit Autoregressive Models to Time Series"},"ar.ols":{"text":"ar.ols","snippet":"ar.ols(x, aic = TRUE, order.max = NULL, na.action = na.fail,       demean = TRUE, intercept = demean, series, ...)","prefix":"ar.ols","type":"function","description":"Fit an autoregressive time series model to the data by ordinaryleast squares, by default selecting the complexity by AIC.","leftLabel":"stats","rightLabel":"R: Fit Autoregressive Models to Time Series by OLS"},"arima":{"text":"arima","snippet":"arima(x, order = c(0L, 0L, 0L),      seasonal = list(order = c(0L, 0L, 0L), period = NA),      xreg = NULL, include.mean = TRUE,      transform.pars = TRUE,      fixed = NULL, init = NULL,      method = c(\"CSS-ML\", \"ML\", \"CSS\"), n.cond,      SSinit = c(\"Gardner1980\", \"Rossignol2011\"),      optim.method = \"BFGS\",      optim.control = list(), kappa = 1e6)","prefix":"arima","type":"function","description":"Fit an ARIMA model to a univariate time series.","leftLabel":"stats","rightLabel":"R: ARIMA Modelling of Time Series"},"arima.sim":{"text":"arima.sim","snippet":"arima.sim(model, n, rand.gen = rnorm, innov = rand.gen(n, ...),          n.start = NA, start.innov = rand.gen(n.start, ...),          ...)","prefix":"arima.sim","type":"function","description":"Simulate from an ARIMA model.","leftLabel":"stats","rightLabel":"R: Simulate from an ARIMA Model"},"arima0":{"text":"arima0","snippet":"arima0(x, order = c(0, 0, 0),       seasonal = list(order = c(0, 0, 0), period = NA),       xreg = NULL, include.mean = TRUE, delta = 0.01,       transform.pars = TRUE, fixed = NULL, init = NULL,       method = c(\"ML\", \"CSS\"), n.cond, optim.control = list())## S3 method for class 'arima0'predict(object, n.ahead = 1, newxreg, se.fit = TRUE, ...)","prefix":"arima0","type":"function","description":"Fit an ARIMA model to a univariate time series, and forecast fromthe fitted model.","leftLabel":"stats","rightLabel":"R: ARIMA Modelling of Time Series - Preliminary Version"},"as.hclust":{"text":"as.hclust","snippet":"as.hclust(x, ...)","prefix":"as.hclust","type":"function","description":"Converts objects from other hierarchical clustering functions toclass \"hclust\".","leftLabel":"stats","rightLabel":"R: Convert Objects to Class hclust"},"asOneSidedFormula":{"text":"asOneSidedFormula","snippet":"asOneSidedFormula(object)","prefix":"asOneSidedFormula","type":"function","description":"Names, expressions, numeric values, and character strings are converted toone-sided formulae. If object is a formula, it must beone-sided, in which case it is returned unaltered.","leftLabel":"stats","rightLabel":"R: Convert to One-Sided Formula"},"ave":{"text":"ave","snippet":"ave(x, ..., FUN = mean)","prefix":"ave","type":"function","description":"Subsets of x[] are averaged, where each subset consist of thoseobservations with the same factor levels.","leftLabel":"stats","rightLabel":"R: Group Averages Over Level Combinations of Factors"},"bandwidth":{"text":"bandwidth","snippet":"bw.nrd0(x)bw.nrd(x)bw.ucv(x, nb = 1000, lower = 0.1 * hmax, upper = hmax,       tol = 0.1 * lower)bw.bcv(x, nb = 1000, lower = 0.1 * hmax, upper = hmax,       tol = 0.1 * lower)bw.SJ(x, nb = 1000, lower = 0.1 * hmax, upper = hmax,      method = c(\"ste\", \"dpi\"), tol = 0.1 * lower)","prefix":"bandwidth","type":"function","description":"Bandwidth selectors for Gaussian kernels in density.","leftLabel":"stats","rightLabel":"R: Bandwidth Selectors for Kernel Density Estimation"},"bartlett.test":{"text":"bartlett.test","snippet":"bartlett.test(x, ...)## Default S3 method:bartlett.test(x, g, ...)## S3 method for class 'formula'bartlett.test(formula, data, subset, na.action, ...)","prefix":"bartlett.test","type":"function","description":"Performs Bartlett's test of the null that the variances in each of thegroups (samples) are the same.","leftLabel":"stats","rightLabel":"R: Bartlett Test of Homogeneity of Variances"},"binom.test":{"text":"binom.test","snippet":"binom.test(x, n, p = 0.5,           alternative = c(\"two.sided\", \"less\", \"greater\"),           conf.level = 0.95)","prefix":"binom.test","type":"function","description":"Performs an exact test of a simple null hypothesis about theprobability of success in a Bernoulli experiment.","leftLabel":"stats","rightLabel":"R: Exact Binomial Test"},"biplot":{"text":"biplot","snippet":"biplot(x, ...)## Default S3 method:biplot(x, y, var.axes = TRUE, col, cex = rep(par(\"cex\"), 2),       xlabs = NULL, ylabs = NULL, expand = 1,       xlim  = NULL, ylim  = NULL, arrow.len = 0.1,       main = NULL, sub = NULL, xlab = NULL, ylab = NULL, ...)","prefix":"biplot","type":"function","description":"Plot a biplot on the current graphics device.","leftLabel":"stats","rightLabel":"R: Biplot of Multivariate Data"},"biplot.princomp":{"text":"biplot.princomp","snippet":"## S3 method for class 'prcomp'biplot(x, choices = 1:2, scale = 1, pc.biplot = FALSE, ...)## S3 method for class 'princomp'biplot(x, choices = 1:2, scale = 1, pc.biplot = FALSE, ...)","prefix":"biplot.princomp","type":"function","description":"Produces a biplot (in the strict sense) from the output ofprincomp or prcomp","leftLabel":"stats","rightLabel":"R: Biplot for Principal Components"},"birthday":{"text":"birthday","snippet":"qbirthday(prob = 0.5, classes = 365, coincident = 2)pbirthday(n, classes = 365, coincident = 2)","prefix":"birthday","type":"function","description":"Computes answers to a generalised birthday paradox problem.pbirthday computes the probability of a coincidence andqbirthday computes the smallest number of observations neededto have at least a specified probability of coincidence.","leftLabel":"stats","rightLabel":"R: Probability of coincidences"},"box.test":{"text":"box.test","snippet":"Box.test(x, lag = 1, type = c(\"Box-Pierce\", \"Ljung-Box\"), fitdf = 0)","prefix":"box.test","type":"function","description":"Compute the Box–Pierce or Ljung–Box test statistic for examining thenull hypothesis of independence in a given time series.  These aresometimes known as ‘portmanteau’ tests.","leftLabel":"stats","rightLabel":"R: Box-Pierce and Ljung-Box Tests"},"cancor":{"text":"cancor","snippet":"cancor(x, y, xcenter = TRUE, ycenter = TRUE)","prefix":"cancor","type":"function","description":"Compute the canonical correlations between two data matrices.","leftLabel":"stats","rightLabel":"R: Canonical Correlations"},"case.names":{"text":"case.names","snippet":"case.names(object, ...)## S3 method for class 'lm'case.names(object, full = FALSE, ...)variable.names(object, ...)## S3 method for class 'lm'variable.names(object, full = FALSE, ...)","prefix":"case.names","type":"function","description":"Simple utilities returning (non-missing) case names, and(non-eliminated) variable names.","leftLabel":"stats","rightLabel":"R: Case and Variable Names of Fitted Models"},"checkMFClasses":{"text":"checkMFClasses","snippet":".checkMFClasses(cl, m, ordNotOK = FALSE).MFclass(x).getXlevels(Terms, m)","prefix":"checkMFClasses","type":"function","description":".checkMFClasses checks if the variables used in a predictmethod agree in type with those used for fitting.","leftLabel":"stats","rightLabel":"R: Functions to Check the Type of Variables passed to Model..."},"chisq.test":{"text":"chisq.test","snippet":"chisq.test(x, y = NULL, correct = TRUE,           p = rep(1/length(x), length(x)), rescale.p = FALSE,           simulate.p.value = FALSE, B = 2000)","prefix":"chisq.test","type":"function","description":"chisq.test performs chi-squared contingency table testsand goodness-of-fit tests.","leftLabel":"stats","rightLabel":"R: Pearson's Chi-squared Test for Count Data"},"cmdscale":{"text":"cmdscale","snippet":"cmdscale(d, k = 2, eig = FALSE, add = FALSE, x.ret = FALSE,         list. = eig || add || x.ret)","prefix":"cmdscale","type":"function","description":"Classical multidimensional scaling (MDS) of a data matrix.Also known as principal coordinates analysis (Gower, 1966).","leftLabel":"stats","rightLabel":"R: Classical (Metric) Multidimensional Scaling"},"coef":{"text":"coef","snippet":"coef(object, ...)coefficients(object, ...)","prefix":"coef","type":"function","description":"coef is a generic function which extracts model coefficientsfrom objects returned by modeling functions.  coefficients isan alias for it.","leftLabel":"stats","rightLabel":"R: Extract Model Coefficients"},"complete.cases":{"text":"complete.cases","snippet":"complete.cases(...)","prefix":"complete.cases","type":"function","description":"Return a logical vector indicating which cases are complete, i.e.,have no missing values.","leftLabel":"stats","rightLabel":"R: Find Complete Cases"},"confint":{"text":"confint","snippet":"confint(object, parm, level = 0.95, ...)","prefix":"confint","type":"function","description":"Computes confidence intervals for one or more parameters in a fittedmodel.  There is a default and a method for objects inheriting from class\"lm\".","leftLabel":"stats","rightLabel":"R: Confidence Intervals for Model Parameters"},"constrOptim":{"text":"constrOptim","snippet":"constrOptim(theta, f, grad, ui, ci, mu = 1e-04, control = list(),            method = if(is.null(grad)) \"Nelder-Mead\" else \"BFGS\",            outer.iterations = 100, outer.eps = 1e-05, ...,            hessian = FALSE)","prefix":"constrOptim","type":"function","description":"Minimise a function subject to linear inequality constraints using anadaptive barrier algorithm.","leftLabel":"stats","rightLabel":"R: Linearly Constrained Optimization"},"contrast":{"text":"contrast","snippet":"contr.helmert(n, contrasts = TRUE, sparse = FALSE)contr.poly(n, scores = 1:n, contrasts = TRUE, sparse = FALSE)contr.sum(n, contrasts = TRUE, sparse = FALSE)contr.treatment(n, base = 1, contrasts = TRUE, sparse = FALSE)contr.SAS(n, contrasts = TRUE, sparse = FALSE)","prefix":"contrast","type":"function","description":"Return a matrix of contrasts.","leftLabel":"stats","rightLabel":"R: (Possibly Sparse) Contrast Matrices"},"contrasts":{"text":"contrasts","snippet":"contrasts(x, contrasts = TRUE, sparse = FALSE)contrasts(x, how.many) <- value","prefix":"contrasts","type":"function","description":"Set and view the contrasts associated with a factor.","leftLabel":"stats","rightLabel":"R: Get and Set Contrast Matrices"},"convolve":{"text":"convolve","snippet":"convolve(x, y, conj = TRUE, type = c(\"circular\", \"open\", \"filter\"))","prefix":"convolve","type":"function","description":"Use the Fast Fourier Transform to compute the several kinds ofconvolutions of two sequences.","leftLabel":"stats","rightLabel":"R: Convolution of Sequences via FFT"},"cophenetic":{"text":"cophenetic","snippet":"cophenetic(x)## Default S3 method:cophenetic(x)## S3 method for class 'dendrogram'cophenetic(x)","prefix":"cophenetic","type":"function","description":"Computes the cophenetic distances for a hierarchical clustering.","leftLabel":"stats","rightLabel":"R: Cophenetic Distances for a Hierarchical Clustering"},"cor":{"text":"cor","snippet":"var(x, y = NULL, na.rm = FALSE, use)cov(x, y = NULL, use = \"everything\",    method = c(\"pearson\", \"kendall\", \"spearman\"))cor(x, y = NULL, use = \"everything\",    method = c(\"pearson\", \"kendall\", \"spearman\"))cov2cor(V)","prefix":"cor","type":"function","description":"var, cov and cor compute the variance of xand the covariance or correlation of x and y if theseare vectors.   If x and y are matrices then thecovariances (or correlations) between the columns of x and thecolumns of y are computed.","leftLabel":"stats","rightLabel":"R: Correlation, Variance and Covariance (Matrices)"},"cor.test":{"text":"cor.test","snippet":"cor.test(x, ...)## Default S3 method:cor.test(x, y,         alternative = c(\"two.sided\", \"less\", \"greater\"),         method = c(\"pearson\", \"kendall\", \"spearman\"),         exact = NULL, conf.level = 0.95, continuity = FALSE, ...)## S3 method for class 'formula'cor.test(formula, data, subset, na.action, ...)","prefix":"cor.test","type":"function","description":"Test for association between paired samples, using one ofPearson's product moment correlation coefficient,Kendall's tau or Spearman's rho.","leftLabel":"stats","rightLabel":"R: Test for Association/Correlation Between Paired Samples"},"cov.wt":{"text":"cov.wt","snippet":"cov.wt(x, wt = rep(1/nrow(x), nrow(x)), cor = FALSE, center = TRUE,       method = c(\"unbiased\", \"ML\"))","prefix":"cov.wt","type":"function","description":"Returns a list containing estimates of the weighted covariance matrixand the mean of the data, and optionally of the (weighted) correlationmatrix.","leftLabel":"stats","rightLabel":"R: Weighted Covariance Matrices"},"cpgram":{"text":"cpgram","snippet":"cpgram(ts, taper = 0.1,       main = paste(\"Series: \", deparse(substitute(ts))),       ci.col = \"blue\")","prefix":"cpgram","type":"function","description":"Plots a cumulative periodogram.","leftLabel":"stats","rightLabel":"R: Plot Cumulative Periodogram"},"cutree":{"text":"cutree","snippet":"cutree(tree, k = NULL, h = NULL)","prefix":"cutree","type":"function","description":"Cuts a tree, e.g., as resulting from hclust, into severalgroups either by specifying the desired number(s) of groups or the cutheight(s).","leftLabel":"stats","rightLabel":"R: Cut a Tree into Groups of Data"},"decompose":{"text":"decompose","snippet":"decompose(x, type = c(\"additive\", \"multiplicative\"), filter = NULL)","prefix":"decompose","type":"function","description":"Decompose a time series into seasonal, trend and irregular componentsusing moving averages.  Deals with additive or multiplicativeseasonal component.","leftLabel":"stats","rightLabel":"R: Classical Seasonal Decomposition by Moving Averages"},"delete.response":{"text":"delete.response","snippet":"delete.response(termobj)reformulate(termlabels, response = NULL, intercept = TRUE)drop.terms(termobj, dropx = NULL, keep.response = FALSE)","prefix":"delete.response","type":"function","description":"delete.response returns a terms object for the samemodel but with no response variable.","leftLabel":"stats","rightLabel":"R: Modify Terms Objects"},"dendrapply":{"text":"dendrapply","snippet":"dendrapply(X, FUN, ...)","prefix":"dendrapply","type":"function","description":"Apply function FUN to each node of a dendrogramrecursively.  When  y <- dendrapply(x, fn), then y is adendrogram of the same graph structure as x and for each node,y.node[j] <- FUN( x.node[j], ...) (where y.node[j] is an(invalid!) notation for the j-th node of y.","leftLabel":"stats","rightLabel":"R: Apply a Function to All Nodes of a Dendrogram"},"dendrogram":{"text":"dendrogram","snippet":"as.dendrogram(object, ...)## S3 method for class 'hclust'as.dendrogram(object, hang = -1, check = TRUE, ...)## S3 method for class 'dendrogram'as.hclust(x, ...)## S3 method for class 'dendrogram'plot(x, type = c(\"rectangle\", \"triangle\"),      center = FALSE,      edge.root = is.leaf(x) || !is.null(attr(x,\"edgetext\")),      nodePar = NULL, edgePar = list(),      leaflab = c(\"perpendicular\", \"textlike\", \"none\"),      dLeaf = NULL, xlab = \"\", ylab = \"\", xaxt = \"n\", yaxt = \"s\",      horiz = FALSE, frame.plot = FALSE, xlim, ylim, ...)## S3 method for class 'dendrogram'cut(x, h, ...)## S3 method for class 'dendrogram'merge(x, y, ..., height,      adjust = c(\"auto\", \"add.max\", \"none\"))## S3 method for class 'dendrogram'nobs(object, ...)## S3 method for class 'dendrogram'print(x, digits, ...)## S3 method for class 'dendrogram'rev(x)## S3 method for class 'dendrogram'str(object, max.level = NA, digits.d = 3,    give.attr = FALSE, wid = getOption(\"width\"),    nest.lev = 0, indent.str = \"\",    last.str = getOption(\"str.dendrogram.last\"), stem = \"--\",    ...)is.leaf(object)","prefix":"dendrogram","type":"function","description":"Class \"dendrogram\" provides general functions for handlingtree-like structures.  It is intended as a replacement for similarfunctions in hierarchical clustering and classification/regressiontrees, such that all of these can use the same engine for plotting orcutting trees.","leftLabel":"stats","rightLabel":"R: General Tree Structures"},"density":{"text":"density","snippet":"density(x, ...)## Default S3 method:density(x, bw = \"nrd0\", adjust = 1,        kernel = c(\"gaussian\", \"epanechnikov\", \"rectangular\",                   \"triangular\", \"biweight\",                   \"cosine\", \"optcosine\"),        weights = NULL, window = kernel, width,        give.Rkern = FALSE,        n = 512, from, to, cut = 3, na.rm = FALSE, ...)","prefix":"density","type":"function","description":"The (S3) generic function density computes kernel densityestimates.  Its default method does so with the given kernel andbandwidth for univariate observations.","leftLabel":"stats","rightLabel":"R: Kernel Density Estimation"},"deriv":{"text":"deriv","snippet":"    D (expr, name) deriv(expr, ...)deriv3(expr, ...) ## Default S3 method:deriv(expr, namevec, function.arg = NULL, tag = \".expr\",       hessian = FALSE, ...) ## S3 method for class 'formula'deriv(expr, namevec, function.arg = NULL, tag = \".expr\",       hessian = FALSE, ...)## Default S3 method:deriv3(expr, namevec, function.arg = NULL, tag = \".expr\",       hessian = TRUE, ...)## S3 method for class 'formula'deriv3(expr, namevec, function.arg = NULL, tag = \".expr\",       hessian = TRUE, ...)","prefix":"deriv","type":"function","description":"Compute derivatives of simple expressions, symbolically and algorithmically.","leftLabel":"stats","rightLabel":"R: Symbolic and Algorithmic Derivatives of Simple Expressions"},"deviance":{"text":"deviance","snippet":"deviance(object, ...)","prefix":"deviance","type":"function","description":"Returns the deviance of a fitted model object.","leftLabel":"stats","rightLabel":"R: Model Deviance"},"df.residual":{"text":"df.residual","snippet":"df.residual(object, ...)","prefix":"df.residual","type":"function","description":"Returns the residual degrees-of-freedom extracted from a fitted modelobject.","leftLabel":"stats","rightLabel":"R: Residual Degrees-of-Freedom"},"diffinv":{"text":"diffinv","snippet":"diffinv(x, ...)## Default S3 method:diffinv(x, lag = 1, differences = 1, xi, ...)## S3 method for class 'ts'diffinv(x, lag = 1, differences = 1, xi, ...)","prefix":"diffinv","type":"function","description":"Computes the inverse function of the lagged differences functiondiff.","leftLabel":"stats","rightLabel":"R: Discrete Integration: Inverse of Differencing"},"dist":{"text":"dist","snippet":"dist(x, method = \"euclidean\", diag = FALSE, upper = FALSE, p = 2)as.dist(m, diag = FALSE, upper = FALSE)## Default S3 method:as.dist(m, diag = FALSE, upper = FALSE)## S3 method for class 'dist'print(x, diag = NULL, upper = NULL,      digits = getOption(\"digits\"), justify = \"none\",      right = TRUE, ...)## S3 method for class 'dist'as.matrix(x, ...)","prefix":"dist","type":"function","description":"This function computes and returns the distance matrix computed byusing the specified distance measure to compute the distances betweenthe rows of a data matrix.","leftLabel":"stats","rightLabel":"R: Distance Matrix Computation"},"dummy.coef":{"text":"dummy.coef","snippet":"dummy.coef(object, ...)## S3 method for class 'lm'dummy.coef(object, use.na = FALSE, ...)## S3 method for class 'aovlist'dummy.coef(object, use.na = FALSE, ...)","prefix":"dummy.coef","type":"function","description":"This extracts coefficients in terms of the original levels of thecoefficients rather than the coded variables.","leftLabel":"stats","rightLabel":"R: Extract Coefficients in Original Coding"},"ecdf":{"text":"ecdf","snippet":"ecdf(x)## S3 method for class 'ecdf'plot(x, ..., ylab=\"Fn(x)\", verticals = FALSE,     col.01line = \"gray70\", pch = 19)## S3 method for class 'ecdf'print(x, digits= getOption(\"digits\") - 2, ...)## S3 method for class 'ecdf'summary(object, ...)## S3 method for class 'ecdf'quantile(x, ...)","prefix":"ecdf","type":"function","description":"Compute an empirical cumulative distribution function, with severalmethods for plotting, printing and computing with such an“ecdf” object.","leftLabel":"stats","rightLabel":"R: Empirical Cumulative Distribution Function"},"eff.aovlist":{"text":"eff.aovlist","snippet":"eff.aovlist(aovlist)","prefix":"eff.aovlist","type":"function","description":"Computes the efficiencies of fixed-effect terms in an analysis ofvariance model with multiple strata.","leftLabel":"stats","rightLabel":"R: Compute Efficiencies of Multistratum Analysis of Variance"},"effects":{"text":"effects","snippet":"effects(object, ...)## S3 method for class 'lm'effects(object, set.sign = FALSE, ...)","prefix":"effects","type":"function","description":"Returns (orthogonal) effects from a fitted model, usually a linearmodel. This is a generic function, but currently only has a methods forobjects inheriting from classes \"lm\" and \"glm\".","leftLabel":"stats","rightLabel":"R: Effects from Fitted Model"},"embed":{"text":"embed","snippet":"embed (x, dimension = 1)","prefix":"embed","type":"function","description":"Embeds the time series x into a low-dimensionalEuclidean space.","leftLabel":"stats","rightLabel":"R: Embedding a Time Series"},"expand.model.frame":{"text":"expand.model.frame","snippet":"expand.model.frame(model, extras,                   envir = environment(formula(model)),                   na.expand = FALSE)","prefix":"expand.model.frame","type":"function","description":"Evaluates new variables as if they had been part of the formula of thespecified model.  This ensures that the same na.action andsubset arguments are applied and allows, for example, xto be recovered for a model using sin(x) as a predictor.","leftLabel":"stats","rightLabel":"R: Add new variables to a model frame"},"extractAIC":{"text":"extractAIC","snippet":"extractAIC(fit, scale, k = 2, ...)","prefix":"extractAIC","type":"function","description":"Computes the (generalized) Akaike An InformationCriterion for a fitted parametric model.","leftLabel":"stats","rightLabel":"R: Extract AIC from a Fitted Model"},"factanal":{"text":"factanal","snippet":"factanal(x, factors, data = NULL, covmat = NULL, n.obs = NA,         subset, na.action, start = NULL,         scores = c(\"none\", \"regression\", \"Bartlett\"),         rotation = \"varimax\", control = NULL, ...)","prefix":"factanal","type":"function","description":"Perform maximum-likelihood factor analysis on a covariance matrix ordata matrix.","leftLabel":"stats","rightLabel":"R: Factor Analysis"},"factor.scope":{"text":"factor.scope","snippet":"add.scope(terms1, terms2)drop.scope(terms1, terms2)factor.scope(factor, scope)","prefix":"factor.scope","type":"function","description":"add.scope and drop.scope compute those terms that can beindividually added to or dropped from a model while respecting thehierarchy of terms.","leftLabel":"stats","rightLabel":"R: Compute Allowed Changes in Adding to or Dropping from a..."},"family":{"text":"family","snippet":"family(object, ...)binomial(link = \"logit\")gaussian(link = \"identity\")Gamma(link = \"inverse\")inverse.gaussian(link = \"1/mu^2\")poisson(link = \"log\")quasi(link = \"identity\", variance = \"constant\")quasibinomial(link = \"logit\")quasipoisson(link = \"log\")","prefix":"family","type":"function","description":"Family objects provide a convenient way to specify the details of themodels used by functions such as glm.  See thedocumentation for glm for the details on how such modelfitting takes place.","leftLabel":"stats","rightLabel":"R: Family Objects for Models"},"fft":{"text":"fft","snippet":"fft(z, inverse = FALSE)mvfft(z, inverse = FALSE)","prefix":"fft","type":"function","description":"Computes the Discrete Fourier Transform (DFT) of an array with a fastalgorithm, the “Fast Fourier Transform” (FFT).","leftLabel":"stats","rightLabel":"R: Fast Discrete Fourier Transform (FFT)"},"filter":{"text":"filter","snippet":"filter(x, filter, method = c(\"convolution\", \"recursive\"),       sides = 2, circular = FALSE, init)","prefix":"filter","type":"function","description":"Applies linear filtering to a univariate time series or to each seriesseparately of a multivariate time series.","leftLabel":"stats","rightLabel":"R: Linear Filtering on a Time Series"},"fisher.test":{"text":"fisher.test","snippet":"fisher.test(x, y = NULL, workspace = 200000, hybrid = FALSE,            control = list(), or = 1, alternative = \"two.sided\",            conf.int = TRUE, conf.level = 0.95,            simulate.p.value = FALSE, B = 2000)","prefix":"fisher.test","type":"function","description":"Performs Fisher's exact test for testing the null of independence ofrows and columns in a contingency table with fixed marginals.","leftLabel":"stats","rightLabel":"R: Fisher's Exact Test for Count Data"},"fitted.values":{"text":"fitted.values","snippet":"fitted(object, ...)fitted.values(object, ...)","prefix":"fitted.values","type":"function","description":"fitted is a generic function which extracts fitted values fromobjects returned by modeling functions.  fitted.values is analias for it.","leftLabel":"stats","rightLabel":"R: Extract Model Fitted Values"},"fivenum":{"text":"fivenum","snippet":"fivenum(x, na.rm = TRUE)","prefix":"fivenum","type":"function","description":"Returns Tukey's five number summary (minimum, lower-hinge, median,upper-hinge, maximum) for the input data.","leftLabel":"stats","rightLabel":"R: Tukey Five-Number Summaries"},"fligner.test":{"text":"fligner.test","snippet":"fligner.test(x, ...)## Default S3 method:fligner.test(x, g, ...)## S3 method for class 'formula'fligner.test(formula, data, subset, na.action, ...)","prefix":"fligner.test","type":"function","description":"Performs a Fligner-Killeen (median) test of the null that thevariances in each of the groups (samples) are the same.","leftLabel":"stats","rightLabel":"R: Fligner-Killeen Test of Homogeneity of Variances"},"formula":{"text":"formula","snippet":"formula(x, ...)as.formula(object, env = parent.frame())## S3 method for class 'formula'print(x, showEnv = !identical(e, .GlobalEnv), ...)","prefix":"formula","type":"function","description":"The generic function formula and its specific methods provide away of extracting formulae which have been included in other objects.","leftLabel":"stats","rightLabel":"R: Model Formulae"},"formula.nls":{"text":"formula.nls","snippet":"## S3 method for class 'nls'formula(x, ...)","prefix":"formula.nls","type":"function","description":"Returns the model used to fit object.","leftLabel":"stats","rightLabel":"R: Extract Model Formula from nls Object"},"friedman.test":{"text":"friedman.test","snippet":"friedman.test(y, ...)## Default S3 method:friedman.test(y, groups, blocks, ...)## S3 method for class 'formula'friedman.test(formula, data, subset, na.action, ...)","prefix":"friedman.test","type":"function","description":"Performs a Friedman rank sum test with unreplicated blocked data.","leftLabel":"stats","rightLabel":"R: Friedman Rank Sum Test"},"ftable":{"text":"ftable","snippet":"ftable(x, ...)## Default S3 method:ftable(..., exclude = c(NA, NaN), row.vars = NULL,       col.vars = NULL)","prefix":"ftable","type":"function","description":"Create ‘flat’ contingency tables.","leftLabel":"stats","rightLabel":"R: Flat Contingency Tables"},"ftable.formula":{"text":"ftable.formula","snippet":"## S3 method for class 'formula'ftable(formula, data = NULL, subset, na.action, ...)","prefix":"ftable.formula","type":"function","description":"Produce or manipulate a flat contingency table usingformula notation.","leftLabel":"stats","rightLabel":"R: Formula Notation for Flat Contingency Tables"},"getInitial":{"text":"getInitial","snippet":"getInitial(object, data, ...)","prefix":"getInitial","type":"function","description":"This function evaluates initial parameter estimates for a nonlinearregression model.  If data is a parameterized data frame orpframe object, its parameters attribute is returned.Otherwise the object is examined to see if it contains a call to aselfStart object whose initial attribute can beevaluated.","leftLabel":"stats","rightLabel":"R: Get Initial Parameter Estimates"},"glm":{"text":"glm","snippet":"glm(formula, family = gaussian, data, weights, subset,    na.action, start = NULL, etastart, mustart, offset,    control = list(...), model = TRUE, method = \"glm.fit\",    x = FALSE, y = TRUE, contrasts = NULL, ...)glm.fit(x, y, weights = rep(1, nobs),        start = NULL, etastart = NULL, mustart = NULL,        offset = rep(0, nobs), family = gaussian(),        control = list(), intercept = TRUE)## S3 method for class 'glm'weights(object, type = c(\"prior\", \"working\"), ...)","prefix":"glm","type":"function","description":"glm is used to fit generalized linear models, specified bygiving a symbolic description of the linear predictor and adescription of the error distribution.","leftLabel":"stats","rightLabel":"R: Fitting Generalized Linear Models"},"glm.control":{"text":"glm.control","snippet":"glm.control(epsilon = 1e-8, maxit = 25, trace = FALSE)","prefix":"glm.control","type":"function","description":"Auxiliary function for glm fitting.Typically only used internally by glm.fit, but may beused to construct a control argument to either function.","leftLabel":"stats","rightLabel":"R: Auxiliary for Controlling GLM Fitting"},"glm.summaries":{"text":"glm.summaries","snippet":"## S3 method for class 'glm'family(object, ...)## S3 method for class 'glm'residuals(object, type = c(\"deviance\", \"pearson\", \"working\",                           \"response\", \"partial\"), ...)","prefix":"glm.summaries","type":"function","description":"These functions are all methods for class glm orsummary.glm objects.","leftLabel":"stats","rightLabel":"R: Accessing Generalized Linear Model Fits"},"hclust":{"text":"hclust","snippet":"hclust(d, method = \"complete\", members = NULL)## S3 method for class 'hclust'plot(x, labels = NULL, hang = 0.1, check = TRUE,     axes = TRUE, frame.plot = FALSE, ann = TRUE,     main = \"Cluster Dendrogram\",     sub = NULL, xlab = NULL, ylab = \"Height\", ...)","prefix":"hclust","type":"function","description":"Hierarchical cluster analysis on a set of dissimilarities andmethods for analyzing it.","leftLabel":"stats","rightLabel":"R: Hierarchical Clustering"},"heatmap":{"text":"heatmap","snippet":"heatmap(x, Rowv = NULL, Colv = if(symm)\"Rowv\" else NULL,        distfun = dist, hclustfun = hclust,        reorderfun = function(d, w) reorder(d, w),        add.expr, symm = FALSE, revC = identical(Colv, \"Rowv\"),        scale = c(\"row\", \"column\", \"none\"), na.rm = TRUE,        margins = c(5, 5), ColSideColors, RowSideColors,        cexRow = 0.2 + 1/log10(nr), cexCol = 0.2 + 1/log10(nc),        labRow = NULL, labCol = NULL, main = NULL,        xlab = NULL, ylab = NULL,        keep.dendro = FALSE, verbose = getOption(\"verbose\"), ...)","prefix":"heatmap","type":"function","description":"A heat map is a false color image (basicallyimage(t(x))) with a dendrogram added to the left sideand to the top.  Typically, reordering of the rows and columnsaccording to some set of values (row or column means) within therestrictions imposed by the dendrogram is carried out.","leftLabel":"stats","rightLabel":"R: Draw a Heat Map"},"identify.hclust":{"text":"identify.hclust","snippet":"## S3 method for class 'hclust'identify(x, FUN = NULL, N = 20, MAXCLUSTER = 20, DEV.FUN = NULL,          ...)","prefix":"identify.hclust","type":"function","description":"identify.hclust reads the position of the graphics pointer when the(first) mouse button is pressed.  It then cuts the tree at thevertical position of the pointer and highlights the cluster containingthe horizontal position of the pointer.  Optionally a function isapplied to the index of data points contained in the cluster.","leftLabel":"stats","rightLabel":"R: Identify Clusters in a Dendrogram"},"influence.measures":{"text":"influence.measures","snippet":"influence.measures(model)rstandard(model, ...)## S3 method for class 'lm'rstandard(model, infl = lm.influence(model, do.coef = FALSE),          sd = sqrt(deviance(model)/df.residual(model)),          type = c(\"sd.1\", \"predictive\"), ...)## S3 method for class 'glm'rstandard(model, infl = influence(model, do.coef = FALSE),          type = c(\"deviance\", \"pearson\"), ...)rstudent(model, ...)## S3 method for class 'lm'rstudent(model, infl = lm.influence(model, do.coef = FALSE),         res = infl$wt.res, ...)## S3 method for class 'glm'rstudent(model, infl = influence(model, do.coef = FALSE), ...)dffits(model, infl = , res = )dfbeta(model, ...)## S3 method for class 'lm'dfbeta(model, infl = lm.influence(model, do.coef = TRUE), ...)dfbetas(model, ...)## S3 method for class 'lm'dfbetas(model, infl = lm.influence(model, do.coef = TRUE), ...)covratio(model, infl = lm.influence(model, do.coef = FALSE),         res = weighted.residuals(model))cooks.distance(model, ...)## S3 method for class 'lm'cooks.distance(model, infl = lm.influence(model, do.coef = FALSE),               res = weighted.residuals(model),               sd = sqrt(deviance(model)/df.residual(model)),               hat = infl$hat, ...)## S3 method for class 'glm'cooks.distance(model, infl = influence(model, do.coef = FALSE),               res = infl$pear.res,               dispersion = summary(model)$dispersion,               hat = infl$hat, ...)hatvalues(model, ...)## S3 method for class 'lm'hatvalues(model, infl = lm.influence(model, do.coef = FALSE), ...)hat(x, intercept = TRUE)","prefix":"influence.measures","type":"function","description":"This suite of functions can be used to compute some of the regression(leave-one-out deletion) diagnostics for linear and generalized linearmodels discussed in Belsley, Kuh and Welsch (1980), Cook and Weisberg (1982),etc.","leftLabel":"stats","rightLabel":"R: Regression Deletion Diagnostics"},"integrate":{"text":"integrate","snippet":"integrate(f, lower, upper, ..., subdivisions = 100L,          rel.tol = .Machine$double.eps^0.25, abs.tol = rel.tol,          stop.on.error = TRUE, keep.xy = FALSE, aux = NULL)","prefix":"integrate","type":"function","description":"Adaptive quadrature of functions of one variable over a finite orinfinite interval.","leftLabel":"stats","rightLabel":"R: Integration of One-Dimensional Functions"},"interaction.plot":{"text":"interaction.plot","snippet":"interaction.plot(x.factor, trace.factor, response, fun = mean,                 type = c(\"l\", \"p\", \"b\", \"o\", \"c\"), legend = TRUE,                 trace.label = deparse(substitute(trace.factor)),                 fixed = FALSE,                 xlab = deparse(substitute(x.factor)),                 ylab = ylabel,                 ylim = range(cells, na.rm = TRUE),                 lty = nc:1, col = 1, pch = c(1:9, 0, letters),                 xpd = NULL, leg.bg = par(\"bg\"), leg.bty = \"n\",                 xtick = FALSE, xaxt = par(\"xaxt\"), axes = TRUE,                 ...)","prefix":"interaction.plot","type":"function","description":"Plots the mean (or other summary) of the response for two-waycombinations of factors, thereby illustrating possible interactions.","leftLabel":"stats","rightLabel":"R: Two-way Interaction Plot"},"is.empty":{"text":"is.empty","snippet":"is.empty.model(x)","prefix":"is.empty","type":"function","description":"R's formula notation allows models with no intercept and nopredictors. These require special handling internally.is.empty.model() checks whether an object describes an emptymodel.","leftLabel":"stats","rightLabel":"R: Test if a Model's Formula is Empty"},"isoreg":{"text":"isoreg","snippet":"isoreg(x, y = NULL)","prefix":"isoreg","type":"function","description":"Compute the isotonic (monotonely increasing nonparametric) leastsquares regression which is piecewise constant.","leftLabel":"stats","rightLabel":"R: Isotonic / Monotone Regression"},"kernapply":{"text":"kernapply","snippet":"kernapply(x, ...)## Default S3 method:kernapply(x, k, circular = FALSE, ...)## S3 method for class 'ts'kernapply(x, k, circular = FALSE, ...)## S3 method for class 'vector'kernapply(x, k, circular = FALSE, ...)## S3 method for class 'tskernel'kernapply(x, k, ...)","prefix":"kernapply","type":"function","description":"kernapply computes the convolution between an input sequenceand a specific kernel.","leftLabel":"stats","rightLabel":"R: Apply Smoothing Kernel"},"kernel":{"text":"kernel","snippet":"kernel(coef, m = 2, r, name)df.kernel(k)bandwidth.kernel(k)is.tskernel(k)## S3 method for class 'tskernel'plot(x, type = \"h\", xlab = \"k\", ylab = \"W[k]\",     main = attr(x,\"name\"), ...)","prefix":"kernel","type":"function","description":"The \"tskernel\" class is designed to represent discretesymmetric normalized smoothing kernels.  These kernels can be used tosmooth vectors, matrices, or time series objects.","leftLabel":"stats","rightLabel":"R: Smoothing Kernel Objects"},"kmeans":{"text":"kmeans","snippet":"kmeans(x, centers, iter.max = 10, nstart = 1,       algorithm = c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\",                     \"MacQueen\"), trace=FALSE)## S3 method for class 'kmeans'fitted(object, method = c(\"centers\", \"classes\"), ...)","prefix":"kmeans","type":"function","description":"Perform k-means clustering on a data matrix.","leftLabel":"stats","rightLabel":"R: K-Means Clustering"},"kruskal.test":{"text":"kruskal.test","snippet":"kruskal.test(x, ...)## Default S3 method:kruskal.test(x, g, ...)## S3 method for class 'formula'kruskal.test(formula, data, subset, na.action, ...)","prefix":"kruskal.test","type":"function","description":"Performs a Kruskal-Wallis rank sum test.","leftLabel":"stats","rightLabel":"R: Kruskal-Wallis Rank Sum Test"},"ks.test":{"text":"ks.test","snippet":"ks.test(x, y, ...,        alternative = c(\"two.sided\", \"less\", \"greater\"),        exact = NULL)","prefix":"ks.test","type":"function","description":"Perform a one- or two-sample Kolmogorov-Smirnov test.","leftLabel":"stats","rightLabel":"R: Kolmogorov-Smirnov Tests"},"ksmooth":{"text":"ksmooth","snippet":"ksmooth(x, y, kernel = c(\"box\", \"normal\"), bandwidth = 0.5,        range.x = range(x),        n.points = max(100L, length(x)), x.points)","prefix":"ksmooth","type":"function","description":"The Nadaraya–Watson kernel regression estimate.","leftLabel":"stats","rightLabel":"R: Kernel Regression Smoother"},"lag":{"text":"lag","snippet":"lag(x, ...)## Default S3 method:lag(x, k = 1, ...)","prefix":"lag","type":"function","description":"Compute a lagged version of a time series, shifting the time baseback by a given number of observations.","leftLabel":"stats","rightLabel":"R: Lag a Time Series"},"lag.plot":{"text":"lag.plot","snippet":"lag.plot(x, lags = 1, layout = NULL, set.lags = 1:lags,         main = NULL, asp = 1,         diag = TRUE, diag.col = \"gray\", type = \"p\", oma = NULL,         ask = NULL, do.lines = (n <= 150), labels = do.lines,         ...)","prefix":"lag.plot","type":"function","description":"Plot time series against lagged versions of themselves.Helps visualizing ‘auto-dependence’ even when auto-correlationsvanish.","leftLabel":"stats","rightLabel":"R: Time Series Lag Plots"},"line":{"text":"line","snippet":"line(x, y)","prefix":"line","type":"function","description":"Fit a line robustly as recommended in Exploratory Data Analysis.","leftLabel":"stats","rightLabel":"R: Robust Line Fitting"},"listof":{"text":"listof","snippet":{},"prefix":"listof","type":"function","description":"Class \"listof\" is used by aov and the \"lm\"method of alias for lists of model fits or partsthereof.  It is simply a list with an assigned class to control the waymethods, especially printing, act on it.","leftLabel":"stats","rightLabel":"R: A Class for Lists of (Parts of) Model Fits"},"lm":{"text":"lm","snippet":"lm(formula, data, subset, weights, na.action,   method = \"qr\", model = TRUE, x = FALSE, y = FALSE, qr = TRUE,   singular.ok = TRUE, contrasts = NULL, offset, ...)","prefix":"lm","type":"function","description":"lm is used to fit linear models.It can be used to carry out regression,single stratum analysis of variance andanalysis of covariance (although aov may provide a moreconvenient interface for these).","leftLabel":"stats","rightLabel":"R: Fitting Linear Models"},"lm.influence":{"text":"lm.influence","snippet":"influence(model, ...)## S3 method for class 'lm'influence(model, do.coef = TRUE, ...)## S3 method for class 'glm'influence(model, do.coef = TRUE, ...)lm.influence(model, do.coef = TRUE)","prefix":"lm.influence","type":"function","description":"This function provides the basic quantities which areused in forming a wide variety of diagnostics forchecking the quality of regression fits.","leftLabel":"stats","rightLabel":"R: Regression Diagnostics"},"lm.summaries":{"text":"lm.summaries","snippet":"## S3 method for class 'lm'family(object, ...)## S3 method for class 'lm'formula(x, ...)## S3 method for class 'lm'residuals(object,          type = c(\"working\", \"response\", \"deviance\", \"pearson\",                   \"partial\"),          ...)## S3 method for class 'lm'labels(object, ...)","prefix":"lm.summaries","type":"function","description":"All these functions are methods for class \"lm\"  objects.","leftLabel":"stats","rightLabel":"R: Accessing Linear Model Fits"},"lmfit":{"text":"lmfit","snippet":"lm.fit (x, y,    offset = NULL, method = \"qr\", tol = 1e-7,       singular.ok = TRUE, ...)lm.wfit(x, y, w, offset = NULL, method = \"qr\", tol = 1e-7,        singular.ok = TRUE, ...).lm.fit(x, y, tol = 1e-7)","prefix":"lmfit","type":"function","description":"These are the basic computing engines called by lm usedto fit linear models.  These should usually not be useddirectly unless by experienced users.  .lm.fit() is bare bonewrapper to the innermost QR-based C code, on whichglm.fit and lsfit are based as well, foreven more experienced users.","leftLabel":"stats","rightLabel":"R: Fitter Functions for Linear Models"},"loadings":{"text":"loadings","snippet":"loadings(x, ...)## S3 method for class 'loadings'print(x, digits = 3, cutoff = 0.1, sort = FALSE, ...)## S3 method for class 'factanal'print(x, digits = 3, ...)","prefix":"loadings","type":"function","description":"Extract or print loadings in factor analysis (or principalcomponents analysis).","leftLabel":"stats","rightLabel":"R: Print Loadings in Factor Analysis"},"loess":{"text":"loess","snippet":"loess(formula, data, weights, subset, na.action, model = FALSE,      span = 0.75, enp.target, degree = 2,      parametric = FALSE, drop.square = FALSE, normalize = TRUE,      family = c(\"gaussian\", \"symmetric\"),      method = c(\"loess\", \"model.frame\"),      control = loess.control(...), ...)","prefix":"loess","type":"function","description":"Fit a polynomial surface determined by one or more numericalpredictors, using local fitting.","leftLabel":"stats","rightLabel":"R: Local Polynomial Regression Fitting"},"loess.control":{"text":"loess.control","snippet":"loess.control(surface = c(\"interpolate\", \"direct\"),              statistics = c(\"approximate\", \"exact\", \"none\"),              trace.hat = c(\"exact\", \"approximate\"),              cell = 0.2, iterations = 4, iterTrace = FALSE, ...)","prefix":"loess.control","type":"function","description":"Set control parameters for loess fits.","leftLabel":"stats","rightLabel":"R: Set Parameters for Loess"},"logLik":{"text":"logLik","snippet":"logLik(object, ...)## S3 method for class 'lm'logLik(object, REML = FALSE, ...)","prefix":"logLik","type":"function","description":"This function is generic; method functions can be written to handlespecific classes of objects.  Classes which have methods for thisfunction include: \"glm\", \"lm\", \"nls\" and\"Arima\".  Packages contain methods for other classes, such as\"fitdistr\", \"negbin\" and \"polr\" in packageMASS, \"multinom\" in package nnet and\"gls\", \"gnls\" \"lme\" and others in packagenlme.","leftLabel":"stats","rightLabel":"R: Extract Log-Likelihood"},"loglin":{"text":"loglin","snippet":"loglin(table, margin, start = rep(1, length(table)), fit = FALSE,       eps = 0.1, iter = 20, param = FALSE, print = TRUE)","prefix":"loglin","type":"function","description":"loglin is used to fit log-linear models to multidimensionalcontingency tables by Iterative Proportional Fitting.","leftLabel":"stats","rightLabel":"R: Fitting Log-Linear Models"},"lowess":{"text":"lowess","snippet":"lowess(x, y = NULL, f = 2/3, iter = 3, delta = 0.01 * diff(range(x)))","prefix":"lowess","type":"function","description":"This function performs the computations for theLOWESS smoother which uses locally-weighted polynomialregression (see the references).","leftLabel":"stats","rightLabel":"R: Scatter Plot Smoothing"},"ls.diag":{"text":"ls.diag","snippet":"ls.diag(ls.out)","prefix":"ls.diag","type":"function","description":"Computes basic statistics, including standard errors, t- and p-valuesfor the regression coefficients.","leftLabel":"stats","rightLabel":"R: Compute Diagnostics for 'lsfit' Regression Results"},"ls.print":{"text":"ls.print","snippet":"ls.print(ls.out, digits = 4, print.it = TRUE)","prefix":"ls.print","type":"function","description":"Computes basic statistics, including standard errors, t- and p-valuesfor the regression coefficients and prints them if print.it isTRUE.","leftLabel":"stats","rightLabel":"R: Print 'lsfit' Regression Results"},"lsfit":{"text":"lsfit","snippet":"lsfit(x, y, wt = NULL, intercept = TRUE, tolerance = 1e-07,      yname = NULL)","prefix":"lsfit","type":"function","description":"The least squares estimate of b in the model","leftLabel":"stats","rightLabel":"R: Find the Least Squares Fit"},"mad":{"text":"mad","snippet":"mad(x, center = median(x), constant = 1.4826, na.rm = FALSE,    low = FALSE, high = FALSE)","prefix":"mad","type":"function","description":"Compute the median absolute deviation, i.e., the (lo-/hi-) median ofthe absolute deviations from the median, and (by default) adjust by afactor for asymptotically normal consistency.","leftLabel":"stats","rightLabel":"R: Median Absolute Deviation"},"mahalanobis":{"text":"mahalanobis","snippet":"mahalanobis(x, center, cov, inverted = FALSE, ...)","prefix":"mahalanobis","type":"function","description":"Returns the squared Mahalanobis distance of all rows in x and thevector mu = center with respect toSigma = cov.This is (for vector x) defined as","leftLabel":"stats","rightLabel":"R: Mahalanobis Distance"},"make.link":{"text":"make.link","snippet":"make.link(link)","prefix":"make.link","type":"function","description":"This function is used with the family functions inglm().Given the name of a link, it returns a link function, an inverse linkfunction, the derivative dmu/deta and a functionfor domain checking.","leftLabel":"stats","rightLabel":"R: Create a Link for GLM Families"},"makepredictcall":{"text":"makepredictcall","snippet":"makepredictcall(var, call)","prefix":"makepredictcall","type":"function","description":"A utility to help model.frame.default create the rightmatrices when predicting from models with terms like (univariate)poly or ns.","leftLabel":"stats","rightLabel":"R: Utility Function for Safe Prediction"},"manova":{"text":"manova","snippet":"manova(...)","prefix":"manova","type":"function","description":"A class for the multivariate analysis of variance.","leftLabel":"stats","rightLabel":"R: Multivariate Analysis of Variance"},"mantelhaen.test":{"text":"mantelhaen.test","snippet":"mantelhaen.test(x, y = NULL, z = NULL,                alternative = c(\"two.sided\", \"less\", \"greater\"),                correct = TRUE, exact = FALSE, conf.level = 0.95)","prefix":"mantelhaen.test","type":"function","description":"Performs a Cochran-Mantel-Haenszel chi-squared test of the null thattwo nominal variables are conditionally independent in each stratum,assuming that there is no three-way interaction.","leftLabel":"stats","rightLabel":"R: Cochran-Mantel-Haenszel Chi-Squared Test for Count Data"},"mauchly.test":{"text":"mauchly.test","snippet":"mauchly.test(object, ...)## S3 method for class 'mlm'mauchly.test(object, ...)## S3 method for class 'SSD'mauchly.test(object, Sigma = diag(nrow = p),   T = Thin.row(proj(M) - proj(X)), M = diag(nrow = p), X = ~0,   idata = data.frame(index = seq_len(p)), ...)","prefix":"mauchly.test","type":"function","description":"Tests whether a Wishart-distributed covariance matrix (ortransformation thereof) is proportional to a given matrix.","leftLabel":"stats","rightLabel":"R: Mauchly's Test of Sphericity"},"mcnemar.test":{"text":"mcnemar.test","snippet":"mcnemar.test(x, y = NULL, correct = TRUE)","prefix":"mcnemar.test","type":"function","description":"Performs McNemar's chi-squared test for symmetry of rows and columnsin a two-dimensional contingency table.","leftLabel":"stats","rightLabel":"R: McNemar's Chi-squared Test for Count Data"},"median":{"text":"median","snippet":"median(x, na.rm = FALSE, ...)","prefix":"median","type":"function","description":"Compute the sample median.","leftLabel":"stats","rightLabel":"R: Median Value"},"medpolish":{"text":"medpolish","snippet":"medpolish(x, eps = 0.01, maxiter = 10, trace.iter = TRUE,          na.rm = FALSE)","prefix":"medpolish","type":"function","description":"Fits an additive model (twoway decomposition) using Tukey'smedian polish procedure.","leftLabel":"stats","rightLabel":"R: Median Polish (Robust Twoway Decomposition) of a Matrix"},"model.extract":{"text":"model.extract","snippet":"model.extract(frame, component)model.offset(x)model.response(data, type = \"any\")model.weights(x)","prefix":"model.extract","type":"function","description":"Returns the response, offset, subset, weights or otherspecial components of a model frame passed as optional arguments tomodel.frame.","leftLabel":"stats","rightLabel":"R: Extract Components from a Model Frame"},"model.frame":{"text":"model.frame","snippet":"model.frame(formula, ...)## Default S3 method:model.frame(formula, data = NULL,            subset = NULL, na.action = na.fail,            drop.unused.levels = FALSE, xlev = NULL, ...)## S3 method for class 'aovlist'model.frame(formula, data = NULL, ...)## S3 method for class 'glm'model.frame(formula, ...)## S3 method for class 'lm'model.frame(formula, ...)get_all_vars(formula, data, ...)","prefix":"model.frame","type":"function","description":"model.frame (a generic function) and its methods return adata.frame with the variables needed to useformula and any ... arguments.","leftLabel":"stats","rightLabel":"R: Extracting the Model Frame from a Formula or Fit"},"model.matrix":{"text":"model.matrix","snippet":"model.matrix(object, ...)## Default S3 method:model.matrix(object, data = environment(object),             contrasts.arg = NULL, xlev = NULL, ...)","prefix":"model.matrix","type":"function","description":"model.matrix creates a design (or model) matrix, e.g., byexpanding factors to a set of dummy variables (depending on thecontrasts) and expanding interactions similarly.","leftLabel":"stats","rightLabel":"R: Construct Design Matrices"},"model.tables":{"text":"model.tables","snippet":"model.tables(x, ...)## S3 method for class 'aov'model.tables(x, type = \"effects\", se = FALSE, cterms, ...)## S3 method for class 'aovlist'model.tables(x, type = \"effects\", se = FALSE, ...)","prefix":"model.tables","type":"function","description":"Computes summary tables for model fits, especially complex aovfits.","leftLabel":"stats","rightLabel":"R: Compute Tables of Results from an Aov Model Fit"},"monthplot":{"text":"monthplot","snippet":"monthplot(x, ...)## S3 method for class 'stl'monthplot(x, labels = NULL, ylab = choice, choice = \"seasonal\",          ...)## S3 method for class 'StructTS'monthplot(x, labels = NULL, ylab = choice, choice = \"sea\", ...)## S3 method for class 'ts'monthplot(x, labels = NULL, times = time(x), phase = cycle(x),             ylab = deparse(substitute(x)), ...)## Default S3 method:monthplot(x, labels = 1L:12L,          ylab = deparse(substitute(x)),          times = seq_along(x),          phase = (times - 1L)%%length(labels) + 1L, base = mean,          axes = TRUE, type = c(\"l\", \"h\"), box = TRUE,          add = FALSE,          col = par(\"col\"), lty = par(\"lty\"), lwd = par(\"lwd\"),          col.base = col, lty.base = lty, lwd.base = lwd, ...)","prefix":"monthplot","type":"function","description":"These functions plot seasonal (or other) subseries of a time series.For each season (or other category), a time series is plotted.","leftLabel":"stats","rightLabel":"R: Plot a Seasonal or other Subseries from a Time Series"},"mood.test":{"text":"mood.test","snippet":"mood.test(x, ...)## Default S3 method:mood.test(x, y,          alternative = c(\"two.sided\", \"less\", \"greater\"), ...)## S3 method for class 'formula'mood.test(formula, data, subset, na.action, ...)","prefix":"mood.test","type":"function","description":"Performs Mood's two-sample test for a difference in scale parameters.","leftLabel":"stats","rightLabel":"R: Mood Two-Sample Test of Scale"},"na.action":{"text":"na.action","snippet":"na.action(object, ...)","prefix":"na.action","type":"function","description":"Extract information on the NA action used to create an object.","leftLabel":"stats","rightLabel":"R: NA Action"},"na.contiguous":{"text":"na.contiguous","snippet":"na.contiguous(object, ...)","prefix":"na.contiguous","type":"function","description":"Find the longest consecutive stretch of non-missing values in a timeseries object.  (In the event of a tie, the first such stretch.)","leftLabel":"stats","rightLabel":"R: Find Longest Contiguous Stretch of non-NAs"},"na.fail":{"text":"na.fail","snippet":"na.fail(object, ...)na.omit(object, ...)na.exclude(object, ...)na.pass(object, ...)","prefix":"na.fail","type":"function","description":"These generic functions are useful for dealing with NAsin e.g., data frames.na.fail returns the object if it does not contain anymissing values, and signals an error otherwise.na.omit returns the object with incomplete cases removed.na.pass returns the object unchanged.","leftLabel":"stats","rightLabel":"R: Handle Missing Values in Objects"},"nafns":{"text":"nafns","snippet":"naresid(omit, x, ...)napredict(omit, x, ...)","prefix":"nafns","type":"function","description":"Use missing value information to adjust residuals and predictions.","leftLabel":"stats","rightLabel":"R: Adjust for Missing Values"},"naprint":{"text":"naprint","snippet":"naprint(x, ...)","prefix":"naprint","type":"function","description":"Use missing value information to report the effects of an na.action.","leftLabel":"stats","rightLabel":"R: Adjust for Missing Values"},"nextn":{"text":"nextn","snippet":"nextn(n, factors = c(2,3,5))","prefix":"nextn","type":"function","description":"nextn returns the smallest integer,greater than or equal to n, which can be obtainedas a product of powers of the values contained in factors.nextn is intended to be used to find a suitable lengthto zero-pad the argument of fft toso that the transform is computed quickly.The default value for factors ensures this.","leftLabel":"stats","rightLabel":"R: Highly Composite Numbers"},"nlm":{"text":"nlm","snippet":"nlm(f, p, ..., hessian = FALSE, typsize = rep(1, length(p)),    fscale = 1, print.level = 0, ndigit = 12, gradtol = 1e-6,    stepmax = max(1000 * sqrt(sum((p/typsize)^2)), 1000),    steptol = 1e-6, iterlim = 100, check.analyticals = TRUE)","prefix":"nlm","type":"function","description":"This function carries out a minimization of the function fusing a Newton-type algorithm.  See the references for details.","leftLabel":"stats","rightLabel":"R: Non-Linear Minimization"},"nlminb":{"text":"nlminb","snippet":"nlminb(start, objective, gradient = NULL, hessian = NULL, ...,       scale = 1, control = list(), lower = -Inf, upper = Inf)","prefix":"nlminb","type":"function","description":"Unconstrained and box-constrained optimization using PORT routines.","leftLabel":"stats","rightLabel":"R: Optimization using PORT routines"},"nls":{"text":"nls","snippet":"nls(formula, data, start, control, algorithm,    trace, subset, weights, na.action, model,    lower, upper, ...)","prefix":"nls","type":"function","description":"Determine the nonlinear (weighted) least-squares estimates of theparameters of a nonlinear model.","leftLabel":"stats","rightLabel":"R: Nonlinear Least Squares"},"nls.control":{"text":"nls.control","snippet":"nls.control(maxiter = 50, tol = 1e-05, minFactor = 1/1024,            printEval = FALSE, warnOnly = FALSE)","prefix":"nls.control","type":"function","description":"Allow the user to set some characteristics of the nlsnonlinear least squares algorithm.","leftLabel":"stats","rightLabel":"R: Control the Iterations in nls"},"nobs":{"text":"nobs","snippet":"nobs(object, ...)## Default S3 method:nobs(object, use.fallback = FALSE, ...)","prefix":"nobs","type":"function","description":"Extract the number of ‘observations’ from a model fit.  This isprincipally intended to be used in computing BIC (see AIC).","leftLabel":"stats","rightLabel":"R: Extract the Number of Observations from a Fit."},"numericDeriv":{"text":"numericDeriv","snippet":"numericDeriv(expr, theta, rho = parent.frame(), dir = 1.0)","prefix":"numericDeriv","type":"function","description":"numericDeriv numerically evaluates the gradient of an expression.","leftLabel":"stats","rightLabel":"R: Evaluate Derivatives Numerically"},"offset":{"text":"offset","snippet":"offset(object)","prefix":"offset","type":"function","description":"An offset is a term to be added to a linear predictor, such as in ageneralised linear model, with known coefficient 1 rather than anestimated coefficient.","leftLabel":"stats","rightLabel":"R: Include an Offset in a Model Formula"},"oneway.test":{"text":"oneway.test","snippet":"oneway.test(formula, data, subset, na.action, var.equal = FALSE)","prefix":"oneway.test","type":"function","description":"Test whether two or more samples from normal distributions have thesame means.  The variances are not necessarily assumed to be equal.","leftLabel":"stats","rightLabel":"R: Test for Equal Means in a One-Way Layout"},"optim":{"text":"optim","snippet":"optim(par, fn, gr = NULL, ...,      method = c(\"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\",                 \"Brent\"),      lower = -Inf, upper = Inf,      control = list(), hessian = FALSE)optimHess(par, fn, gr = NULL, ..., control = list())","prefix":"optim","type":"function","description":"General-purpose optimization based on Nelder–Mead, quasi-Newton andconjugate-gradient algorithms. It includes an option forbox-constrained optimization and simulated annealing.","leftLabel":"stats","rightLabel":"R: General-purpose Optimization"},"optimize":{"text":"optimize","snippet":"optimize(f, interval, ..., lower = min(interval), upper = max(interval),         maximum = FALSE,         tol = .Machine$double.eps^0.25)optimise(f, interval, ..., lower = min(interval), upper = max(interval),         maximum = FALSE,         tol = .Machine$double.eps^0.25)","prefix":"optimize","type":"function","description":"The function optimize searches the interval fromlower to upper for a minimum or maximum ofthe function f with respect to its first argument.","leftLabel":"stats","rightLabel":"R: One Dimensional Optimization"},"order.dendrogram":{"text":"order.dendrogram","snippet":"order.dendrogram(x)## S3 method for class 'dendrogram'labels(object, ...)","prefix":"order.dendrogram","type":"function","description":"Theses functions return the order (index) or the \"label\"attribute for the leaves in adendrogram.  These indices can then be used to access the appropriatecomponents of any additional data.","leftLabel":"stats","rightLabel":"R: Ordering or Labels of the Leaves in a Dendrogram"},"p.adjust":{"text":"p.adjust","snippet":"p.adjust(p, method = p.adjust.methods, n = length(p))p.adjust.methods# c(\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\",#   \"fdr\", \"none\")","prefix":"p.adjust","type":"function","description":"Given a set of p-values, returns p-values adjusted usingone of several methods.","leftLabel":"stats","rightLabel":"R: Adjust P-values for Multiple Comparisons"},"pairwise.prop.test":{"text":"pairwise.prop.test","snippet":"pairwise.prop.test(x, n, p.adjust.method = p.adjust.methods, ...)","prefix":"pairwise.prop.test","type":"function","description":"Calculate pairwise comparisons between pairs of proportions withcorrection for multiple testing","leftLabel":"stats","rightLabel":"R: Pairwise comparisons for proportions"},"pairwise.t.test":{"text":"pairwise.t.test","snippet":"pairwise.t.test(x, g, p.adjust.method = p.adjust.methods,                pool.sd = !paired, paired = FALSE,                alternative = c(\"two.sided\", \"less\", \"greater\"),                ...)","prefix":"pairwise.t.test","type":"function","description":"Calculate pairwise comparisons between group levels with correctionsfor multiple testing","leftLabel":"stats","rightLabel":"R: Pairwise t tests"},"pairwise.table":{"text":"pairwise.table","snippet":"pairwise.table(compare.levels, level.names, p.adjust.method)","prefix":"pairwise.table","type":"function","description":"Creates  table of p values for pairwise comparisonswith corrections for multiple testing.","leftLabel":"stats","rightLabel":"R: Tabulate p values for pairwise comparisons"},"pairwise.wilcox.test":{"text":"pairwise.wilcox.test","snippet":"pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,                      paired = FALSE, ...)","prefix":"pairwise.wilcox.test","type":"function","description":"Calculate pairwise comparisons between group levels with correctionsfor multiple testing.","leftLabel":"stats","rightLabel":"R: Pairwise Wilcoxon Rank Sum Tests"},"plot.HoltWinters":{"text":"plot.HoltWinters","snippet":"## S3 method for class 'HoltWinters'plot(x, predicted.values = NA, intervals = TRUE,        separator = TRUE, col = 1, col.predicted = 2,        col.intervals = 4, col.separator = 1, lty = 1,        lty.predicted = 1, lty.intervals = 1, lty.separator = 3,        ylab = \"Observed / Fitted\",        main = \"Holt-Winters filtering\",        ylim = NULL, ...)","prefix":"plot.HoltWinters","type":"function","description":"Produces a chart of the original time series along with the fittedvalues. Optionally, predicted values (and their confidence bounds) canalso be plotted.","leftLabel":"stats","rightLabel":"R: Plot function for HoltWinters objects"},"plot.acf":{"text":"plot.acf","snippet":"## S3 method for class 'acf'plot(x, ci = 0.95, type = \"h\", xlab = \"Lag\", ylab = NULL,     ylim = NULL, main = NULL,     ci.col = \"blue\", ci.type = c(\"white\", \"ma\"),     max.mfrow = 6, ask = Npgs > 1 && dev.interactive(),     mar = if(nser > 2) c(3,2,2,0.8) else par(\"mar\"),     oma = if(nser > 2) c(1,1.2,1,1) else par(\"oma\"),     mgp = if(nser > 2) c(1.5,0.6,0) else par(\"mgp\"),     xpd = par(\"xpd\"),     cex.main = if(nser > 2) 1 else par(\"cex.main\"),     verbose = getOption(\"verbose\"),     ...)","prefix":"plot.acf","type":"function","description":"Plot method for objects of class \"acf\".","leftLabel":"stats","rightLabel":"R: Plot Autocovariance and Autocorrelation Functions"},"plot.density":{"text":"plot.density","snippet":"## S3 method for class 'density'plot(x, main = NULL, xlab = NULL, ylab = \"Density\", type = \"l\",     zero.line = TRUE, ...)","prefix":"plot.density","type":"function","description":"The plot method for density objects.","leftLabel":"stats","rightLabel":"R: Plot Method for Kernel Density Estimation"},"plot.isoreg":{"text":"plot.isoreg","snippet":"## S3 method for class 'isoreg'plot(x, plot.type = c(\"single\", \"row.wise\", \"col.wise\"),      main = paste(\"Isotonic regression\", deparse(x$call)),      main2 = \"Cumulative Data and Convex Minorant\",      xlab = \"x0\", ylab = \"x$y\",      par.fit = list(col = \"red\", cex = 1.5, pch = 13, lwd = 1.5),      mar = if (both) 0.1 + c(3.5, 2.5, 1, 1) else par(\"mar\"),      mgp = if (both) c(1.6, 0.7, 0) else par(\"mgp\"),      grid = length(x$x) < 12, ...)## S3 method for class 'isoreg'lines(x, col = \"red\", lwd = 1.5,       do.points = FALSE, cex = 1.5, pch = 13, ...)","prefix":"plot.isoreg","type":"function","description":"The plot and lines method forR objects of class isoreg.","leftLabel":"stats","rightLabel":"R: Plot Method for isoreg Objects"},"plot.lm":{"text":"plot.lm","snippet":"## S3 method for class 'lm'plot(x, which = c(1:3, 5),      caption = list(\"Residuals vs Fitted\", \"Normal Q-Q\",       \"Scale-Location\", \"Cook's distance\",       \"Residuals vs Leverage\",       expression(\"Cook's dist vs Leverage  \" * h[ii] / (1 - h[ii]))),     panel = if(add.smooth) panel.smooth else points,     sub.caption = NULL, main = \"\",     ask = prod(par(\"mfcol\")) < length(which) && dev.interactive(),     ...,     id.n = 3, labels.id = names(residuals(x)), cex.id = 0.75,     qqline = TRUE, cook.levels = c(0.5, 1.0),     add.smooth = getOption(\"add.smooth\"), label.pos = c(4,2),     cex.caption = 1, cex.oma.main = 1.25)","prefix":"plot.lm","type":"function","description":"Six plots (selectable by which) are currently available: a plotof residuals against fitted values, a Scale-Location plot ofsqrt(| residuals |)against fitted values, a Normal Q-Q plot, aplot of Cook's distances versus row labels, a plot of residualsagainst leverages, and a plot of Cook's distances againstleverage/(1-leverage).  By default, the first three and 5 areprovided.","leftLabel":"stats","rightLabel":"R: Plot Diagnostics for an lm Object"},"plot.ppr":{"text":"plot.ppr","snippet":"## S3 method for class 'ppr'plot(x, ask, type = \"o\", cex = 1/2,     main = quote(bquote(         \"term\"[.(i)]*\":\" ~~ hat(beta[.(i)]) == .(bet.i))),     xlab = quote(bquote(bold(alpha)[.(i)]^T * bold(x))),     ylab = \"\", ...)","prefix":"plot.ppr","type":"function","description":"Plot the ridge functions for a projection pursuit regression(ppr) fit.","leftLabel":"stats","rightLabel":"R: Plot Ridge Functions for Projection Pursuit Regression Fit"},"plot.profile.nls":{"text":"plot.profile.nls","snippet":"## S3 method for class 'profile.nls'plot(x, levels, conf = c(99, 95, 90, 80, 50)/100,     absVal = TRUE, ylab = NULL, lty = 2, ...)","prefix":"plot.profile.nls","type":"function","description":"Displays a series of plots of the profile t function and interpolatedconfidence intervals for the parameters in a nonlinear regressionmodel that has been fit with nls and profiled withprofile.nls.","leftLabel":"stats","rightLabel":"R: Plot a profile.nls Object"},"plot.spec":{"text":"plot.spec","snippet":"## S3 method for class 'spec'plot(x, add = FALSE, ci = 0.95, log = c(\"yes\", \"dB\", \"no\"),     xlab = \"frequency\", ylab = NULL, type = \"l\",     ci.col = \"blue\", ci.lty = 3,     main = NULL, sub = NULL,     plot.type = c(\"marginal\", \"coherency\", \"phase\"),     ...)plot.spec.phase(x, ci = 0.95,                xlab = \"frequency\", ylab = \"phase\",                ylim = c(-pi, pi), type = \"l\",                main = NULL, ci.col = \"blue\", ci.lty = 3, ...)plot.spec.coherency(x, ci = 0.95,                    xlab = \"frequency\",                    ylab = \"squared coherency\",                    ylim = c(0, 1), type = \"l\",                    main = NULL, ci.col = \"blue\", ci.lty = 3, ...)","prefix":"plot.spec","type":"function","description":"Plotting method for objects of class \"spec\".  For multivariatetime series it plots the marginal spectra of the series or pairs plotsof the coherency and phase of the cross-spectra.","leftLabel":"stats","rightLabel":"R: Plotting Spectral Densities"},"plot.stepfun":{"text":"plot.stepfun","snippet":"## S3 method for class 'stepfun'plot(x, xval, xlim, ylim = range(c(y, Fn.kn)),     xlab = \"x\", ylab = \"f(x)\", main = NULL,     add = FALSE, verticals = TRUE, do.points = (n < 1000),     pch = par(\"pch\"), col = par(\"col\"),     col.points = col, cex.points = par(\"cex\"),     col.hor = col, col.vert = col,     lty = par(\"lty\"), lwd = par(\"lwd\"), ...)## S3 method for class 'stepfun'lines(x, ...)","prefix":"plot.stepfun","type":"function","description":"Method of the generic plot for stepfunobjects and utility for plotting piecewise constant functions.","leftLabel":"stats","rightLabel":"R: Plot Step Functions"},"plot.ts":{"text":"plot.ts","snippet":"## S3 method for class 'ts'plot(x, y = NULL, plot.type = c(\"multiple\", \"single\"),        xy.labels, xy.lines, panel = lines, nc, yax.flip = FALSE,        mar.multi = c(0, 5.1, 0, if(yax.flip) 5.1 else 2.1),        oma.multi = c(6, 0, 5, 0), axes = TRUE, ...)## S3 method for class 'ts'lines(x, ...)","prefix":"plot.ts","type":"function","description":"Plotting method for objects inheriting from class \"ts\".","leftLabel":"stats","rightLabel":"R: Plotting Time-Series Objects"},"poisson.test":{"text":"poisson.test","snippet":"poisson.test(x, T = 1, r = 1,    alternative = c(\"two.sided\", \"less\", \"greater\"),    conf.level = 0.95)","prefix":"poisson.test","type":"function","description":"Performs an exact test of a simple null hypothesis about therate parameter in Poisson distribution, or for theratio between two rate parameters.","leftLabel":"stats","rightLabel":"R: Exact Poisson tests"},"poly":{"text":"poly","snippet":"poly(x, ..., degree = 1, coefs = NULL, raw = FALSE, simple = FALSE)polym  (..., degree = 1, coefs = NULL, raw = FALSE)## S3 method for class 'poly'predict(object, newdata, ...)","prefix":"poly","type":"function","description":"Returns or evaluates orthogonal polynomials of degree 1 todegree over the specified set of points x: these are allorthogonal to the constant polynomial of degree 0.  Alternatively,evaluate raw polynomials.","leftLabel":"stats","rightLabel":"R: Compute Orthogonal Polynomials"},"power":{"text":"power","snippet":"power(lambda = 1)","prefix":"power","type":"function","description":"Creates a link object based on the link functionη = μ ^ λ.","leftLabel":"stats","rightLabel":"R: Create a Power Link Object"},"power.anova.test":{"text":"power.anova.test","snippet":"power.anova.test(groups = NULL, n = NULL,                 between.var = NULL, within.var = NULL,                 sig.level = 0.05, power = NULL)","prefix":"power.anova.test","type":"function","description":"Compute power of test or determine parameters to obtain target power.","leftLabel":"stats","rightLabel":"R: Power Calculations for Balanced One-Way Analysis of Variance..."},"power.prop.test":{"text":"power.prop.test","snippet":"power.prop.test(n = NULL, p1 = NULL, p2 = NULL, sig.level = 0.05,                power = NULL,                alternative = c(\"two.sided\", \"one.sided\"),                strict = FALSE, tol = .Machine$double.eps^0.25)","prefix":"power.prop.test","type":"function","description":"Compute the power of the two-sample test for proportions, or determineparameters to obtain a target power.","leftLabel":"stats","rightLabel":"R: Power Calculations for Two-Sample Test for Proportions"},"power.t.test":{"text":"power.t.test","snippet":"power.t.test(n = NULL, delta = NULL, sd = 1, sig.level = 0.05,             power = NULL,             type = c(\"two.sample\", \"one.sample\", \"paired\"),             alternative = c(\"two.sided\", \"one.sided\"),             strict = FALSE, tol = .Machine$double.eps^0.25)","prefix":"power.t.test","type":"function","description":"Compute the power of the one- or two- sample t test,or determine parameters to obtain a target power.","leftLabel":"stats","rightLabel":"R: Power calculations for one and two sample t tests"},"pp.test":{"text":"pp.test","snippet":"PP.test(x, lshort = TRUE)","prefix":"pp.test","type":"function","description":"Computes the Phillips-Perron test for the null hypothesis thatx has a unit root against a stationary alternative.","leftLabel":"stats","rightLabel":"R: Phillips-Perron Test for Unit Roots"},"ppoints":{"text":"ppoints","snippet":"ppoints(n, a = if(n <= 10) 3/8 else 1/2)","prefix":"ppoints","type":"function","description":"Generates the sequence of probability points(1:m - a)/(m + (1-a)-a)where m is either n, if length(n)==1, orlength(n).","leftLabel":"stats","rightLabel":"R: Ordinates for Probability Plotting"},"ppr":{"text":"ppr","snippet":"ppr(x, ...)## S3 method for class 'formula'ppr(formula, data, weights, subset, na.action,    contrasts = NULL, ..., model = FALSE)## Default S3 method:ppr(x, y, weights = rep(1, n),    ww = rep(1, q), nterms, max.terms = nterms, optlevel = 2,    sm.method = c(\"supsmu\", \"spline\", \"gcvspline\"),    bass = 0, span = 0, df = 5, gcvpen = 1, trace = FALSE, ...)","prefix":"ppr","type":"function","description":"Fit a projection pursuit regression model.","leftLabel":"stats","rightLabel":"R: Projection Pursuit Regression"},"prcomp":{"text":"prcomp","snippet":"prcomp(x, ...)## S3 method for class 'formula'prcomp(formula, data = NULL, subset, na.action, ...)## Default S3 method:prcomp(x, retx = TRUE, center = TRUE, scale. = FALSE,       tol = NULL, rank. = NULL, ...)## S3 method for class 'prcomp'predict(object, newdata, ...)","prefix":"prcomp","type":"function","description":"Performs a principal components analysis on the given data matrixand returns the results as an object of class prcomp.","leftLabel":"stats","rightLabel":"R: Principal Components Analysis"},"predict.HoltWinters":{"text":"predict.HoltWinters","snippet":"## S3 method for class 'HoltWinters'predict(object, n.ahead = 1, prediction.interval = FALSE,       level = 0.95, ...)","prefix":"predict.HoltWinters","type":"function","description":"Computes predictions and prediction intervals for models fitted bythe Holt-Winters method.","leftLabel":"stats","rightLabel":"R: Prediction Function for Fitted Holt-Winters Models"},"predict":{"text":"predict","snippet":"predict (object, ...)","prefix":"predict","type":"function","description":"predict is a generic function for predictions from the results ofvarious model fitting functions.  The function invokes particularmethods which depend on the class ofthe first argument.","leftLabel":"stats","rightLabel":"R: Model Predictions"},"predict.arima":{"text":"predict.arima","snippet":"## S3 method for class 'Arima'predict(object, n.ahead = 1, newxreg = NULL,        se.fit = TRUE, ...)","prefix":"predict.arima","type":"function","description":"Forecast from models fitted by arima.","leftLabel":"stats","rightLabel":"R: Forecast from ARIMA fits"},"predict.glm":{"text":"predict.glm","snippet":"## S3 method for class 'glm'predict(object, newdata = NULL,            type = c(\"link\", \"response\", \"terms\"),            se.fit = FALSE, dispersion = NULL, terms = NULL,            na.action = na.pass, ...)","prefix":"predict.glm","type":"function","description":"Obtains predictions and optionally estimates standard errors of thosepredictions from a fitted generalized linear model object.","leftLabel":"stats","rightLabel":"R: Predict Method for GLM Fits"},"predict.lm":{"text":"predict.lm","snippet":"## S3 method for class 'lm'predict(object, newdata, se.fit = FALSE, scale = NULL, df = Inf,        interval = c(\"none\", \"confidence\", \"prediction\"),        level = 0.95, type = c(\"response\", \"terms\"),        terms = NULL, na.action = na.pass,        pred.var = res.var/weights, weights = 1, ...)","prefix":"predict.lm","type":"function","description":"Predicted values based on linear model object.","leftLabel":"stats","rightLabel":"R: Predict method for Linear Model Fits"},"predict.loess":{"text":"predict.loess","snippet":"## S3 method for class 'loess'predict(object, newdata = NULL, se = FALSE,        na.action = na.pass, ...)","prefix":"predict.loess","type":"function","description":"Predictions from a loess fit, optionally with standard errors.","leftLabel":"stats","rightLabel":"R: Predict Loess Curve or Surface"},"predict.nls":{"text":"predict.nls","snippet":"## S3 method for class 'nls'predict(object, newdata , se.fit = FALSE, scale = NULL, df = Inf,        interval = c(\"none\", \"confidence\", \"prediction\"),        level = 0.95, ...)","prefix":"predict.nls","type":"function","description":"predict.nls produces predicted values, obtained by evaluatingthe regression function in the frame newdata.  If the logicalse.fit is TRUE, standard errors of the predictions arecalculated.  If the numeric argument scale is set (withoptional df), it is used as the residual standard deviation inthe computation of the standard errors, otherwise this is extractedfrom the model fit.  Setting intervals specifies computation ofconfidence or prediction (tolerance) intervals at the specifiedlevel.","leftLabel":"stats","rightLabel":"R: Predicting from Nonlinear Least Squares Fits"},"predict.smooth.spline":{"text":"predict.smooth.spline","snippet":"## S3 method for class 'smooth.spline'predict(object, x, deriv = 0, ...)","prefix":"predict.smooth.spline","type":"function","description":"Predict a smoothing spline fit at new points, return the derivative ifdesired. The predicted fit is linear beyond the original data.","leftLabel":"stats","rightLabel":"R: Predict from Smoothing Spline Fit"},"preplot":{"text":"preplot","snippet":"preplot(object, ...)","prefix":"preplot","type":"function","description":"Compute an object to be used for plots relating to the given model object.","leftLabel":"stats","rightLabel":"R: Pre-computations for a Plotting Object"},"princomp":{"text":"princomp","snippet":"princomp(x, ...)## S3 method for class 'formula'princomp(formula, data = NULL, subset, na.action, ...)## Default S3 method:princomp(x, cor = FALSE, scores = TRUE, covmat = NULL,         subset = rep_len(TRUE, nrow(as.matrix(x))), ...)## S3 method for class 'princomp'predict(object, newdata, ...)","prefix":"princomp","type":"function","description":"princomp performs a principal components analysis on the givennumeric data matrix and returns the results as an object of classprincomp.","leftLabel":"stats","rightLabel":"R: Principal Components Analysis"},"print.power.htest":{"text":"print.power.htest","snippet":"## S3 method for class 'htest'print(x, digits = getOption(\"digits\"), prefix = \"\\t\", ...)## S3 method for class 'power.htest'print(x, digits = getOption(\"digits\"), ...)","prefix":"print.power.htest","type":"function","description":"Printing objects of class \"htest\" or \"power.htest\",respectively, by simple print methods.","leftLabel":"stats","rightLabel":"R: Print Methods for Hypothesis Tests and Power Calculation..."},"print.ts":{"text":"print.ts","snippet":"## S3 method for class 'ts'print(x, calendar, ...).preformat.ts(x, calendar, ...)","prefix":"print.ts","type":"function","description":"Notably for calendar related time series objects,  format and print methods showing years,months and or quarters respectively.","leftLabel":"stats","rightLabel":"R: Printing and Formatting of Time-Series Objects"},"printCoefmat":{"text":"printCoefmat","snippet":"printCoefmat(x, digits = max(3, getOption(\"digits\") - 2),             signif.stars = getOption(\"show.signif.stars\"),             signif.legend = signif.stars,             dig.tst = max(1, min(5, digits - 1)),             cs.ind = 1L:k, tst.ind = k + 1L,             zap.ind = integer(), P.values = NULL,             has.Pvalue = nc >= 4L &&                          substr(colnames(x)[nc], 1L, 3L) %in% c(\"Pr(\", \"p-v\"),             eps.Pvalue = .Machine$double.eps,             na.print = \"NA\", ...)","prefix":"printCoefmat","type":"function","description":"Utility function to be used in higher-level printmethods, such as those for summary.lm,summary.glm and anova.  Thegoal is to provide a flexible interface with smart defaults suchthat often, only x needs to be specified.","leftLabel":"stats","rightLabel":"R: Print Coefficient Matrices"},"profile":{"text":"profile","snippet":"profile(fitted, ...)","prefix":"profile","type":"function","description":"Investigates behavior of objective function near the solutionrepresented by fitted.","leftLabel":"stats","rightLabel":"R: Generic Function for Profiling Models"},"profile.nls":{"text":"profile.nls","snippet":"## S3 method for class 'nls'profile(fitted, which = 1:npar, maxpts = 100, alphamax = 0.01,        delta.t = cutoff/5, ...)","prefix":"profile.nls","type":"function","description":"Investigates the profile log-likelihood function for a fitted model ofclass \"nls\".","leftLabel":"stats","rightLabel":"R: Method for Profiling nls Objects"},"proj":{"text":"proj","snippet":"proj(object, ...)## S3 method for class 'aov'proj(object, onedf = FALSE, unweighted.scale = FALSE, ...)## S3 method for class 'aovlist'proj(object, onedf = FALSE, unweighted.scale = FALSE, ...)## Default S3 method:proj(object, onedf = TRUE, ...)## S3 method for class 'lm'proj(object, onedf = FALSE, unweighted.scale = FALSE, ...)","prefix":"proj","type":"function","description":"proj returns a matrix or list of matrices giving the projectionsof the data onto the terms of a linear model.  It is most frequentlyused for aov models.","leftLabel":"stats","rightLabel":"R: Projections of Models"},"prop.test":{"text":"prop.test","snippet":"prop.test(x, n, p = NULL,          alternative = c(\"two.sided\", \"less\", \"greater\"),          conf.level = 0.95, correct = TRUE)","prefix":"prop.test","type":"function","description":"prop.test can be used for testing the null that theproportions (probabilities of success) in several groups are thesame, or that they equal certain given values.","leftLabel":"stats","rightLabel":"R: Test of Equal or Given Proportions"},"prop.trend.test":{"text":"prop.trend.test","snippet":"prop.trend.test(x, n, score = seq_along(x))","prefix":"prop.trend.test","type":"function","description":"Performs chi-squared test for trend in proportions, i.e., a testasymptotically optimal for local alternatives where the log odds varyin proportion with score.  By default, score is chosenas the group numbers.","leftLabel":"stats","rightLabel":"R: Test for trend in proportions"},"qqnorm":{"text":"qqnorm","snippet":"qqnorm(y, ...)## Default S3 method:qqnorm(y, ylim, main = \"Normal Q-Q Plot\",       xlab = \"Theoretical Quantiles\", ylab = \"Sample Quantiles\",       plot.it = TRUE, datax = FALSE, ...)qqline(y, datax = FALSE, distribution = qnorm,       probs = c(0.25, 0.75), qtype = 7, ...)qqplot(x, y, plot.it = TRUE, xlab = deparse(substitute(x)),       ylab = deparse(substitute(y)), ...)","prefix":"qqnorm","type":"function","description":"qqnorm is a generic function the default method of whichproduces a normal QQ plot of the values in y.qqline adds a line to a “theoretical”, by defaultnormal, quantile-quantile plot which passes through the probsquantiles, by default the first and third quartiles.","leftLabel":"stats","rightLabel":"R: Quantile-Quantile Plots"},"quade.test":{"text":"quade.test","snippet":"quade.test(y, ...)## Default S3 method:quade.test(y, groups, blocks, ...)## S3 method for class 'formula'quade.test(formula, data, subset, na.action, ...)","prefix":"quade.test","type":"function","description":"Performs a Quade test with unreplicated blocked data.","leftLabel":"stats","rightLabel":"R: Quade Test"},"quantile":{"text":"quantile","snippet":"quantile(x, ...)## Default S3 method:quantile(x, probs = seq(0, 1, 0.25), na.rm = FALSE,         names = TRUE, type = 7, ...)","prefix":"quantile","type":"function","description":"The generic function quantile produces sample quantilescorresponding to the given probabilities.The smallest observation corresponds to a probability of 0 and thelargest to a probability of 1.","leftLabel":"stats","rightLabel":"R: Sample Quantiles"},"r2dtable":{"text":"r2dtable","snippet":"r2dtable(n, r, c)","prefix":"r2dtable","type":"function","description":"Generate random 2-way tables with given marginals using Patefield'salgorithm.","leftLabel":"stats","rightLabel":"R: Random 2-way Tables with Given Marginals"},"rWishart":{"text":"rWishart","snippet":"rWishart(n, df, Sigma)","prefix":"rWishart","type":"function","description":"Generate n random matrices, distributed according to theWishart distribution with parameters Sigma and df,W_p(Sigma, df).","leftLabel":"stats","rightLabel":"R: Random Wishart Distributed Matrices"},"read.ftable":{"text":"read.ftable","snippet":"read.ftable(file, sep = \"\", quote = \"\\\"\",            row.var.names, col.vars, skip = 0)write.ftable(x, file = \"\", quote = TRUE, append = FALSE,             digits = getOption(\"digits\"), ...)## S3 method for class 'ftable'format(x, quote = TRUE, digits = getOption(\"digits\"),                        method = c(\"non.compact\", \"row.compact\",                                  \"col.compact\", \"compact\"),                        lsep = \" | \", ...)## S3 method for class 'ftable'print(x, digits = getOption(\"digits\"), ...)","prefix":"read.ftable","type":"function","description":"Read, write and coerce ‘flat’ contingency tables.","leftLabel":"stats","rightLabel":"R: Manipulate Flat Contingency Tables"},"rect.hclust":{"text":"rect.hclust","snippet":"rect.hclust(tree, k = NULL, which = NULL, x = NULL, h = NULL,            border = 2, cluster = NULL)","prefix":"rect.hclust","type":"function","description":"Draws rectangles around the branches of a dendrogram highlighting thecorresponding clusters. First the dendrogram is cut at a certainlevel, then a rectangle is drawn around selected branches.","leftLabel":"stats","rightLabel":"R: Draw Rectangles Around Hierarchical Clusters"},"relevel":{"text":"relevel","snippet":"relevel(x, ref, ...)","prefix":"relevel","type":"function","description":"The levels of a factor are re-ordered so that the level specified byref is first and the others are moved down. This is usefulfor contr.treatment contrasts which take the first level asthe reference.","leftLabel":"stats","rightLabel":"R: Reorder Levels of Factor"},"reorder.dendrogram":{"text":"reorder.dendrogram","snippet":"## S3 method for class 'dendrogram'reorder(x, wts, agglo.FUN = sum, ...)","prefix":"reorder.dendrogram","type":"function","description":"A method for the generic function reorder.","leftLabel":"stats","rightLabel":"R: Reorder a Dendrogram"},"reorder.factor":{"text":"reorder.factor","snippet":"reorder(x, ...)## Default S3 method:reorder(x, X, FUN = mean, ...,        order = is.ordered(x))","prefix":"reorder.factor","type":"function","description":"reorder is a generic function.  The \"default\" methodtreats its first argument as a categorical variable, and reorders itslevels based on the values of a second variable, usually numeric.","leftLabel":"stats","rightLabel":"R: Reorder Levels of a Factor"},"replications":{"text":"replications","snippet":"replications(formula, data = NULL, na.action)","prefix":"replications","type":"function","description":"Returns a vector or a list of the number of replicates foreach term in the formula.","leftLabel":"stats","rightLabel":"R: Number of Replications of Terms"},"reshape":{"text":"reshape","snippet":"reshape(data, varying = NULL, v.names = NULL, timevar = \"time\",        idvar = \"id\", ids = 1:NROW(data),        times = seq_along(varying[[1]]),        drop = NULL, direction, new.row.names = NULL,        sep = \".\",        split = if (sep == \"\") {            list(regexp = \"[A-Za-z][0-9]\", include = TRUE)        } else {            list(regexp = sep, include = FALSE, fixed = TRUE)}        )","prefix":"reshape","type":"function","description":"This function reshapes a data frame between ‘wide’ format withrepeated measurements in separate columns of the same record and‘long’ format with the repeated measurements in separaterecords.","leftLabel":"stats","rightLabel":"R: Reshape Grouped Data"},"residuals":{"text":"residuals","snippet":"residuals(object, ...)resid(object, ...)","prefix":"residuals","type":"function","description":"residuals is a generic function which extracts model residualsfrom objects returned by modeling functions.","leftLabel":"stats","rightLabel":"R: Extract Model Residuals"},"runmed":{"text":"runmed","snippet":"runmed(x, k, endrule = c(\"median\", \"keep\", \"constant\"),       algorithm = NULL, print.level = 0)","prefix":"runmed","type":"function","description":"Compute running medians of odd span.  This is the ‘most robust’scatter plot smoothing possible.  For efficiency (and historicalreason), you can use one of two different algorithms giving identicalresults.","leftLabel":"stats","rightLabel":"R: Running Medians - Robust Scatter Plot Smoothing"},"scatter.smooth":{"text":"scatter.smooth","snippet":"scatter.smooth(x, y = NULL, span = 2/3, degree = 1,    family = c(\"symmetric\", \"gaussian\"),    xlab = NULL, ylab = NULL,    ylim = range(y, pred$y, na.rm = TRUE),    evaluation = 50, ..., lpars = list())loess.smooth(x, y, span = 2/3, degree = 1,    family = c(\"symmetric\", \"gaussian\"), evaluation = 50, ...)","prefix":"scatter.smooth","type":"function","description":"Plot and add a smooth curve computed by loess to a scatter plot.","leftLabel":"stats","rightLabel":"R: Scatter Plot with Smooth Curve Fitted by Loess"},"screeplot":{"text":"screeplot","snippet":"## Default S3 method:screeplot(x, npcs = min(10, length(x$sdev)),          type = c(\"barplot\", \"lines\"),          main = deparse(substitute(x)), ...)","prefix":"screeplot","type":"function","description":"screeplot.default plots the variances against the number of theprincipal component. This is also the plot method for classes\"princomp\" and \"prcomp\".","leftLabel":"stats","rightLabel":"R: Screeplots"},"sd":{"text":"sd","snippet":"sd(x, na.rm = FALSE)","prefix":"sd","type":"function","description":"This function computes the standard deviation of the values inx.If na.rm is TRUE then missing values are removed beforecomputation proceeds.","leftLabel":"stats","rightLabel":"R: Standard Deviation"},"se.contrast":{"text":"se.contrast","snippet":"se.contrast(object, ...)## S3 method for class 'aov'se.contrast(object, contrast.obj,           coef = contr.helmert(ncol(contrast))[, 1],           data = NULL, ...)","prefix":"se.contrast","type":"function","description":"Returns the standard errors for one or more contrasts in an aovobject.","leftLabel":"stats","rightLabel":"R: Standard Errors for Contrasts in Model Terms"},"selfStart":{"text":"selfStart","snippet":"selfStart(model, initial, parameters, template)","prefix":"selfStart","type":"function","description":"Construct self-starting nonlinear models.","leftLabel":"stats","rightLabel":"R: Construct Self-starting Nonlinear Models"},"setNames":{"text":"setNames","snippet":"setNames(object = nm, nm)","prefix":"setNames","type":"function","description":"This is a convenience function that sets the names on an object andreturns the object.  It is most useful at the end of a functiondefinition where one is creating the object to be returned and wouldprefer not to store it under a name just so the names can be assigned.","leftLabel":"stats","rightLabel":"R: Set the Names in an Object"},"shapiro.test":{"text":"shapiro.test","snippet":"shapiro.test(x)","prefix":"shapiro.test","type":"function","description":"Performs the Shapiro-Wilk test of normality.","leftLabel":"stats","rightLabel":"R: Shapiro-Wilk Normality Test"},"sigma":{"text":"sigma","snippet":"sigma(object, ...)## Default S3 method:sigma(object, use.fallback = TRUE, ...)","prefix":"sigma","type":"function","description":"Extract the estimated standard deviation of the errors, the“residual standard deviation” (misnomed also“residual standard error”, e.g., insummary.lm()'s output, from a fitted model).","leftLabel":"stats","rightLabel":"R: Extract Residual Standard Deviation 'Sigma'"},"simulate":{"text":"simulate","snippet":"simulate(object, nsim = 1, seed = NULL, ...)","prefix":"simulate","type":"function","description":"Simulate one or more responses from the distributioncorresponding to a fitted model object.","leftLabel":"stats","rightLabel":"R: Simulate Responses"},"smooth":{"text":"smooth","snippet":"smooth(x, kind = c(\"3RS3R\", \"3RSS\", \"3RSR\", \"3R\", \"3\", \"S\"),       twiceit = FALSE, endrule = c(\"Tukey\", \"copy\"), do.ends = FALSE)","prefix":"smooth","type":"function","description":"Tukey's smoothers, 3RS3R, 3RSS, 3R, etc.","leftLabel":"stats","rightLabel":"R: Tukey's (Running Median) Smoothing"},"smooth.spline":{"text":"smooth.spline","snippet":"smooth.spline(x, y = NULL, w = NULL, df, spar = NULL, lambda = NULL, cv = FALSE,              all.knots = FALSE, nknots = .nknots.smspl,              keep.data = TRUE, df.offset = 0, penalty = 1,              control.spar = list(), tol = 1e-6 * IQR(x), keep.stuff = FALSE)","prefix":"smooth.spline","type":"function","description":"Fits a cubic smoothing spline to the supplied data.","leftLabel":"stats","rightLabel":"R: Fit a Smoothing Spline"},"smoothEnds":{"text":"smoothEnds","snippet":"smoothEnds(y, k = 3)","prefix":"smoothEnds","type":"function","description":"Smooth end points of a vector y using subsequently smallermedians and Tukey's end point rule at the very end. (of odd span),","leftLabel":"stats","rightLabel":"R: End Points Smoothing (for Running Medians)"},"sortedXyData":{"text":"sortedXyData","snippet":"sortedXyData(x, y, data)","prefix":"sortedXyData","type":"function","description":"This is a constructor function for the class of sortedXyDataobjects.  These objects are mostly used in the initialfunction for a self-starting nonlinear regression model, which will beof the selfStart class.","leftLabel":"stats","rightLabel":"R: Create a 'sortedXyData' Object"},"spec.ar":{"text":"spec.ar","snippet":"spec.ar(x, n.freq, order = NULL, plot = TRUE, na.action = na.fail,        method = \"yule-walker\", ...)","prefix":"spec.ar","type":"function","description":"Fits an AR model to x (or uses the existing fit) and computes(and by default plots) the spectral density of the fitted model.","leftLabel":"stats","rightLabel":"R: Estimate Spectral Density of a Time Series from AR Fit"},"spec.pgram":{"text":"spec.pgram","snippet":"spec.pgram(x, spans = NULL, kernel, taper = 0.1,           pad = 0, fast = TRUE, demean = FALSE, detrend = TRUE,           plot = TRUE, na.action = na.fail, ...)","prefix":"spec.pgram","type":"function","description":"spec.pgram calculates the periodogram using a fast Fouriertransform, and optionally smooths the result with a series ofmodified Daniell smoothers (moving averages giving half weight tothe end values).","leftLabel":"stats","rightLabel":"R: Estimate Spectral Density of a Time Series by a Smoothed..."},"spec.taper":{"text":"spec.taper","snippet":"spec.taper(x, p = 0.1)","prefix":"spec.taper","type":"function","description":"Apply a cosine-bell taper to a time series.","leftLabel":"stats","rightLabel":"R: Taper a Time Series by a Cosine Bell"},"spectrum":{"text":"spectrum","snippet":"spectrum(x, ..., method = c(\"pgram\", \"ar\"))","prefix":"spectrum","type":"function","description":"The spectrum function estimates the spectral density of atime series.","leftLabel":"stats","rightLabel":"R: Spectral Density Estimation"},"splinefun":{"text":"splinefun","snippet":"splinefun(x, y = NULL,          method = c(\"fmm\", \"periodic\", \"natural\", \"monoH.FC\", \"hyman\"),          ties = mean)spline(x, y = NULL, n = 3*length(x), method = \"fmm\",       xmin = min(x), xmax = max(x), xout, ties = mean)splinefunH(x, y, m)","prefix":"splinefun","type":"function","description":"Perform cubic (or Hermite) spline interpolation of given data points,returning either a list of points obtained by the interpolation or afunction performing the interpolation.","leftLabel":"stats","rightLabel":"R: Interpolating Splines"},"start":{"text":"start","snippet":"start(x, ...)end(x, ...)","prefix":"start","type":"function","description":"Extract and encode the times the first and last observations weretaken. Provided only for compatibility with S version 2.","leftLabel":"stats","rightLabel":"R: Encode the Terminal Times of Time Series"},"stat.anova":{"text":"stat.anova","snippet":"stat.anova(table, test = c(\"Rao\",\"LRT\", \"Chisq\", \"F\", \"Cp\"),           scale, df.scale, n)","prefix":"stat.anova","type":"function","description":"This is a utility function, used in lm andglm methods for anova(..., test != NULL)and should not be used by the average user.","leftLabel":"stats","rightLabel":"R: GLM Anova Statistics"},"stats-defunct":{"text":"stats-defunct","snippet":"## Defunct in R 1.xdnchisq(.)pnchisq(.)qnchisq(.)rnchisq(.)print.anova.glm(.)print.anova.lm(.)reshapeWide(x, i, j, val, jnames = levels(j))reshapeLong(x, jvars,  ilev = row.names(x),            jlev = names(x)[jvars], iname = \"reshape.i\",            jname = \"reshape.j\", vname = \"reshape.v\")arima0.diag(...)plot.mts(x, plot.type = c(\"multiple\", \"single\"), panel = lines,         log = \"\", col = par(\"col\"),  bg = NA, pch = par(\"pch\"),         cex = par(\"cex\"), lty = par(\"lty\"), lwd = par(\"lwd\"),         ann = par(\"ann\"),  xlab = \"Time\", type = \"l\", main = NULL,         oma = c(6, 0, 5, 0), ...)print.coefmat(x, digits = max(3, getOption(\"digits\") - 2),              signif.stars = getOption(\"show.signif.stars\"),              dig.tst = max(1, min(5, digits - 1)),              cs.ind, tst.ind, zap.ind = integer(0),              P.values = NULL, has.Pvalue,              eps.Pvalue = .Machine$double.eps,              na.print = \"\", ...)anovalist.lm(object, ..., test = NULL)lm.fit.null(x, y, method = \"qr\", tol = 1e-07, ...)lm.wfit.null(x, y, w, method = \"qr\", tol = 1e-07, ...)glm.fit.null(x, y, weights, start = NULL,             etastart = NULL, mustart = NULL, offset,             family = gaussian(), control = glm.control(),             intercept = FALSE)# Defunct in 2.4.0mauchley.test(object, Sigma = diag(nrow = p),   T = Thin.row(proj(M) - proj(X)), M = diag(nrow = p), X = ~0,   idata = data.frame(index = seq(length = p)), ...)# Defunct in 2.10.0clearNames(object)","prefix":"stats-defunct","type":"function","description":"The functions or variables listed here are no longer part of R asthey are not needed (any more).","leftLabel":"stats","rightLabel":"R: Defunct Functions in Package 'stats'"},"stats-deprecated":{"text":"stats-deprecated","snippet":"plclust(tree, hang = 0.1, unit = FALSE, level = FALSE, hmin = 0,        square = TRUE, labels = NULL, plot. = TRUE,        axes = TRUE, frame.plot = FALSE, ann = TRUE,        main = \"\", sub = NULL, xlab = NULL, ylab = \"Height\")","prefix":"stats-deprecated","type":"function","description":"These functions are provided for compatibility with older versions ofR only, and may be defunct as soon as the next release.","leftLabel":"stats","rightLabel":"R: Deprecated Functions in Package 'stats'"},"stats-package":{"text":"stats-package","snippet":{},"prefix":"stats-package","type":"function","description":"R statistical functions","leftLabel":"stats","rightLabel":"R: The R Stats Package"},"step":{"text":"step","snippet":"step(object, scope, scale = 0,     direction = c(\"both\", \"backward\", \"forward\"),     trace = 1, keep = NULL, steps = 1000, k = 2, ...)","prefix":"step","type":"function","description":"Select a formula-based model by AIC.","leftLabel":"stats","rightLabel":"R: Choose a model by AIC in a Stepwise Algorithm"},"stepfun":{"text":"stepfun","snippet":"stepfun(x, y, f = as.numeric(right), ties = \"ordered\",        right = FALSE)is.stepfun(x)knots(Fn, ...)as.stepfun(x, ...)## S3 method for class 'stepfun'print(x, digits = getOption(\"digits\") - 2, ...)## S3 method for class 'stepfun'summary(object, ...)","prefix":"stepfun","type":"function","description":"Given the vectors (x[1], …, x[n]) and(y[0], y[1], …, y[n]) (one valuemore!), stepfun(x, y, ...) returns an interpolating‘step’ function, say fn. I.e., fn(t) =    c[i] (constant) for t in (    x[i], x[i+1]) and at the abscissa values, if (by default)right = FALSE, fn(x[i]) = y[i] and forright = TRUE, fn(x[i]) = y[i-1], fori=1, …, n.","leftLabel":"stats","rightLabel":"R: Step Functions - Creation and Class"},"stl":{"text":"stl","snippet":"stl(x, s.window, s.degree = 0,    t.window = NULL, t.degree = 1,    l.window = nextodd(period), l.degree = t.degree,    s.jump = ceiling(s.window/10),    t.jump = ceiling(t.window/10),    l.jump = ceiling(l.window/10),    robust = FALSE,    inner = if(robust)  1 else 2,    outer = if(robust) 15 else 0,    na.action = na.fail)","prefix":"stl","type":"function","description":"Decompose a time series into seasonal, trend and irregular componentsusing loess, acronym STL.","leftLabel":"stats","rightLabel":"R: Seasonal Decomposition of Time Series by Loess"},"stlmethods":{"text":"stlmethods","snippet":"## S3 method for class 'stl'plot(x, labels = colnames(X),     set.pars = list(mar = c(0, 6, 0, 6), oma = c(6, 0, 4, 0),                     tck = -0.01, mfrow = c(nplot, 1)),     main = NULL, range.bars = TRUE, ...,     col.range = \"light gray\")","prefix":"stlmethods","type":"function","description":"Methods for objects of class stl, typically the result ofstl.  The plot method does a multiple figure plotwith some flexibility.","leftLabel":"stats","rightLabel":"R: Methods for STL Objects"},"summary.aov":{"text":"summary.aov","snippet":"## S3 method for class 'aov'summary(object, intercept = FALSE, split,        expand.split = TRUE, keep.zero.df = TRUE, ...)## S3 method for class 'aovlist'summary(object, ...)","prefix":"summary.aov","type":"function","description":"Summarize an analysis of variance model.","leftLabel":"stats","rightLabel":"R: Summarize an Analysis of Variance Model"},"summary.glm":{"text":"summary.glm","snippet":"## S3 method for class 'glm'summary(object, dispersion = NULL, correlation = FALSE,        symbolic.cor = FALSE, ...)## S3 method for class 'summary.glm'print(x, digits = max(3, getOption(\"digits\") - 3),      symbolic.cor = x$symbolic.cor,      signif.stars = getOption(\"show.signif.stars\"), ...)","prefix":"summary.glm","type":"function","description":"These functions are all methods for class glm orsummary.glm objects.","leftLabel":"stats","rightLabel":"R: Summarizing Generalized Linear Model Fits"},"summary.lm":{"text":"summary.lm","snippet":"## S3 method for class 'lm'summary(object, correlation = FALSE, symbolic.cor = FALSE, ...)## S3 method for class 'summary.lm'print(x, digits = max(3, getOption(\"digits\") - 3),      symbolic.cor = x$symbolic.cor,      signif.stars = getOption(\"show.signif.stars\"), ...)","prefix":"summary.lm","type":"function","description":"summary method for class \"lm\".","leftLabel":"stats","rightLabel":"R: Summarizing Linear Model Fits"},"summary.manova":{"text":"summary.manova","snippet":"## S3 method for class 'manova'summary(object,        test = c(\"Pillai\", \"Wilks\", \"Hotelling-Lawley\", \"Roy\"),        intercept = FALSE, tol = 1e-7, ...)","prefix":"summary.manova","type":"function","description":"A summary method for class \"manova\".","leftLabel":"stats","rightLabel":"R: Summary Method for Multivariate Analysis of Variance"},"summary.nls":{"text":"summary.nls","snippet":"## S3 method for class 'nls'summary(object, correlation = FALSE, symbolic.cor = FALSE, ...)## S3 method for class 'summary.nls'print(x, digits = max(3, getOption(\"digits\") - 3),      symbolic.cor = x$symbolic.cor,      signif.stars = getOption(\"show.signif.stars\"), ...)","prefix":"summary.nls","type":"function","description":"summary method for class \"nls\".","leftLabel":"stats","rightLabel":"R: Summarizing Non-Linear Least-Squares Model Fits"},"summary.princomp":{"text":"summary.princomp","snippet":"## S3 method for class 'princomp'summary(object, loadings = FALSE, cutoff = 0.1, ...)## S3 method for class 'summary.princomp'print(x, digits = 3, loadings = x$print.loadings,      cutoff = x$cutoff, ...)","prefix":"summary.princomp","type":"function","description":"The summary method for class \"princomp\".","leftLabel":"stats","rightLabel":"R: Summary method for Principal Components Analysis"},"supsmu":{"text":"supsmu","snippet":"supsmu(x, y, wt =, span = \"cv\", periodic = FALSE, bass = 0, trace = FALSE)","prefix":"supsmu","type":"function","description":"Smooth the (x, y) values by Friedman's ‘super smoother’.","leftLabel":"stats","rightLabel":"R: Friedman's SuperSmoother"},"symnum":{"text":"symnum","snippet":"symnum(x, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95),       symbols = if(numeric.x) c(\" \", \".\", \",\", \"+\", \"*\", \"B\")                 else c(\".\", \"|\"),       legend = length(symbols) >= 3,       na = \"?\", eps = 1e-5, numeric.x = is.numeric(x),       corr = missing(cutpoints) && numeric.x,       show.max = if(corr) \"1\", show.min = NULL,       abbr.colnames = has.colnames,       lower.triangular = corr && is.numeric(x) && is.matrix(x),       diag.lower.tri   = corr && !is.null(show.max))","prefix":"symnum","type":"function","description":"Symbolically encode a given numeric or logical vector or array.Particularly useful for visualization of structured matrices,e.g., correlation, sparse, or logical ones.","leftLabel":"stats","rightLabel":"R: Symbolic Number Coding"},"t.test":{"text":"t.test","snippet":"t.test(x, ...)## Default S3 method:t.test(x, y = NULL,       alternative = c(\"two.sided\", \"less\", \"greater\"),       mu = 0, paired = FALSE, var.equal = FALSE,       conf.level = 0.95, ...)## S3 method for class 'formula't.test(formula, data, subset, na.action, ...)","prefix":"t.test","type":"function","description":"Performs one and two sample t-tests on vectors of data.","leftLabel":"stats","rightLabel":"R: Student's t-Test"},"termplot":{"text":"termplot","snippet":"termplot(model, data = NULL, envir = environment(formula(model)),         partial.resid = FALSE, rug = FALSE,         terms = NULL, se = FALSE,         xlabs = NULL, ylabs = NULL, main = NULL,         col.term = 2, lwd.term = 1.5,         col.se = \"orange\", lty.se = 2, lwd.se = 1,         col.res = \"gray\", cex = 1, pch = par(\"pch\"),         col.smth = \"darkred\", lty.smth = 2, span.smth = 2/3,         ask = dev.interactive() && nb.fig < n.tms,         use.factor.levels = TRUE, smooth = NULL, ylim = \"common\",         plot = TRUE, transform.x = FALSE, ...)","prefix":"termplot","type":"function","description":"Plots regression terms against their predictors, optionally withstandard errors and partial residuals added.","leftLabel":"stats","rightLabel":"R: Plot Regression Terms"},"terms":{"text":"terms","snippet":"terms(x, ...)","prefix":"terms","type":"function","description":"The function terms is a generic functionwhich can be used to extract terms objectsfrom various kinds of R data objects.","leftLabel":"stats","rightLabel":"R: Model Terms"},"terms.formula":{"text":"terms.formula","snippet":"## S3 method for class 'formula'terms(x, specials = NULL, abb = NULL, data = NULL, neg.out = TRUE,      keep.order = FALSE, simplify = FALSE, ...,      allowDotAsName = FALSE)","prefix":"terms.formula","type":"function","description":"This function takes a formula and some optional arguments andconstructs a terms object. The terms object can then be used toconstruct a model.matrix.","leftLabel":"stats","rightLabel":"R: Construct a terms Object from a Formula"},"terms.object":{"text":"terms.object","snippet":{},"prefix":"terms.object","type":"function","description":"An object of class terms holds information about amodel.  Usually the model was specified in terms of aformula and that formula was used to determine the termsobject.","leftLabel":"stats","rightLabel":"R: Description of Terms Objects"},"time":{"text":"time","snippet":"time(x, ...)## Default S3 method:time(x, offset = 0, ...)cycle(x, ...)frequency(x, ...)deltat(x, ...)","prefix":"time","type":"function","description":"time creates the vector of times at which a time series was sampled.","leftLabel":"stats","rightLabel":"R: Sampling Times of Time Series"},"toeplitz":{"text":"toeplitz","snippet":"toeplitz(x)","prefix":"toeplitz","type":"function","description":"Forms a symmetric Toeplitz matrix given its first row.","leftLabel":"stats","rightLabel":"R: Form Symmetric Toeplitz Matrix"},"ts-methods":{"text":"ts-methods","snippet":"## S3 method for class 'ts'diff(x, lag = 1, differences = 1, ...)## S3 method for class 'ts'na.omit(object, ...)","prefix":"ts-methods","type":"function","description":"Methods for objects of class \"ts\", typically the result ofts.","leftLabel":"stats","rightLabel":"R: Methods for Time Series Objects"},"ts":{"text":"ts","snippet":"ts(data = NA, start = 1, end = numeric(), frequency = 1,   deltat = 1, ts.eps = getOption(\"ts.eps\"), class = , names = )as.ts(x, ...)is.ts(x)","prefix":"ts","type":"function","description":"The function ts is used to create time-series objects.","leftLabel":"stats","rightLabel":"R: Time-Series Objects"},"ts.plot":{"text":"ts.plot","snippet":"ts.plot(..., gpars = list())","prefix":"ts.plot","type":"function","description":"Plot several time series on a common plot. Unlikeplot.ts the series can have a different time bases,but they should have the same frequency.","leftLabel":"stats","rightLabel":"R: Plot Multiple Time Series"},"ts.union":{"text":"ts.union","snippet":"ts.intersect(..., dframe = FALSE)ts.union(..., dframe = FALSE)","prefix":"ts.union","type":"function","description":"Bind time series which have a common frequency. ts.union padswith NAs to the total time coverage, ts.intersectrestricts to the time covered by all the series.","leftLabel":"stats","rightLabel":"R: Bind Two or More Time Series"},"tsSmooth":{"text":"tsSmooth","snippet":"tsSmooth(object, ...)","prefix":"tsSmooth","type":"function","description":"Performs fixed-interval smoothing on a univariate time series via astate-space model.  Fixed-interval smoothing gives the best estimateof the state at each time point based on the whole observed series.","leftLabel":"stats","rightLabel":"R: Use Fixed-Interval Smoothing on Time Series"},"tsdiag":{"text":"tsdiag","snippet":"tsdiag(object, gof.lag, ...)","prefix":"tsdiag","type":"function","description":"A generic function to plot time-series diagnostics.","leftLabel":"stats","rightLabel":"R: Diagnostic Plots for Time-Series Fits"},"tsp":{"text":"tsp","snippet":"tsp(x)tsp(x) <- valuehasTsp(x)","prefix":"tsp","type":"function","description":"tsp returns the tsp attribute (or NULL).It is included for compatibility with S version 2. tsp<-sets the tsp attribute. hasTsp ensures x has atsp attribute, by adding one if needed.","leftLabel":"stats","rightLabel":"R: Tsp Attribute of Time-Series-like Objects"},"uniroot":{"text":"uniroot","snippet":"uniroot(f, interval, ...,        lower = min(interval), upper = max(interval),        f.lower = f(lower, ...), f.upper = f(upper, ...),        extendInt = c(\"no\", \"yes\", \"downX\", \"upX\"), check.conv = FALSE,        tol = .Machine$double.eps^0.25, maxiter = 1000, trace = 0)","prefix":"uniroot","type":"function","description":"The function uniroot searches the interval from lowerto upper for a root (i.e., zero) of the function f withrespect to its first argument.","leftLabel":"stats","rightLabel":"R: One Dimensional Root (Zero) Finding"},"update":{"text":"update","snippet":"update(object, ...)## Default S3 method:update(object, formula., ..., evaluate = TRUE)getCall(x, ...)","prefix":"update","type":"function","description":"update will update and (by default) re-fit a model.  It does thisby extracting the call stored in the object, updating the call and (bydefault) evaluating that call.  Sometimes it is useful to callupdate with only one argument, for example if the data frame hasbeen corrected.","leftLabel":"stats","rightLabel":"R: Update and Re-fit a Model Call"},"update.formula":{"text":"update.formula","snippet":"## S3 method for class 'formula'update(old, new, ...)","prefix":"update.formula","type":"function","description":"update.formula is used to update model formulae.This typically involves adding or dropping terms,but updates can be more general.","leftLabel":"stats","rightLabel":"R: Model Updating"},"var.test":{"text":"var.test","snippet":"var.test(x, ...)## Default S3 method:var.test(x, y, ratio = 1,         alternative = c(\"two.sided\", \"less\", \"greater\"),         conf.level = 0.95, ...)## S3 method for class 'formula'var.test(formula, data, subset, na.action, ...)","prefix":"var.test","type":"function","description":"Performs an F test to compare the variances of two samples from normalpopulations.","leftLabel":"stats","rightLabel":"R: F Test to Compare Two Variances"},"varimax":{"text":"varimax","snippet":"varimax(x, normalize = TRUE, eps = 1e-5)promax(x, m = 4)","prefix":"varimax","type":"function","description":"These functions ‘rotate’ loading matrices in factor analysis.","leftLabel":"stats","rightLabel":"R: Rotation Methods for Factor Analysis"},"vcov":{"text":"vcov","snippet":"vcov(object, ...)","prefix":"vcov","type":"function","description":"Returns the variance-covariance matrix of the main parameters ofa fitted model object.","leftLabel":"stats","rightLabel":"R: Calculate Variance-Covariance Matrix for a Fitted Model..."},"weighted.mean":{"text":"weighted.mean","snippet":"weighted.mean(x, w, ...)## Default S3 method:weighted.mean(x, w, ..., na.rm = FALSE)","prefix":"weighted.mean","type":"function","description":"Compute a weighted mean.","leftLabel":"stats","rightLabel":"R: Weighted Arithmetic Mean"},"weighted.residuals":{"text":"weighted.residuals","snippet":"weighted.residuals(obj, drop0 = TRUE)","prefix":"weighted.residuals","type":"function","description":"Computed weighted residuals from a linear model fit.","leftLabel":"stats","rightLabel":"R: Compute Weighted Residuals"},"weights":{"text":"weights","snippet":"weights(object, ...)","prefix":"weights","type":"function","description":"weights is a generic function which extracts fitting weights fromobjects returned by modeling functions.","leftLabel":"stats","rightLabel":"R: Extract Model Weights"},"wilcox.test":{"text":"wilcox.test","snippet":"wilcox.test(x, ...)## Default S3 method:wilcox.test(x, y = NULL,            alternative = c(\"two.sided\", \"less\", \"greater\"),            mu = 0, paired = FALSE, exact = NULL, correct = TRUE,            conf.int = FALSE, conf.level = 0.95, ...)## S3 method for class 'formula'wilcox.test(formula, data, subset, na.action, ...)","prefix":"wilcox.test","type":"function","description":"Performs one- and two-sample Wilcoxon tests on vectors of data; thelatter is also known as ‘Mann-Whitney’ test.","leftLabel":"stats","rightLabel":"R: Wilcoxon Rank Sum and Signed Rank Tests"},"window":{"text":"window","snippet":"window(x, ...)## S3 method for class 'ts'window(x, ...)## Default S3 method:window(x, start = NULL, end = NULL,      frequency = NULL, deltat = NULL, extend = FALSE, ...)window(x, ...) <- value## S3 replacement method for class 'ts'window(x, start, end, frequency, deltat, ...) <- value","prefix":"window","type":"function","description":"window is a generic function whichextracts the subset of the object xobserved between the times start and end. If afrequency is specified, the series is then re-sampled at the newfrequency.","leftLabel":"stats","rightLabel":"R: Time Windows"},"xtabs":{"text":"xtabs","snippet":"xtabs(formula = ~., data = parent.frame(), subset, sparse = FALSE,      na.action, addNA = FALSE, exclude = if(!addNA) c(NA, NaN),      drop.unused.levels = FALSE)## S3 method for class 'xtabs'print(x, na.print = \"\", ...)","prefix":"xtabs","type":"function","description":"Create a contingency table (optionally a sparse matrix) fromcross-classifying factors, usually contained in a data frame,using a formula interface.","leftLabel":"stats","rightLabel":"R: Cross Tabulation"},"zC":{"text":"zC","snippet":"C(object, contr, how.many, ...)","prefix":"zC","type":"function","description":"Sets the \"contrasts\" attribute for the factor.","leftLabel":"stats","rightLabel":"R: Sets Contrasts for a Factor"},"abline":{"text":"abline","snippet":"abline(a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL,       coef = NULL, untf = FALSE, ...)","prefix":"abline","type":"function","description":"This function adds one or more straight lines through the current plot.","leftLabel":"graphics","rightLabel":"R: Add Straight Lines to a Plot"},"arrows":{"text":"arrows","snippet":"arrows(x0, y0, x1 = x0, y1 = y0, length = 0.25, angle = 30,       code = 2, col = par(\"fg\"), lty = par(\"lty\"),       lwd = par(\"lwd\"), ...)","prefix":"arrows","type":"function","description":"Draw arrows between pairs of points.","leftLabel":"graphics","rightLabel":"R: Add Arrows to a Plot"},"assocplot":{"text":"assocplot","snippet":"assocplot(x, col = c(\"black\", \"red\"), space = 0.3,          main = NULL, xlab = NULL, ylab = NULL)","prefix":"assocplot","type":"function","description":"Produce a Cohen-Friendly association plot indicating deviations fromindependence of rows and columns in a 2-dimensional contingencytable.","leftLabel":"graphics","rightLabel":"R: Association Plots"},"axTicks":{"text":"axTicks","snippet":"axTicks(side, axp = NULL, usr = NULL, log = NULL, nintLog = NULL)","prefix":"axTicks","type":"function","description":"Compute pretty tickmark locations, the same way as R does internally.This is only non-trivial when log coordinates are active.By default, gives the at values whichaxis(side) would use.","leftLabel":"graphics","rightLabel":"R: Compute Axis Tickmark Locations"},"axis.POSIXct":{"text":"axis.POSIXct","snippet":"axis.POSIXct(side, x, at, format, labels = TRUE, ...)axis.Date(side, x, at, format, labels = TRUE, ...)","prefix":"axis.POSIXct","type":"function","description":"Functions to plot objects of classes \"POSIXlt\",\"POSIXct\" and \"Date\" representing calendar dates and times.","leftLabel":"graphics","rightLabel":"R: Date and Date-time Plotting Functions"},"axis":{"text":"axis","snippet":"axis(side, at = NULL, labels = TRUE, tick = TRUE, line = NA,     pos = NA, outer = FALSE, font = NA, lty = \"solid\",     lwd = 1, lwd.ticks = lwd, col = NULL, col.ticks = NULL,     hadj = NA, padj = NA, ...)","prefix":"axis","type":"function","description":"Adds an axis to the current plot, allowing thespecification of the side, position, labels, and other options.","leftLabel":"graphics","rightLabel":"R: Add an Axis to a Plot"},"barplot":{"text":"barplot","snippet":"barplot(height, ...)## Default S3 method:barplot(height, width = 1, space = NULL,        names.arg = NULL, legend.text = NULL, beside = FALSE,        horiz = FALSE, density = NULL, angle = 45,        col = NULL, border = par(\"fg\"),        main = NULL, sub = NULL, xlab = NULL, ylab = NULL,        xlim = NULL, ylim = NULL, xpd = TRUE, log = \"\",        axes = TRUE, axisnames = TRUE,        cex.axis = par(\"cex.axis\"), cex.names = par(\"cex.axis\"),        inside = TRUE, plot = TRUE, axis.lty = 0, offset = 0,        add = FALSE, args.legend = NULL, ...)","prefix":"barplot","type":"function","description":"Creates a bar plot with vertical or horizontal bars.","leftLabel":"graphics","rightLabel":"R: Bar Plots"},"box":{"text":"box","snippet":"box(which = \"plot\", lty = \"solid\", ...)","prefix":"box","type":"function","description":"This function draws a box around the current plot in the given colorand linetype.  The bty parameter determinesthe type of box drawn.  See par for details.","leftLabel":"graphics","rightLabel":"R: Draw a Box around a Plot"},"boxplot":{"text":"boxplot","snippet":"boxplot(x, ...)## S3 method for class 'formula'boxplot(formula, data = NULL, ..., subset, na.action = NULL,        drop = FALSE, sep = \".\", lex.order = FALSE)## Default S3 method:boxplot(x, ..., range = 1.5, width = NULL, varwidth = FALSE,        notch = FALSE, outline = TRUE, names, plot = TRUE,        border = par(\"fg\"), col = NULL, log = \"\",        pars = list(boxwex = 0.8, staplewex = 0.5, outwex = 0.5),        horizontal = FALSE, add = FALSE, at = NULL)","prefix":"boxplot","type":"function","description":"Produce box-and-whisker plot(s) of the given (grouped) values.","leftLabel":"graphics","rightLabel":"R: Box Plots"},"boxplot.matrix":{"text":"boxplot.matrix","snippet":"## S3 method for class 'matrix'boxplot(x, use.cols = TRUE, ...)","prefix":"boxplot.matrix","type":"function","description":"Interpreting the columns (or rows) of a matrix as different groups, draw aboxplot for each.","leftLabel":"graphics","rightLabel":"R: Draw a Boxplot for each Column (Row) of a Matrix"},"bxp":{"text":"bxp","snippet":"bxp(z, notch = FALSE, width = NULL, varwidth = FALSE,    outline = TRUE, notch.frac = 0.5, log = \"\",    border = par(\"fg\"), pars = NULL, frame.plot = axes,    horizontal = FALSE, add = FALSE, at = NULL, show.names = NULL,    ...)","prefix":"bxp","type":"function","description":"bxp draws box plots based on the given summaries in z.It is usually called from within boxplot, but can beinvoked directly.","leftLabel":"graphics","rightLabel":"R: Draw Box Plots from Summaries"},"cdplot":{"text":"cdplot","snippet":"cdplot(x, ...)## Default S3 method:cdplot(x, y,  plot = TRUE, tol.ylab = 0.05, ylevels = NULL,  bw = \"nrd0\", n = 512, from = NULL, to = NULL,  col = NULL, border = 1, main = \"\", xlab = NULL, ylab = NULL,  yaxlabels = NULL, xlim = NULL, ylim = c(0, 1), ...)## S3 method for class 'formula'cdplot(formula, data = list(),  plot = TRUE, tol.ylab = 0.05, ylevels = NULL,  bw = \"nrd0\", n = 512, from = NULL, to = NULL,  col = NULL, border = 1, main = \"\", xlab = NULL, ylab = NULL,  yaxlabels = NULL, xlim = NULL, ylim = c(0, 1), ...,  subset = NULL)","prefix":"cdplot","type":"function","description":"Computes and plots conditional densities describing how theconditional distribution of a categorical variable y changes over anumerical variable x.","leftLabel":"graphics","rightLabel":"R: Conditional Density Plots"},"clip":{"text":"clip","snippet":"clip(x1, x2, y1, y2)","prefix":"clip","type":"function","description":"Set clipping region in user coordinates","leftLabel":"graphics","rightLabel":"R: Set Clipping Region"},"contour":{"text":"contour","snippet":"contour(x, ...)## Default S3 method:contour(x = seq(0, 1, length.out = nrow(z)),        y = seq(0, 1, length.out = ncol(z)),        z,        nlevels = 10, levels = pretty(zlim, nlevels),        labels = NULL,        xlim = range(x, finite = TRUE),        ylim = range(y, finite = TRUE),        zlim = range(z, finite = TRUE),        labcex = 0.6, drawlabels = TRUE, method = \"flattest\",        vfont, axes = TRUE, frame.plot = axes,        col = par(\"fg\"), lty = par(\"lty\"), lwd = par(\"lwd\"),        add = FALSE, ...)","prefix":"contour","type":"function","description":"Create a contour plot, or add contour lines to an existing plot.","leftLabel":"graphics","rightLabel":"R: Display Contours"},"convertXY":{"text":"convertXY","snippet":"grconvertX(x, from = \"user\", to = \"user\")grconvertY(y, from = \"user\", to = \"user\")","prefix":"convertXY","type":"function","description":"Convert between graphics coordinate systems.","leftLabel":"graphics","rightLabel":"R: Convert between Graphics Coordinate Systems"},"coplot":{"text":"coplot","snippet":"coplot(formula, data, given.values, panel = points, rows, columns,       show.given = TRUE, col = par(\"fg\"), pch = par(\"pch\"),       bar.bg = c(num = gray(0.8), fac = gray(0.95)),       xlab = c(x.name, paste(\"Given :\", a.name)),       ylab = c(y.name, paste(\"Given :\", b.name)),       subscripts = FALSE,       axlabels = function(f) abbreviate(levels(f)),       number = 6, overlap = 0.5, xlim, ylim, ...)co.intervals(x, number = 6, overlap = 0.5)","prefix":"coplot","type":"function","description":"This function produces two variants of the conditioning plotsdiscussed in the reference below.","leftLabel":"graphics","rightLabel":"R: Conditioning Plots"},"curve":{"text":"curve","snippet":"curve(expr, from = NULL, to = NULL, n = 101, add = FALSE,      type = \"l\", xname = \"x\", xlab = xname, ylab = NULL,      log = NULL, xlim = NULL, ...)## S3 method for class 'function'plot(x, y = 0, to = 1, from = y, xlim = NULL, ylab = NULL, ...)","prefix":"curve","type":"function","description":"Draws a curve corresponding to a function over the interval[from, to]. curve can plot also an expression in the variablexname, default x.","leftLabel":"graphics","rightLabel":"R: Draw Function Plots"},"dotchart":{"text":"dotchart","snippet":"dotchart(x, labels = NULL, groups = NULL, gdata = NULL,         cex = par(\"cex\"), pt.cex = cex,         pch = 21, gpch = 21, bg = par(\"bg\"),         color = par(\"fg\"), gcolor = par(\"fg\"), lcolor = \"gray\",         xlim = range(x[is.finite(x)]),         main = NULL, xlab = NULL, ylab = NULL, ...)","prefix":"dotchart","type":"function","description":"Draw a Cleveland dot plot.","leftLabel":"graphics","rightLabel":"R: Cleveland's Dot Plots"},"filled.contour":{"text":"filled.contour","snippet":"filled.contour(x = seq(0, 1, length.out = nrow(z)),               y = seq(0, 1, length.out = ncol(z)),               z,               xlim = range(x, finite = TRUE),               ylim = range(y, finite = TRUE),               zlim = range(z, finite = TRUE),               levels = pretty(zlim, nlevels), nlevels = 20,               color.palette = cm.colors,               col = color.palette(length(levels) - 1),               plot.title, plot.axes, key.title, key.axes,               asp = NA, xaxs = \"i\", yaxs = \"i\", las = 1,               axes = TRUE, frame.plot = axes, ...).filled.contour(x, y, z, levels, col)","prefix":"filled.contour","type":"function","description":"This function produces a contour plot with the areas between thecontours filled in solid color (Cleveland calls this a level plot).  Akey showing how the colors map to z values is shown to the right ofthe plot.","leftLabel":"graphics","rightLabel":"R: Level (Contour) Plots"},"fourfoldplot":{"text":"fourfoldplot","snippet":"fourfoldplot(x, color = c(\"#99CCFF\", \"#6699CC\"),             conf.level = 0.95,             std = c(\"margins\", \"ind.max\", \"all.max\"),             margin = c(1, 2), space = 0.2, main = NULL,             mfrow = NULL, mfcol = NULL)","prefix":"fourfoldplot","type":"function","description":"Creates a fourfold display of a 2 by 2 by k contingency table onthe current graphics device, allowing for the visual inspection of theassociation between two dichotomous variables in one or severalpopulations (strata).","leftLabel":"graphics","rightLabel":"R: Fourfold Plots"},"frame":{"text":"frame","snippet":"plot.new()frame()","prefix":"frame","type":"function","description":"This function (frame is an alias forplot.new) causes the completion of plotting in the current plot(if there is one) and an advance to a new graphics frame.  This isused in all high-level plotting functions and also useful for skippingplots when a multi-figure region is in use.","leftLabel":"graphics","rightLabel":"R: Create / Start a New Plot Frame"},"graphics-defunct":{"text":"graphics-defunct","snippet":"# Defunct in 1.3.0dotplot(...)stripplot(...)# Defunct in 1.6.0piechart(x, labels = names(x), edges = 200, radius = 0.8,         density = NULL, angle = 45, col = NULL, main = NULL, ...)","prefix":"graphics-defunct","type":"function","description":"The functions or variables listed here are no longer part of R asthey are not needed (any more).","leftLabel":"graphics","rightLabel":"R: Defunct Functions in Package 'graphics'"},"graphics-package":{"text":"graphics-package","snippet":{},"prefix":"graphics-package","type":"function","description":"R functions for base graphics","leftLabel":"graphics","rightLabel":"R: The R Graphics Package"},"grid":{"text":"grid","snippet":"grid(nx = NULL, ny = nx, col = \"lightgray\", lty = \"dotted\",     lwd = par(\"lwd\"), equilogs = TRUE)","prefix":"grid","type":"function","description":"grid adds an nx by ny rectangular grid to anexisting plot.","leftLabel":"graphics","rightLabel":"R: Add Grid to a Plot"},"hist.POSIXt":{"text":"hist.POSIXt","snippet":"## S3 method for class 'POSIXt'hist(x, breaks, ...,     xlab = deparse(substitute(x)),     plot = TRUE, freq = FALSE,     start.on.monday = TRUE, format, right = TRUE)## S3 method for class 'Date'hist(x, breaks, ...,     xlab = deparse(substitute(x)),     plot = TRUE, freq = FALSE,     start.on.monday = TRUE, format, right = TRUE)","prefix":"hist.POSIXt","type":"function","description":"Method for hist applied to date or date-time objects.","leftLabel":"graphics","rightLabel":"R: Histogram of a Date or Date-Time Object"},"hist":{"text":"hist","snippet":"hist(x, ...)## Default S3 method:hist(x, breaks = \"Sturges\",     freq = NULL, probability = !freq,     include.lowest = TRUE, right = TRUE,     density = NULL, angle = 45, col = NULL, border = NULL,     main = paste(\"Histogram of\" , xname),     xlim = range(breaks), ylim = NULL,     xlab = xname, ylab,     axes = TRUE, plot = TRUE, labels = FALSE,     nclass = NULL, warn.unused = TRUE, ...)","prefix":"hist","type":"function","description":"The generic function hist computes a histogram of the givendata values.  If plot = TRUE, the resulting object ofclass \"histogram\" is plotted byplot.histogram, before it is returned.","leftLabel":"graphics","rightLabel":"R: Histograms"},"identify":{"text":"identify","snippet":"identify(x, ...)## Default S3 method:identify(x, y = NULL, labels = seq_along(x), pos = FALSE,         n = length(x), plot = TRUE, atpen = FALSE, offset = 0.5,         tolerance = 0.25, ...)","prefix":"identify","type":"function","description":"identify reads the position of the graphics pointer when the(first) mouse button is pressed.  It then searches the coordinatesgiven in x and y for the point closest to the pointer.If this point is close enough to the pointer, its index will be returned aspart of the value of the call.","leftLabel":"graphics","rightLabel":"R: Identify Points in a Scatter Plot"},"image":{"text":"image","snippet":"image(x, ...)## Default S3 method:image(x, y, z, zlim, xlim, ylim, col = heat.colors(12),      add = FALSE, xaxs = \"i\", yaxs = \"i\", xlab, ylab,      breaks, oldstyle = FALSE, useRaster, ...)","prefix":"image","type":"function","description":"Creates a grid of colored or gray-scale rectangles with colorscorresponding to the values in z.  This can be used to displaythree-dimensional or spatial data aka images.This is a generic function.","leftLabel":"graphics","rightLabel":"R: Display a Color Image"},"layout":{"text":"layout","snippet":"layout(mat, widths = rep.int(1, ncol(mat)),       heights = rep.int(1, nrow(mat)), respect = FALSE)layout.show(n = 1)lcm(x)","prefix":"layout","type":"function","description":"layout divides the device up into as many rows and columns asthere are in matrix mat, with the column-widths and therow-heights specified in the respective arguments.","leftLabel":"graphics","rightLabel":"R: Specifying Complex Plot Arrangements"},"legend":{"text":"legend","snippet":"legend(x, y = NULL, legend, fill = NULL, col = par(\"col\"),       border = \"black\", lty, lwd, pch,       angle = 45, density = NULL, bty = \"o\", bg = par(\"bg\"),       box.lwd = par(\"lwd\"), box.lty = par(\"lty\"), box.col = par(\"fg\"),       pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd,       xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,       adj = c(0, 0.5), text.width = NULL, text.col = par(\"col\"),       text.font = NULL, merge = do.lines && has.pch, trace = FALSE,       plot = TRUE, ncol = 1, horiz = FALSE, title = NULL,       inset = 0, xpd, title.col = text.col, title.adj = 0.5,       seg.len = 2)","prefix":"legend","type":"function","description":"This function can be used to add legends to plots.  Note that a callto the function locator(1) can be used in place of the xand y arguments.","leftLabel":"graphics","rightLabel":"R: Add Legends to Plots"},"lines":{"text":"lines","snippet":"lines(x, ...)## Default S3 method:lines(x, y = NULL, type = \"l\", ...)","prefix":"lines","type":"function","description":"A generic function taking coordinates given in various ways andjoining the corresponding points with line segments.","leftLabel":"graphics","rightLabel":"R: Add Connected Line Segments to a Plot"},"locator":{"text":"locator","snippet":"locator(n = 512, type = \"n\", ...)","prefix":"locator","type":"function","description":"Reads the position of the graphics cursor when the (first) mousebutton is pressed.","leftLabel":"graphics","rightLabel":"R: Graphical Input"},"matplot":{"text":"matplot","snippet":"matplot(x, y, type = \"p\", lty = 1:5, lwd = 1, lend = par(\"lend\"),        pch = NULL,        col = 1:6, cex = NULL, bg = NA,        xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,        ..., add = FALSE, verbose = getOption(\"verbose\"))matpoints(x, y, type = \"p\", lty = 1:5, lwd = 1, pch = NULL,          col = 1:6, ...)matlines (x, y, type = \"l\", lty = 1:5, lwd = 1, pch = NULL,          col = 1:6, ...)","prefix":"matplot","type":"function","description":"Plot the columns of one matrix against the columns of another.","leftLabel":"graphics","rightLabel":"R: Plot Columns of Matrices"},"mosaicplot":{"text":"mosaicplot","snippet":"mosaicplot(x, ...)## Default S3 method:mosaicplot(x, main = deparse(substitute(x)),           sub = NULL, xlab = NULL, ylab = NULL,           sort = NULL, off = NULL, dir = NULL,           color = NULL, shade = FALSE, margin = NULL,           cex.axis = 0.66, las = par(\"las\"), border = NULL,           type = c(\"pearson\", \"deviance\", \"FT\"), ...)## S3 method for class 'formula'mosaicplot(formula, data = NULL, ...,           main = deparse(substitute(data)), subset,           na.action = stats::na.omit)","prefix":"mosaicplot","type":"function","description":"Plots a mosaic on the current graphics device.","leftLabel":"graphics","rightLabel":"R: Mosaic Plots"},"mtext":{"text":"mtext","snippet":"mtext(text, side = 3, line = 0, outer = FALSE, at = NA,      adj = NA, padj = NA, cex = NA, col = NA, font = NA, ...)","prefix":"mtext","type":"function","description":"Text is written in one of the four margins of the current figure regionor one of the outer margins of the device region.","leftLabel":"graphics","rightLabel":"R: Write Text into the Margins of a Plot"},"pairs":{"text":"pairs","snippet":"pairs(x, ...)## S3 method for class 'formula'pairs(formula, data = NULL, ..., subset,      na.action = stats::na.pass)## Default S3 method:pairs(x, labels, panel = points, ...,      horInd = 1:nc, verInd = 1:nc,      lower.panel = panel, upper.panel = panel,      diag.panel = NULL, text.panel = textPanel,      label.pos = 0.5 + has.diag/3, line.main = 3,      cex.labels = NULL, font.labels = 1,      row1attop = TRUE, gap = 1, log = \"\")","prefix":"pairs","type":"function","description":"A matrix of scatterplots is produced.","leftLabel":"graphics","rightLabel":"R: Scatterplot Matrices"},"panel.smooth":{"text":"panel.smooth","snippet":"panel.smooth(x, y, col = par(\"col\"), bg = NA, pch = par(\"pch\"),             cex = 1, col.smooth = \"red\", span = 2/3, iter = 3,             ...)","prefix":"panel.smooth","type":"function","description":"An example of a simple useful panel function to be used asargument in e.g., coplot or pairs.","leftLabel":"graphics","rightLabel":"R: Simple Panel Plot"},"par":{"text":"par","snippet":"par(..., no.readonly = FALSE)<highlevel plot> (..., <tag> = <value>)","prefix":"par","type":"function","description":"par can be used to set or query graphical parameters.Parameters can be set by specifying them as arguments to par intag = value form, or by passing them as a list of taggedvalues.","leftLabel":"graphics","rightLabel":"R: Set or Query Graphical Parameters"},"persp":{"text":"persp","snippet":"persp(x, ...)## Default S3 method:persp(x = seq(0, 1, length.out = nrow(z)),      y = seq(0, 1, length.out = ncol(z)),      z, xlim = range(x), ylim = range(y),      zlim = range(z, na.rm = TRUE),      xlab = NULL, ylab = NULL, zlab = NULL,      main = NULL, sub = NULL,      theta = 0, phi = 15, r = sqrt(3), d = 1,      scale = TRUE, expand = 1,      col = \"white\", border = NULL, ltheta = -135, lphi = 0,      shade = NA, box = TRUE, axes = TRUE, nticks = 5,      ticktype = \"simple\", ...)","prefix":"persp","type":"function","description":"This function draws perspective plots of a surface over thex–y plane.  persp is a generic function.","leftLabel":"graphics","rightLabel":"R: Perspective Plots"},"pie":{"text":"pie","snippet":"pie(x, labels = names(x), edges = 200, radius = 0.8,    clockwise = FALSE, init.angle = if(clockwise) 90 else 0,    density = NULL, angle = 45, col = NULL, border = NULL,    lty = NULL, main = NULL, ...)","prefix":"pie","type":"function","description":"Draw a pie chart.","leftLabel":"graphics","rightLabel":"R: Pie Charts"},"plot":{"text":"plot","snippet":"plot(x, y, ...)","prefix":"plot","type":"function","description":"Generic function for plotting of R objects.  For more details aboutthe graphical parameter arguments, see par.","leftLabel":"graphics","rightLabel":"R: Generic X-Y Plotting"},"plot.dataframe":{"text":"plot.dataframe","snippet":"## S3 method for class 'data.frame'plot(x, ...)","prefix":"plot.dataframe","type":"function","description":"plot.data.frame, a method for the plot generic.It is designed for a quick look at numeric data frames.","leftLabel":"graphics","rightLabel":"R: Plot Method for Data Frames"},"plot.default":{"text":"plot.default","snippet":"## Default S3 method:plot(x, y = NULL, type = \"p\",  xlim = NULL, ylim = NULL,     log = \"\", main = NULL, sub = NULL, xlab = NULL, ylab = NULL,     ann = par(\"ann\"), axes = TRUE, frame.plot = axes,     panel.first = NULL, panel.last = NULL, asp = NA, ...)","prefix":"plot.default","type":"function","description":"Draw a scatter plot with decorations such as axes and titlesin the active graphics window.","leftLabel":"graphics","rightLabel":"R: The Default Scatterplot Function"},"plot.design":{"text":"plot.design","snippet":"plot.design(x, y = NULL, fun = mean, data = NULL, ...,            ylim = NULL, xlab = \"Factors\", ylab = NULL,            main = NULL, ask = NULL, xaxt = par(\"xaxt\"),            axes = TRUE, xtick = FALSE)","prefix":"plot.design","type":"function","description":"Plot univariate effects of one or more factors,typically for a designed experiment as analyzed by aov().","leftLabel":"graphics","rightLabel":"R: Plot Univariate Effects of a Design or Model"},"plot.factor":{"text":"plot.factor","snippet":"## S3 method for class 'factor'plot(x, y, legend.text = NULL, ...)","prefix":"plot.factor","type":"function","description":"This functions implements a scatterplot method forfactor arguments of the genericplot function.","leftLabel":"graphics","rightLabel":"R: Plotting Factor Variables"},"plot.formula":{"text":"plot.formula","snippet":"## S3 method for class 'formula'plot(formula, data = parent.frame(), ..., subset,             ylab = varnames[response], ask = dev.interactive())## S3 method for class 'formula'points(formula, data = parent.frame(), ..., subset)## S3 method for class 'formula'lines(formula, data = parent.frame(), ..., subset)## S3 method for class 'formula'text(formula, data = parent.frame(), ..., subset)","prefix":"plot.formula","type":"function","description":"Specify a scatterplot or add points, lines, or text via a formula.","leftLabel":"graphics","rightLabel":"R: Formula Notation for Scatterplots"},"plot.raster":{"text":"plot.raster","snippet":"## S3 method for class 'raster'plot(x, y,     xlim = c(0, ncol(x)), ylim = c(0, nrow(x)),     xaxs = \"i\", yaxs = \"i\",     asp = 1, add = FALSE, ...)","prefix":"plot.raster","type":"function","description":"This functions implements a plot method for raster images.","leftLabel":"graphics","rightLabel":"R: Plotting Raster Images"},"plot.table":{"text":"plot.table","snippet":"## S3 method for class 'table'plot(x, type = \"h\", ylim = c(0, max(x)), lwd = 2,     xlab = NULL, ylab = NULL, frame.plot = is.num, ...)## S3 method for class 'table'points(x, y = NULL, type = \"h\", lwd = 2, ...)## S3 method for class 'table'lines(x, y = NULL, type = \"h\", lwd = 2, ...)","prefix":"plot.table","type":"function","description":"This is a method of the generic plot function for(contingency) table objects.  Whereas for two- and moredimensional tables, a mosaicplot is drawn,one-dimensional ones are plotted as bars.","leftLabel":"graphics","rightLabel":"R: Plot Methods for 'table' Objects"},"plot.window":{"text":"plot.window","snippet":"plot.window(xlim, ylim, log = \"\", asp = NA, ...)","prefix":"plot.window","type":"function","description":"This function sets up the world coordinate system for a graphicswindow.  It is called by higher level functions such asplot.default (after plot.new).","leftLabel":"graphics","rightLabel":"R: Set up World Coordinates for Graphics Window"},"plot.xy":{"text":"plot.xy","snippet":"plot.xy(xy, type, pch = par(\"pch\"), lty = par(\"lty\"),        col = par(\"col\"), bg = NA,        cex = 1, lwd = par(\"lwd\"), ...)","prefix":"plot.xy","type":"function","description":"This is the internal function that does the basic plotting ofpoints and lines.  Usually, one should rather use the higher levelfunctions instead and refer to their help pages for explanation of thearguments.","leftLabel":"graphics","rightLabel":"R: Basic Internal Plot Function"},"plothistogram":{"text":"plothistogram","snippet":"## S3 method for class 'histogram'plot(x, freq = equidist, density = NULL, angle = 45,               col = NULL, border = par(\"fg\"), lty = NULL,               main = paste(\"Histogram of\",                            paste(x$xname, collapse = \"\\n\")),               sub = NULL, xlab = x$xname, ylab,               xlim = range(x$breaks), ylim = NULL,               axes = TRUE, labels = FALSE, add = FALSE,               ann = TRUE, ...)## S3 method for class 'histogram'lines(x, ...)","prefix":"plothistogram","type":"function","description":"These are methods for objects of class \"histogram\", typicallyproduced by hist.","leftLabel":"graphics","rightLabel":"R: Plot Histograms"},"points":{"text":"points","snippet":"points(x, ...)## Default S3 method:points(x, y = NULL, type = \"p\", ...)","prefix":"points","type":"function","description":"points is a generic function to draw a sequence of points atthe specified coordinates.  The specified character(s) are plotted,centered at the coordinates.","leftLabel":"graphics","rightLabel":"R: Add Points to a Plot"},"polygon":{"text":"polygon","snippet":"polygon(x, y = NULL, density = NULL, angle = 45,        border = NULL, col = NA, lty = par(\"lty\"),        ..., fillOddEven = FALSE)","prefix":"polygon","type":"function","description":"polygon draws the polygons whose vertices aregiven in x and y.","leftLabel":"graphics","rightLabel":"R: Polygon Drawing"},"polypath":{"text":"polypath","snippet":"polypath(x, y = NULL,         border = NULL, col = NA, lty = par(\"lty\"),         rule = \"winding\", ...)","prefix":"polypath","type":"function","description":"path draws a path whose vertices aregiven in x and y.","leftLabel":"graphics","rightLabel":"R: Path Drawing"},"rasterImage":{"text":"rasterImage","snippet":"rasterImage(image,            xleft, ybottom, xright, ytop,            angle = 0, interpolate = TRUE, ...)","prefix":"rasterImage","type":"function","description":"rasterImage draws a raster image at the given locations and sizes.","leftLabel":"graphics","rightLabel":"R: Draw One or More Raster Images"},"rect":{"text":"rect","snippet":"rect(xleft, ybottom, xright, ytop, density = NULL, angle = 45,     col = NA, border = NULL, lty = par(\"lty\"), lwd = par(\"lwd\"),     ...)","prefix":"rect","type":"function","description":"rect draws a rectangle (or sequence of rectangles) with thegiven coordinates, fill and border colors.","leftLabel":"graphics","rightLabel":"R: Draw One or More Rectangles"},"rug":{"text":"rug","snippet":"rug(x, ticksize = 0.03, side = 1, lwd = 0.5, col = par(\"fg\"),    quiet = getOption(\"warn\") < 0, ...)","prefix":"rug","type":"function","description":"Adds a rug representation (1-d plot) of the data to the plot.","leftLabel":"graphics","rightLabel":"R: Add a Rug to a Plot"},"screen":{"text":"screen","snippet":"split.screen(figs, screen, erase = TRUE)screen(n = , new = TRUE)erase.screen(n = )close.screen(n, all.screens = FALSE)","prefix":"screen","type":"function","description":"split.screen defines a number of regions within the currentdevice which can, to some extent, be treated as separate graphicsdevices.  It is useful for generating multiple plots on a singledevice.  Screens can themselves be split, allowing for quite complexarrangements of plots.","leftLabel":"graphics","rightLabel":"R: Creating and Controlling Multiple Screens on a Single Device"},"segments":{"text":"segments","snippet":"segments(x0, y0, x1 = x0, y1 = y0,         col = par(\"fg\"), lty = par(\"lty\"), lwd = par(\"lwd\"),         ...)","prefix":"segments","type":"function","description":"Draw line segments between pairs of points.","leftLabel":"graphics","rightLabel":"R: Add Line Segments to a Plot"},"smoothScatter":{"text":"smoothScatter","snippet":"smoothScatter(x, y = NULL, nbin = 128, bandwidth,              colramp = colorRampPalette(c(\"white\", blues9)),              nrpoints = 100, ret.selection = FALSE,              pch = \".\", cex = 1, col = \"black\",              transformation = function(x) x^.25,              postPlotHook = box,              xlab = NULL, ylab = NULL, xlim, ylim,              xaxs = par(\"xaxs\"), yaxs = par(\"yaxs\"), ...)","prefix":"smoothScatter","type":"function","description":"smoothScatter produces a smoothed color densityrepresentation of a scatterplot, obtained through a (2D) kerneldensity estimate.","leftLabel":"graphics","rightLabel":"R: Scatterplots with Smoothed Densities Color Representation"},"spineplot":{"text":"spineplot","snippet":"spineplot(x, ...)## Default S3 method:spineplot(x, y = NULL,          breaks = NULL, tol.ylab = 0.05, off = NULL,          ylevels = NULL, col = NULL,          main = \"\", xlab = NULL, ylab = NULL,          xaxlabels = NULL, yaxlabels = NULL,          xlim = NULL, ylim = c(0, 1), axes = TRUE, ...)## S3 method for class 'formula'spineplot(formula, data = NULL,          breaks = NULL, tol.ylab = 0.05, off = NULL,          ylevels = NULL, col = NULL,          main = \"\", xlab = NULL, ylab = NULL,          xaxlabels = NULL, yaxlabels = NULL,          xlim = NULL, ylim = c(0, 1), axes = TRUE, ...,          subset = NULL, drop.unused.levels = FALSE)","prefix":"spineplot","type":"function","description":"Spine plots are a special cases of mosaic plots, and can be seen asa generalization of stacked (or highlighted) bar plots. Analogously,spinograms are an extension of histograms.","leftLabel":"graphics","rightLabel":"R: Spine Plots and Spinograms"},"stars":{"text":"stars","snippet":"stars(x, full = TRUE, scale = TRUE, radius = TRUE,      labels = dimnames(x)[[1]], locations = NULL,      nrow = NULL, ncol = NULL, len = 1,      key.loc = NULL, key.labels = dimnames(x)[[2]],      key.xpd = TRUE,      xlim = NULL, ylim = NULL, flip.labels = NULL,      draw.segments = FALSE,      col.segments = 1:n.seg, col.stars = NA, col.lines = NA,      axes = FALSE, frame.plot = axes,      main = NULL, sub = NULL, xlab = \"\", ylab = \"\",      cex = 0.8, lwd = 0.25, lty = par(\"lty\"), xpd = FALSE,      mar = pmin(par(\"mar\"),                 1.1+ c(2*axes+ (xlab != \"\"),                 2*axes+ (ylab != \"\"), 1, 0)),      add = FALSE, plot = TRUE, ...)","prefix":"stars","type":"function","description":"Draw star plots or segment diagrams of a multivariate data set.With one single location, also draws ‘spider’(or ‘radar’) plots.","leftLabel":"graphics","rightLabel":"R: Star (Spider/Radar) Plots and Segment Diagrams"},"stem":{"text":"stem","snippet":"stem(x, scale = 1, width = 80, atom = 1e-08)","prefix":"stem","type":"function","description":"stem produces a stem-and-leaf plot of the values in x.The parameter scale can be used to expand the scale of theplot.  A value of scale = 2 will cause the plot to be roughlytwice as long as the default.","leftLabel":"graphics","rightLabel":"R: Stem-and-Leaf Plots"},"stripchart":{"text":"stripchart","snippet":"stripchart(x, ...)## S3 method for class 'formula'stripchart(x, data = NULL, dlab = NULL, ...,           subset, na.action = NULL)## Default S3 method:stripchart(x, method = \"overplot\", jitter = 0.1, offset = 1/3,           vertical = FALSE, group.names, add = FALSE,           at = NULL, xlim = NULL, ylim = NULL,           ylab = NULL, xlab = NULL, dlab = \"\", glab = \"\",           log = \"\", pch = 0, col = par(\"fg\"), cex = par(\"cex\"),           axes = TRUE, frame.plot = axes, ...)","prefix":"stripchart","type":"function","description":"stripchart produces one dimensional scatter plots (or dotplots) of the given data.  These plots are a good alternative toboxplots when sample sizes are small.","leftLabel":"graphics","rightLabel":"R: 1-D Scatter Plots"},"strwidth":{"text":"strwidth","snippet":"strwidth(s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, ...)strheight(s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, ...)","prefix":"strwidth","type":"function","description":"These functions compute the width or height, respectively, of thegiven strings or mathematical expressions s[i] onthe current plotting device in user coordinates, inchesor as fraction of the figure width par(\"fin\").","leftLabel":"graphics","rightLabel":"R: Plotting Dimensions of Character Strings and Math Expressions"},"sunflowerplot":{"text":"sunflowerplot","snippet":"sunflowerplot(x, ...)## Default S3 method:sunflowerplot(x, y = NULL, number, log = \"\", digits = 6,              xlab = NULL, ylab = NULL, xlim = NULL, ylim = NULL,              add = FALSE, rotate = FALSE,              pch = 16, cex = 0.8, cex.fact = 1.5,              col = par(\"col\"), bg = NA, size = 1/8, seg.col = 2,              seg.lwd = 1.5, ...)## S3 method for class 'formula'sunflowerplot(formula, data = NULL, xlab = NULL, ylab = NULL, ...,             subset, na.action = NULL)","prefix":"sunflowerplot","type":"function","description":"Multiple points are plotted as ‘sunflowers’ with multiple leaves(‘petals’) such that overplotting is visualized instead ofaccidental and invisible.","leftLabel":"graphics","rightLabel":"R: Produce a Sunflower Scatter Plot"},"symbols":{"text":"symbols","snippet":"symbols(x, y = NULL, circles, squares, rectangles, stars,        thermometers, boxplots, inches = TRUE, add = FALSE,        fg = par(\"col\"), bg = NA,        xlab = NULL, ylab = NULL, main = NULL,        xlim = NULL, ylim = NULL, ...)","prefix":"symbols","type":"function","description":"This function draws symbols on a plot.  One of six symbols;circles, squares, rectangles, stars,thermometers, and boxplots, can be plotted at aspecified set of x and y coordinates.  Specific aspects of thesymbols, such as relative size, can be customized by additionalparameters.","leftLabel":"graphics","rightLabel":"R: Draw Symbols (Circles, Squares, Stars, Thermometers,..."},"text":{"text":"text","snippet":"text(x, ...)## Default S3 method: text(x, y = NULL, labels = seq_along(x$x), adj = NULL,     pos = NULL, offset = 0.5, vfont = NULL,     cex = 1, col = NULL, font = NULL, ...)","prefix":"text","type":"function","description":"text draws the strings given in the vector labels at thecoordinates given by x and y.y may be missing since xy.coords(x, y) is used forconstruction of the coordinates.","leftLabel":"graphics","rightLabel":"R: Add Text to a Plot"},"title":{"text":"title","snippet":"title(main = NULL, sub = NULL, xlab = NULL, ylab = NULL,      line = NA, outer = FALSE, ...)","prefix":"title","type":"function","description":"This function can be used to add labels to a plot.  Its first fourprincipal arguments can also be used as arguments in most high-levelplotting functions.  They must be of type character orexpression. In the latter case, quite a bit ofmathematical notation is available such as sub- and superscripts,greek letters, fractions, etc: see plotmath","leftLabel":"graphics","rightLabel":"R: Plot Annotation"},"units":{"text":"units","snippet":"xinch(x = 1, warn.log = TRUE)yinch(y = 1, warn.log = TRUE)xyinch(xy = 1, warn.log = TRUE)","prefix":"units","type":"function","description":"xinch and yinch convert the specified number of inchesgiven as their arguments into the correct units for plotting withgraphics functions.  Usually, this only makes sense when normalcoordinates are used, i.e., no log scale (see thelog argument to par).","leftLabel":"graphics","rightLabel":"R: Graphical Units"},"xspline":{"text":"xspline","snippet":"xspline(x, y = NULL, shape = 0, open = TRUE, repEnds = TRUE,        draw = TRUE, border = par(\"fg\"), col = NA, ...)","prefix":"xspline","type":"function","description":"Draw an X-spline, a curve drawn relative to control points.","leftLabel":"graphics","rightLabel":"R: Draw an X-spline"},"zAxis":{"text":"zAxis","snippet":"Axis(x = NULL, at = NULL, ..., side, labels = NULL)","prefix":"zAxis","type":"function","description":"Generic function to add a suitable axis to the current plot.","leftLabel":"graphics","rightLabel":"R: Generic Function to Add an Axis to a Plot"},"Devices":{"text":"Devices","snippet":{},"prefix":"Devices","type":"function","description":"The following graphics devices are currently available:","leftLabel":"grDevices","rightLabel":"R: List of Graphical Devices"},"Hershey":{"text":"Hershey","snippet":"Hershey","prefix":"Hershey","type":"function","description":"If the family graphical parameter (see par)has been set to one of the Hershey fonts (see ‘Details’)Hershey vector fonts are used to render text.","leftLabel":"grDevices","rightLabel":"R: Hershey Vector Fonts in R"},"Japanese":{"text":"Japanese","snippet":{},"prefix":"Japanese","type":"function","description":"The implementation of Hershey vector fonts provides a large number ofJapanese characters (Hiragana, Katakana, and Kanji).","leftLabel":"grDevices","rightLabel":"R: Japanese characters in R"},"Type1Font":{"text":"Type1Font","snippet":"Type1Font(family, metrics, encoding = \"default\")CIDFont(family, cmap, cmapEncoding, pdfresource = \"\")","prefix":"Type1Font","type":"function","description":"These functions are used to define the translation of a R graphicsfont family name to a Type 1 or CID font descriptions, used by boththe postscript and pdf graphics devices.","leftLabel":"grDevices","rightLabel":"R: Type 1 and CID Fonts"},"adjustcolor":{"text":"adjustcolor","snippet":"adjustcolor(col, alpha.f = 1, red.f = 1, green.f = 1, blue.f = 1,            offset = c(0, 0, 0, 0),            transform = diag(c(red.f, green.f, blue.f, alpha.f)))","prefix":"adjustcolor","type":"function","description":"Adjust or modify a vector of colors by “turning knobs” on one or morecoordinates in (r,g,b,α) space, typically by up or downscaling them.","leftLabel":"grDevices","rightLabel":"R: Adjust Colors in One or More Directions Conveniently."},"as.graphicsAnnot":{"text":"as.graphicsAnnot","snippet":"as.graphicsAnnot(x)","prefix":"as.graphicsAnnot","type":"function","description":"Coerce an R object into a form suitable for graphics annotation.","leftLabel":"grDevices","rightLabel":"R: Coerce an Object for Graphics Annotation"},"as.raster":{"text":"as.raster","snippet":"is.raster(x)as.raster(x, ...)## S3 method for class 'matrix'as.raster(x, max = 1, ...)## S3 method for class 'array'as.raster(x, max = 1, ...)## S3 method for class 'logical'as.raster(x, max = 1, ...)## S3 method for class 'numeric'as.raster(x, max = 1, ...)## S3 method for class 'character'as.raster(x, max = 1, ...)## S3 method for class 'raw'as.raster(x, max = 255L, ...)","prefix":"as.raster","type":"function","description":"Functions to create a raster object (representing a bitmapimage) and coerce other objects to a raster object.","leftLabel":"grDevices","rightLabel":"R: Create a Raster Object"},"axisTicks":{"text":"axisTicks","snippet":"axisTicks(usr, log, axp = NULL, nint = 5) .axisPars(usr, log = FALSE, nintLog = 5)","prefix":"axisTicks","type":"function","description":"Compute pretty axis scales and tick mark locations, the same way astraditional R graphics do it.  This is interesting particularly forlog scale axes.","leftLabel":"grDevices","rightLabel":"R: Compute Pretty Axis Tick Scales"},"boxplot.stats":{"text":"boxplot.stats","snippet":"boxplot.stats(x, coef = 1.5, do.conf = TRUE, do.out = TRUE)","prefix":"boxplot.stats","type":"function","description":"This function is typically called by another function togather the statistics necessary for producing box plots,but may be invoked separately.","leftLabel":"grDevices","rightLabel":"R: Box Plot Statistics"},"cairo":{"text":"cairo","snippet":"svg(filename = if(onefile) \"Rplots.svg\" else \"Rplot%03d.svg\",    width = 7, height = 7, pointsize = 12,    onefile = FALSE, family = \"sans\", bg = \"white\",    antialias = c(\"default\", \"none\", \"gray\", \"subpixel\"))cairo_pdf(filename = if(onefile) \"Rplots.pdf\" else \"Rplot%03d.pdf\",          width = 7, height = 7, pointsize = 12,          onefile = FALSE, family = \"sans\", bg = \"white\",          antialias = c(\"default\", \"none\", \"gray\", \"subpixel\"),          fallback_resolution = 300)cairo_ps(filename = if(onefile) \"Rplots.ps\" else \"Rplot%03d.ps\",         width = 7, height = 7, pointsize = 12,         onefile = FALSE, family = \"sans\", bg = \"white\",         antialias = c(\"default\", \"none\", \"gray\", \"subpixel\"),         fallback_resolution = 300)","prefix":"cairo","type":"function","description":"Graphics devices for SVG, PDF and PostScript graphics files usingthe cairo graphics API.","leftLabel":"grDevices","rightLabel":"R: Cairographics-based SVG, PDF and PostScript Graphics Devices"},"check.options":{"text":"check.options","snippet":"check.options(new, name.opt, reset = FALSE, assign.opt = FALSE,              envir = .GlobalEnv,              check.attributes = c(\"mode\", \"length\"),              override.check = FALSE)","prefix":"check.options","type":"function","description":"Utility function for setting options with some consistency checks.The attributes of the new settings in new arechecked for consistency with the model (often default)list in name.opt.","leftLabel":"grDevices","rightLabel":"R: Set Options with Consistency Checks"},"chull":{"text":"chull","snippet":"chull(x, y = NULL)","prefix":"chull","type":"function","description":"Computes the subset of points which lie on the convex hull of theset of points specified.","leftLabel":"grDevices","rightLabel":"R: Compute Convex Hull of a Set of Points"},"cm":{"text":"cm","snippet":"cm(x)","prefix":"cm","type":"function","description":"Translates from inches to cm (centimeters).","leftLabel":"grDevices","rightLabel":"R: Unit Transformation"},"col2rgb":{"text":"col2rgb","snippet":"col2rgb(col, alpha = FALSE)","prefix":"col2rgb","type":"function","description":"R color to RGB (red/green/blue) conversion.","leftLabel":"grDevices","rightLabel":"R: Color to RGB Conversion"},"colorRamp":{"text":"colorRamp","snippet":"colorRamp(colors, bias = 1, space = c(\"rgb\", \"Lab\"),          interpolate = c(\"linear\", \"spline\"), alpha = FALSE)colorRampPalette(colors, ...)","prefix":"colorRamp","type":"function","description":"These functions return functions that interpolate a set of givencolors to create new color palettes (like topo.colors) andcolor ramps, functions that map the interval [0, 1] to colors(like grey).","leftLabel":"grDevices","rightLabel":"R: Color interpolation"},"colors":{"text":"colors","snippet":"colors (distinct = FALSE)colours(distinct = FALSE)","prefix":"colors","type":"function","description":"Returns the built-in color names which R knows about.","leftLabel":"grDevices","rightLabel":"R: Color Names"},"contourLines":{"text":"contourLines","snippet":"contourLines(x = seq(0, 1, length.out = nrow(z)),             y = seq(0, 1, length.out = ncol(z)),             z, nlevels = 10,             levels = pretty(range(z, na.rm = TRUE), nlevels))","prefix":"contourLines","type":"function","description":"Calculate contour lines for a given set of data.","leftLabel":"grDevices","rightLabel":"R: Calculate Contour Lines"},"convertColor":{"text":"convertColor","snippet":"convertColor(color, from, to, from.ref.white, to.ref.white,             scale.in = 1, scale.out = 1, clip = TRUE)","prefix":"convertColor","type":"function","description":"Convert colours between their representations in standardcolour spaces.","leftLabel":"grDevices","rightLabel":"R: Convert between Colour Spaces"},"densCols":{"text":"densCols","snippet":"densCols(x, y = NULL, nbin = 128, bandwidth,         colramp = colorRampPalette(blues9[-(1:3)]))blues9","prefix":"densCols","type":"function","description":"densCols produces a vector containing colors which encode thelocal densities at each point in a scatterplot.","leftLabel":"grDevices","rightLabel":"R: Colors for Smooth Density Plots"},"dev":{"text":"dev","snippet":"dev.cur()dev.list()dev.next(which = dev.cur())dev.prev(which = dev.cur())dev.off(which = dev.cur())dev.set(which = dev.next())dev.new(..., noRStudioGD = FALSE)graphics.off()","prefix":"dev","type":"function","description":"These functions provide control over multiple graphics devices.","leftLabel":"grDevices","rightLabel":"R: Control Multiple Devices"},"dev.capabilities":{"text":"dev.capabilities","snippet":"dev.capabilities(what = NULL)","prefix":"dev.capabilities","type":"function","description":"Query the capabilities of the current graphics device.","leftLabel":"grDevices","rightLabel":"R: Query Capabilities of the Current Graphics Device"},"dev.capture":{"text":"dev.capture","snippet":"dev.capture(native = FALSE)","prefix":"dev.capture","type":"function","description":"dev.capture captures the current contents of a graphics deviceas a raster (bitmap) image.","leftLabel":"grDevices","rightLabel":"R: Capture device output as a raster image"},"dev.flush":{"text":"dev.flush","snippet":"dev.hold(level = 1L)dev.flush(level = 1L)","prefix":"dev.flush","type":"function","description":"This gives a way to hold/flush output on certain on-screen devices,and is ignored by other devices.","leftLabel":"grDevices","rightLabel":"R: Hold or Flush Output on an On-Screen Graphics Device."},"dev.interactive":{"text":"dev.interactive","snippet":"dev.interactive(orNone = FALSE)deviceIsInteractive(name = NULL)","prefix":"dev.interactive","type":"function","description":"Test if the current graphics device (or that which would be opened) isinteractive.","leftLabel":"grDevices","rightLabel":"R: Is the Current Graphics Device Interactive?"},"dev.size":{"text":"dev.size","snippet":"dev.size(units = c(\"in\", \"cm\", \"px\"))","prefix":"dev.size","type":"function","description":"Find the dimensions of the device surface of the current device.","leftLabel":"grDevices","rightLabel":"R: Find Size of Device Surface"},"dev2":{"text":"dev2","snippet":"dev.copy(device, ..., which = dev.next())dev.print(device = postscript, ...)dev.copy2eps(...)dev.copy2pdf(..., out.type = \"pdf\")dev.control(displaylist = c(\"inhibit\", \"enable\"))","prefix":"dev2","type":"function","description":"dev.copy copies the graphics contents of the current deviceto the device specified by which or to a new device which hasbeen created by the function specified by device (it is anerror to specify both which and device).  (If recordingis off on the current device, there are no contents to copy: this willresult in no plot or an empty plot.)The device copied to becomes the current device.","leftLabel":"grDevices","rightLabel":"R: Copy Graphics Between Multiple Devices"},"dev2bitmap":{"text":"dev2bitmap","snippet":"bitmap(file, type = \"png16m\", height = 7, width = 7, res = 72,       units = \"in\", pointsize, taa = NA, gaa = NA, ...)dev2bitmap(file, type = \"png16m\", height = 7, width = 7, res = 72,           units = \"in\", pointsize, ...,           method = c(\"postscript\", \"pdf\"), taa = NA, gaa = NA)","prefix":"dev2bitmap","type":"function","description":"bitmap generates a graphics file.dev2bitmap copies the current graphics device to a file in agraphics format.","leftLabel":"grDevices","rightLabel":"R: Graphics Device for Bitmap Files via Ghostscript"},"devAskNewPage":{"text":"devAskNewPage","snippet":"devAskNewPage(ask = NULL)","prefix":"devAskNewPage","type":"function","description":"This function can be used to control (for the current device)whether the user is prompted before starting a new page of output.","leftLabel":"grDevices","rightLabel":"R: Prompt before New Page"},"embedFonts":{"text":"embedFonts","snippet":"embedFonts(file, format, outfile = file,           fontpaths = character(), options = character())","prefix":"embedFonts","type":"function","description":"Runs Ghostscript to process a PDF or PostScript file andembed all fonts in the file.","leftLabel":"grDevices","rightLabel":"R: Embed Fonts in PostScript and PDF"},"extendrange":{"text":"extendrange","snippet":"extendrange(x, r = range(x, na.rm = TRUE), f = 0.05)","prefix":"extendrange","type":"function","description":"Extends a numerical range by a small percentage, i.e., fraction,on both sides.","leftLabel":"grDevices","rightLabel":"R: Extend a Numerical Range by a Small Percentage"},"getGraphicsEvent":{"text":"getGraphicsEvent","snippet":"getGraphicsEvent(prompt = \"Waiting for input\",                 onMouseDown = NULL, onMouseMove = NULL,                 onMouseUp = NULL, onKeybd = NULL,                 onIdle = NULL,                 consolePrompt = prompt)setGraphicsEventHandlers(which = dev.cur(), ...)getGraphicsEventEnv(which = dev.cur())setGraphicsEventEnv(which = dev.cur(), env)","prefix":"getGraphicsEvent","type":"function","description":"This function waits for input from a graphics window in theform of a mouse or keyboard event.","leftLabel":"grDevices","rightLabel":"R: Wait for a mouse or keyboard event from a graphics window"},"grDevices-package":{"text":"grDevices-package","snippet":{},"prefix":"grDevices-package","type":"function","description":"Graphics devices and support for base and grid graphics","leftLabel":"grDevices","rightLabel":"R: The R Graphics Devices and Support for Colours and Fonts"},"grSoftVersion":{"text":"grSoftVersion","snippet":"grSoftVersion()","prefix":"grSoftVersion","type":"function","description":"Report versions of third-party graphics software.","leftLabel":"grDevices","rightLabel":"R: Report Versions of Graphics Software"},"gray":{"text":"gray","snippet":"gray(level, alpha = NULL)grey(level, alpha = NULL)","prefix":"gray","type":"function","description":"Create a vector of colors from a vector of gray levels.","leftLabel":"grDevices","rightLabel":"R: Gray Level Specification"},"gray.colors":{"text":"gray.colors","snippet":"gray.colors(n, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL)grey.colors(n, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL)","prefix":"gray.colors","type":"function","description":"Create a vector of n gamma-corrected gray colors.","leftLabel":"grDevices","rightLabel":"R: Gray Color Palette"},"hcl":{"text":"hcl","snippet":"hcl(h = 0, c = 35, l = 85, alpha, fixup = TRUE)","prefix":"hcl","type":"function","description":"Create a vector of colors from vectors specifying hue,chroma and luminance.","leftLabel":"grDevices","rightLabel":"R: HCL Color Specification"},"hsv":{"text":"hsv","snippet":"hsv(h = 1, s = 1, v = 1, alpha)","prefix":"hsv","type":"function","description":"Create a vector of colors from vectors specifying hue, saturation andvalue.","leftLabel":"grDevices","rightLabel":"R: HSV Color Specification"},"make.rgb":{"text":"make.rgb","snippet":"make.rgb(red, green, blue, name = NULL, white = \"D65\",         gamma = 2.2)colorConverter(toXYZ, fromXYZ, name, white = NULL)","prefix":"make.rgb","type":"function","description":"These functions specify colour spaces for use inconvertColor.","leftLabel":"grDevices","rightLabel":"R: Create colour spaces"},"n2mfrow":{"text":"n2mfrow","snippet":"n2mfrow(nr.plots)","prefix":"n2mfrow","type":"function","description":"Easy setup for plotting multiple figures (in a rectangular layout) onone page.  This computes a sensible default forpar(mfrow).","leftLabel":"grDevices","rightLabel":"R: Compute Default mfrow From Number of Plots"},"nclass":{"text":"nclass","snippet":"nclass.Sturges(x)nclass.scott(x)nclass.FD(x)","prefix":"nclass","type":"function","description":"Compute the number of classes for a histogram.","leftLabel":"grDevices","rightLabel":"R: Compute the Number of Classes for a Histogram"},"palette":{"text":"palette","snippet":"palette(value)","prefix":"palette","type":"function","description":"View or manipulate the color palette which is used when a col=has a numeric index.","leftLabel":"grDevices","rightLabel":"R: Set or View the Graphics Palette"},"palettes":{"text":"palettes","snippet":"rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)heat.colors(n, alpha = 1)terrain.colors(n, alpha = 1)topo.colors(n, alpha = 1)cm.colors(n, alpha = 1)","prefix":"palettes","type":"function","description":"Create a vector of n contiguous colors.","leftLabel":"grDevices","rightLabel":"R: Color Palettes"},"pdf":{"text":"pdf","snippet":"pdf(file = if(onefile) \"Rplots.pdf\" else \"Rplot%03d.pdf\",    width, height, onefile, family, title, fonts, version,    paper, encoding, bg, fg, pointsize, pagecentre, colormodel,    useDingbats, useKerning, fillOddEven, compress)","prefix":"pdf","type":"function","description":"pdf starts the graphics device driver for producing PDFgraphics.","leftLabel":"grDevices","rightLabel":"R: PDF Graphics Device"},"pdf.options":{"text":"pdf.options","snippet":"pdf.options(..., reset = FALSE)","prefix":"pdf.options","type":"function","description":"The auxiliary function pdf.options can be used to set or view(if called without arguments) the default values for some of thearguments to pdf.","leftLabel":"grDevices","rightLabel":"R: Auxiliary Function to Set/View Defaults for Arguments of pdf"},"pictex":{"text":"pictex","snippet":"pictex(file = \"Rplots.tex\", width = 5, height = 4, debug = FALSE,       bg = \"white\", fg = \"black\")","prefix":"pictex","type":"function","description":"This function produces simple graphics suitable for inclusion in TeXand LaTeX documents.  It dates from the very early days of R and isfor historical interest only.","leftLabel":"grDevices","rightLabel":"R: A PicTeX Graphics Driver"},"plotmath":{"text":"plotmath","snippet":{},"prefix":"plotmath","type":"function","description":"If the text argument to one of the text-drawing functions(text, mtext, axis,legend) in R is an expression, the argument isinterpreted as a mathematical expression and the output will beformatted according to TeX-like rules.  Expressions can also be usedfor titles, subtitles and x- and y-axis labels (but not for axislabels on persp plots).","leftLabel":"grDevices","rightLabel":"R: Mathematical Annotation in R"},"postscript":{"text":"postscript","snippet":"postscript(file = if(onefile) \"Rplots.ps\" else \"Rplot%03d.ps\",           onefile, family, title, fonts, encoding, bg, fg,           width, height, horizontal, pointsize,           paper, pagecentre, print.it, command,           colormodel, useKerning, fillOddEven)","prefix":"postscript","type":"function","description":"postscript starts the graphics device driver for producingPostScript graphics.","leftLabel":"grDevices","rightLabel":"R: PostScript Graphics"},"postscriptFonts":{"text":"postscriptFonts","snippet":"postscriptFonts(...)pdfFonts(...)","prefix":"postscriptFonts","type":"function","description":"These functions handle the translation of a R graphicsfont family name to a PostScript or PDF font description, used by thepostscript or pdf graphics devices.","leftLabel":"grDevices","rightLabel":"R: PostScript and PDF Font Families"},"pretty.Date":{"text":"pretty.Date","snippet":"## S3 method for class 'Date'pretty(x, n = 5, min.n = n %/% 2, sep = \" \", ...)## S3 method for class 'POSIXt'pretty(x, n = 5, min.n = n %/% 2, sep = \" \", ...)","prefix":"pretty.Date","type":"function","description":"Compute a sequence of about n+1 equally spaced ‘nice’values which cover the range of the values in x, possibly oflength one, when min.n = 0 and there is only one uniquex.","leftLabel":"grDevices","rightLabel":"R: Pretty Breakpoints for Date-Time Classes"},"ps.options":{"text":"ps.options","snippet":"ps.options(..., reset = FALSE, override.check = FALSE)setEPS(...)setPS(...)","prefix":"ps.options","type":"function","description":"The auxiliary function ps.options can be used to set or view(if called without arguments) the default values for some of thearguments to postscript.","leftLabel":"grDevices","rightLabel":"R: Auxiliary Function to Set/View Defaults for Arguments of..."},"recordGraphics":{"text":"recordGraphics","snippet":"recordGraphics(expr, list, env)","prefix":"recordGraphics","type":"function","description":"Records arbitrary code on the graphics engine display list.Useful for encapsulating calculations with graphical outputthat depends on the calculations.Intended only for expert use.","leftLabel":"grDevices","rightLabel":"R: Record Graphics Operations"},"recordplot":{"text":"recordplot","snippet":"recordPlot(load=NULL, attach=NULL)replayPlot(x, reloadPkgs=FALSE)","prefix":"recordplot","type":"function","description":"Functions to save the current plot in an R variable, and to replay it.","leftLabel":"grDevices","rightLabel":"R: Record and Replay Plots"},"rgb":{"text":"rgb","snippet":"rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)","prefix":"rgb","type":"function","description":"This function creates colors corresponding to the givenintensities (between 0 and max) of the red, green and blueprimaries.  The colour specification refers to thestandard sRGB colorspace (IEC standard 61966).","leftLabel":"grDevices","rightLabel":"R: RGB Color Specification"},"rgb2hsv":{"text":"rgb2hsv","snippet":"rgb2hsv(r, g = NULL, b = NULL, maxColorValue = 255)","prefix":"rgb2hsv","type":"function","description":"rgb2hsv transforms colorsfrom RGB space (red/green/blue)into HSV space (hue/saturation/value).","leftLabel":"grDevices","rightLabel":"R: RGB to HSV Conversion"},"trans3d":{"text":"trans3d","snippet":"trans3d(x, y, z, pmat)","prefix":"trans3d","type":"function","description":"Projection of 3-dimensional to 2-dimensional points using a 4x4viewing transformation matrix.  Mainly for adding toperspective plots such as persp.","leftLabel":"grDevices","rightLabel":"R: 3D to 2D Transformation for Perspective Plots"},"xfig":{"text":"xfig","snippet":"xfig(file = if(onefile) \"Rplots.fig\" else \"Rplot%03d.fig\",     onefile = FALSE, encoding = \"none\",     paper = \"default\", horizontal = TRUE,     width = 0, height = 0, family = \"Helvetica\",     pointsize = 12, bg = \"transparent\", fg = \"black\",     pagecentre = TRUE, defaultfont = FALSE, textspecial = FALSE)","prefix":"xfig","type":"function","description":"xfig starts the graphics device driver for producing XFig(version 3.2) graphics.","leftLabel":"grDevices","rightLabel":"R: XFig Graphics Device"},"xy.coords":{"text":"xy.coords","snippet":"xy.coords(x, y = NULL, xlab = NULL, ylab = NULL, log = NULL,          recycle = FALSE, setLab = TRUE)","prefix":"xy.coords","type":"function","description":"xy.coords is used by many functions to obtainx and y coordinates for plotting.  The use of this common mechanismacross all relevant R functions produces a measure of consistency.","leftLabel":"grDevices","rightLabel":"R: Extracting Plotting Structures"},"xyTable":{"text":"xyTable","snippet":"xyTable(x, y = NULL, digits)","prefix":"xyTable","type":"function","description":"Given (x,y) points, determine their multiplicity – checking forequality only up to some (crude kind of) noise.  Note that this isspecial kind of 2D binning.","leftLabel":"grDevices","rightLabel":"R: Multiplicities of (x,y) Points, e.g., for a Sunflower Plot"},"xyz.coords":{"text":"xyz.coords","snippet":"xyz.coords(x, y = NULL, z = NULL,           xlab = NULL, ylab = NULL, zlab = NULL,           log = NULL, recycle = FALSE, setLab = TRUE)","prefix":"xyz.coords","type":"function","description":"Utility for obtaining consistent x, y and z coordinates and labelsfor three dimensional (3D) plots.","leftLabel":"grDevices","rightLabel":"R: Extracting Plotting Structures"},"png":{"text":"png","snippet":"bmp(filename = \"Rplot%03d.bmp\",    width = 480, height = 480, units = \"px\", pointsize = 12,    bg = \"white\", res = NA, ...,    type = c(\"cairo\", \"Xlib\", \"quartz\"), antialias)jpeg(filename = \"Rplot%03d.jpeg\",     width = 480, height = 480, units = \"px\", pointsize = 12,     quality = 75,     bg = \"white\", res = NA, ...,     type = c(\"cairo\", \"Xlib\", \"quartz\"), antialias)png(filename = \"Rplot%03d.png\",    width = 480, height = 480, units = \"px\", pointsize = 12,     bg = \"white\",  res = NA, ...,    type = c(\"cairo\", \"cairo-png\", \"Xlib\", \"quartz\"), antialias)tiff(filename = \"Rplot%03d.tiff\",     width = 480, height = 480, units = \"px\", pointsize = 12,     compression = c(\"none\", \"rle\", \"lzw\", \"jpeg\", \"zip\", \"lzw+p\", \"zip+p\"),     bg = \"white\", res = NA,  ...,     type = c(\"cairo\", \"Xlib\", \"quartz\"), antialias)","prefix":"png","type":"function","description":"Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files.","leftLabel":"grDevices","rightLabel":"R: BMP, JPEG, PNG and TIFF graphics devices"},"quartz":{"text":"quartz","snippet":"quartz(title, width, height, pointsize, family, antialias, type,      file = NULL, bg, canvas, dpi)quartz.options(..., reset = FALSE)quartz.save(file, type = \"png\", device = dev.cur(), dpi = 100, ...)","prefix":"quartz","type":"function","description":"quartz starts a graphics device driver for the macOS System.It supports plotting both to the screen (the default) and to variousgraphics file formats.","leftLabel":"grDevices","rightLabel":"R: macOS Quartz Device"},"quartzFonts":{"text":"quartzFonts","snippet":"quartzFont(family)quartzFonts(...)","prefix":"quartzFonts","type":"function","description":"These functions handle the translation of a device-independent R graphicsfont family name to a quartz font description.","leftLabel":"grDevices","rightLabel":"R: quartz Fonts"},"savePlot":{"text":"savePlot","snippet":"savePlot(filename = paste(\"Rplot\", type, sep = \".\"),         type = c(\"png\", \"jpeg\", \"tiff\", \"bmp\"),         device = dev.cur())","prefix":"savePlot","type":"function","description":"Save the current page of a cairo X11() device to a file.","leftLabel":"grDevices","rightLabel":"R: Save Cairo X11 Plot to File"},"x11":{"text":"x11","snippet":"X11(display = \"\", width, height, pointsize, gamma, bg, canvas,    fonts, family, xpos, ypos, title, type, antialias)X11.options(..., reset = FALSE)","prefix":"x11","type":"function","description":"X11 starts a graphics device driver for the X Window System(version 11).  This can only be done on machines/accounts that haveaccess to an X server.","leftLabel":"grDevices","rightLabel":"R: X Window System Graphics"},"x11Fonts":{"text":"x11Fonts","snippet":"X11Font(font)X11Fonts(...)","prefix":"x11Fonts","type":"function","description":"These functions handle the translation of a device-independent R graphicsfont family name to an X11 font description.","leftLabel":"grDevices","rightLabel":"R: X11 Fonts"},"BATCH":{"text":"BATCH","snippet":"R CMD BATCH [options] infile [outfile]","prefix":"BATCH","type":"function","description":"Run R non-interactively with input from infile andsend output (stdout/stderr) to another file.","leftLabel":"utils","rightLabel":"R: Batch Execution of R"},"INSTALL":{"text":"INSTALL","snippet":"R CMD INSTALL [options] [-l lib] pkgs","prefix":"INSTALL","type":"function","description":"Utility for installing add-on packages.","leftLabel":"utils","rightLabel":"R: Install Add-on Packages"},"PkgUtils":{"text":"PkgUtils","snippet":"R CMD check [options] pkgdirsR CMD build [options] pkgdirs","prefix":"PkgUtils","type":"function","description":"Utilities for checking whether the sources of an R add-on packagework correctly, and for building a source package from them.","leftLabel":"utils","rightLabel":"R: Utilities for Building and Checking Add-on Packages"},"Question":{"text":"Question","snippet":"?topictype?topic","prefix":"Question","type":"function","description":"These functions provide access to documentation.Documentation on a topic with name name (typically, an Robject or a data set) can be displayed by either help(\"name\") or?name.","leftLabel":"utils","rightLabel":"R: Documentation Shortcuts"},"REMOVE":{"text":"REMOVE","snippet":"R CMD REMOVE [options] [-l lib] pkgs","prefix":"REMOVE","type":"function","description":"Utility for removing add-on packages.","leftLabel":"utils","rightLabel":"R: Remove Add-on Packages"},"RHOME":{"text":"RHOME","snippet":"R RHOME","prefix":"RHOME","type":"function","description":"Returns the location of the R home directory, which is the root ofthe installed R tree.","leftLabel":"utils","rightLabel":"R: R Home Directory"},"RShowDoc":{"text":"RShowDoc","snippet":"RShowDoc(what, type = c(\"pdf\", \"html\", \"txt\"), package)","prefix":"RShowDoc","type":"function","description":"Utility function to find and display R documentation.","leftLabel":"utils","rightLabel":"R: Show R Manuals and Other Documentation"},"RSiteSearch":{"text":"RSiteSearch","snippet":"RSiteSearch(string,            restrict = c(\"functions\", \"vignettes\", \"views\"),            format = c(\"normal\", \"short\"),            sortby = c(\"score\", \"date:late\", \"date:early\",                       \"subject\", \"subject:descending\",                       \"from\", \"from:descending\",                       \"size\", \"size:descending\"),            matchesPerPage = 20)","prefix":"RSiteSearch","type":"function","description":"Search for key words or phrases inhelp pages, vignettes or task views, using the search engineat http://search.r-project.org and view them in a web browser.","leftLabel":"utils","rightLabel":"R: Search for Key Words or Phrases in Documentation"},"Rprof":{"text":"Rprof","snippet":"Rprof(filename = \"Rprof.out\", append = FALSE, interval = 0.02,       memory.profiling = FALSE, gc.profiling = FALSE,        line.profiling = FALSE, numfiles = 100L, bufsize = 10000L)","prefix":"Rprof","type":"function","description":"Enable or disable profiling of the execution of R expressions.","leftLabel":"utils","rightLabel":"R: Enable Profiling of R's Execution"},"Rprofmem":{"text":"Rprofmem","snippet":"Rprofmem(filename = \"Rprofmem.out\", append = FALSE, threshold = 0)","prefix":"Rprofmem","type":"function","description":"Enable or disable reporting of memory allocation in R.","leftLabel":"utils","rightLabel":"R: Enable Profiling of R's Memory Use"},"Rscript":{"text":"Rscript","snippet":"Rscript [options] [-e expr [-e expr2 ...] | file] [args]","prefix":"Rscript","type":"function","description":"This is an alternative front end for use in #! scripts andother scripting applications.","leftLabel":"utils","rightLabel":"R: Scripting Front-End for R"},"Rtangle":{"text":"Rtangle","snippet":"Rtangle()RtangleSetup(file, syntax, output = NULL, annotate = TRUE,             split = FALSE, quiet = FALSE, drop.evalFALSE = FALSE, ...)","prefix":"Rtangle","type":"function","description":"A driver for Stangle that extracts R code chunks.Notably all RtangleSetup() arguments may be used as argumentsin the Stangle() call.","leftLabel":"utils","rightLabel":"R: R Driver for Stangle"},"RweaveLatex":{"text":"RweaveLatex","snippet":"RweaveLatex()RweaveLatexSetup(file, syntax, output = NULL, quiet = FALSE,                 debug = FALSE, stylepath, ...)","prefix":"RweaveLatex","type":"function","description":"A driver for Sweave that translates R code chunks inLaTeX files by “running them”, i.e., parse() andeval() each.","leftLabel":"utils","rightLabel":"R: R/LaTeX Driver for Sweave"},"SHLIB":{"text":"SHLIB","snippet":"R CMD SHLIB [options] [-o dllname] files","prefix":"SHLIB","type":"function","description":"Compile the given source files and then link all specified objectfiles into a shared object aka DLL which can be loaded into R usingdyn.load or library.dynam.","leftLabel":"utils","rightLabel":"R: Build Shared Object/DLL for Dynamic Loading"},"Sweave":{"text":"Sweave","snippet":"Sweave(file, driver = RweaveLatex(),       syntax = getOption(\"SweaveSyntax\"), encoding = \"\", ...)Stangle(file, driver = Rtangle(),        syntax = getOption(\"SweaveSyntax\"), encoding = \"\", ...)","prefix":"Sweave","type":"function","description":"Sweave provides a flexible framework for mixing text and R/S codefor automatic report generation.  The basic idea is to replace thecode with its output, such that the final document only contains thetext and the output of the statistical analysis: however, the sourcecode can also be included.","leftLabel":"utils","rightLabel":"R: Automatic Generation of Reports"},"SweaveSyntConv":{"text":"SweaveSyntConv","snippet":"SweaveSyntConv(file, syntax, output = NULL)","prefix":"SweaveSyntConv","type":"function","description":"This function converts the syntax of files in Sweaveformat to another Sweave syntax definition.","leftLabel":"utils","rightLabel":"R: Convert Sweave Syntax"},"SweaveUtils":{"text":"SweaveUtils","snippet":"RtangleWritedoc(object, chunk)RweaveChunkPrefix(options)RweaveEvalWithOpt(expr, options)RweaveLatexFinish(object, error = FALSE)RweaveLatexOptions(options)RweaveTryStop(err, options)SweaveHooks(options, run = FALSE, envir = .GlobalEnv)makeRweaveLatexCodeRunner(evalFunc = RweaveEvalWithOpt)","prefix":"SweaveUtils","type":"function","description":"These functions are handy for writing Sweave drivers and areconsidered internal and hence not documented.  Look at the source codeof the Sweave Latex driver (in thispackage) or the HTML driver (in the R2HTML package from CRAN) to seehow they can be used.","leftLabel":"utils","rightLabel":"R: Sweave Driver Utilities"},"URLencode":{"text":"URLencode","snippet":"URLencode(URL, reserved = FALSE, repeated = FALSE)URLdecode(URL)","prefix":"URLencode","type":"function","description":"Functions to percent-encode or decode characters in URLs.","leftLabel":"utils","rightLabel":"R: Encode or Decode a (partial) URL"},"View":{"text":"View","snippet":"View(x, title)","prefix":"View","type":"function","description":"Invoke a spreadsheet-style data viewer on a matrix-like R object.","leftLabel":"utils","rightLabel":"R: Invoke a Data Viewer"},"adist":{"text":"adist","snippet":"adist(x, y = NULL, costs = NULL, counts = FALSE, fixed = TRUE,      partial = !fixed, ignore.case = FALSE, useBytes = FALSE)","prefix":"adist","type":"function","description":"Compute the approximate string distance between character vectors.The distance is a generalized Levenshtein (edit) distance, giving theminimal possibly weighted number of insertions, deletions andsubstitutions needed to transform one string into another.","leftLabel":"utils","rightLabel":"R: Approximate String Distances"},"alarm":{"text":"alarm","snippet":"alarm()","prefix":"alarm","type":"function","description":"Gives an audible or visual signal to the user.","leftLabel":"utils","rightLabel":"R: Alert the User"},"apropos":{"text":"apropos","snippet":"apropos(what, where = FALSE, ignore.case = TRUE, mode = \"any\")find(what, mode = \"any\", numeric = FALSE, simple.words = TRUE)","prefix":"apropos","type":"function","description":"apropos() returns a character vector giving the names ofobjects in the search list matching (as a regular expression)what.","leftLabel":"utils","rightLabel":"R: Find Objects by (Partial) Name"},"aregexec":{"text":"aregexec","snippet":"aregexec(pattern, text, max.distance = 0.1, costs = NULL,         ignore.case = FALSE, fixed = FALSE, useBytes = FALSE)","prefix":"aregexec","type":"function","description":"Determine positions of approximate string matches.","leftLabel":"utils","rightLabel":"R: Approximate String Match Positions"},"aspell-utils":{"text":"aspell-utils","snippet":"aspell_package_Rd_files(dir, drop = c(\"\\\\author\", \"\\\\references\"),                        control = list(), program = NULL,                        dictionaries = character())aspell_package_vignettes(dir,                         control = list(), program = NULL,                         dictionaries = character())aspell_package_R_files(dir, ignore = character(), control = list(),                       program = NULL, dictionaries = character())aspell_package_C_files(dir, ignore = character(), control = list(),                       program = NULL, dictionaries = character())aspell_write_personal_dictionary_file(x, out, language = \"en\",                                      program = NULL)","prefix":"aspell-utils","type":"function","description":"Utilities for spell checking packages via Aspell, Hunspell or Ispell.","leftLabel":"utils","rightLabel":"R: Spell Check Utilities"},"aspell":{"text":"aspell","snippet":"aspell(files, filter, control = list(), encoding = \"unknown\",       program = NULL, dictionaries = character())","prefix":"aspell","type":"function","description":"Spell check given files via Aspell, Hunspell or Ispell.","leftLabel":"utils","rightLabel":"R: Spell Check Interface"},"available.packages":{"text":"available.packages","snippet":"available.packages(contriburl = contrib.url(repos, type), method,                   fields = NULL, type = getOption(\"pkgType\"),                   filters = NULL, repos = getOption(\"repos\"))","prefix":"available.packages","type":"function","description":"available.packages returns a matrix of details corresponding topackages currently available at one or more repositories. Thecurrent list of packages is downloaded over the internet (or copiedfrom a local mirror).","leftLabel":"utils","rightLabel":"R: List Available Packages at CRAN-like Repositories"},"bibentry":{"text":"bibentry","snippet":"bibentry(bibtype, textVersion = NULL, header = NULL, footer = NULL,         key = NULL, ..., other = list(),         mheader = NULL, mfooter = NULL)## S3 method for class 'bibentry'print(x, style = \"text\", .bibstyle, ...)## S3 method for class 'bibentry'format(x, style = \"text\", .bibstyle = NULL,       citation.bibtex.max = getOption(\"citation.bibtex.max\", 1),       bibtex = length(x) <= citation.bibtex.max,       sort = FALSE, ...)## S3 method for class 'bibentry'sort(x, decreasing = FALSE, .bibstyle = NULL, drop = FALSE, ...)## S3 method for class 'citation'print(x, style = \"citation\", ...)## S3 method for class 'citation'format(x, style = \"citation\", ...)","prefix":"bibentry","type":"function","description":"Functionality for representing and manipulating bibliographicinformation in enhanced BibTeX style.","leftLabel":"utils","rightLabel":"R: Bibliography Entries"},"browseEnv":{"text":"browseEnv","snippet":"browseEnv(envir = .GlobalEnv, pattern,          excludepatt = \"^last\\\\.warning\",          html = .Platform$GUI != \"AQUA\",          expanded = TRUE, properties = NULL,          main = NULL, debugMe = FALSE)","prefix":"browseEnv","type":"function","description":"The browseEnv function opens a browser with list of objectscurrently in sys.frame() environment.","leftLabel":"utils","rightLabel":"R: Browse Objects in Environment"},"browseURL":{"text":"browseURL","snippet":"browseURL(url, browser = getOption(\"browser\"),          encodeIfNeeded = FALSE)","prefix":"browseURL","type":"function","description":"Load a given URL into an HTML browser.","leftLabel":"utils","rightLabel":"R: Load URL into an HTML Browser"},"browseVignettes":{"text":"browseVignettes","snippet":"browseVignettes(package = NULL, lib.loc = NULL, all = TRUE)## S3 method for class 'browseVignettes'print(x, ...)","prefix":"browseVignettes","type":"function","description":"List available vignettes in an HTML browser with links to PDF,LaTeX/noweb source, and (tangled) R code (if available).","leftLabel":"utils","rightLabel":"R: List Vignettes in an HTML Browser"},"bug.report":{"text":"bug.report","snippet":"bug.report(subject = \"\",  address,           file = \"R.bug.report\", package = NULL, lib.loc = NULL,           ...)","prefix":"bug.report","type":"function","description":"Invokes an editor or email program to write a bug report or opens aweb page for bug submission.  Some standard information on the currentversion and configuration of R are included automatically.","leftLabel":"utils","rightLabel":"R: Send a Bug Report"},"capture.output":{"text":"capture.output","snippet":"capture.output(..., file = NULL, append = FALSE,               type = c(\"output\", \"message\"), split = FALSE)","prefix":"capture.output","type":"function","description":"Evaluates its arguments with the output being returned as a characterstring or sent to a file.  Related to sink in the sameway that with is related to attach.","leftLabel":"utils","rightLabel":"R: Send Output to a Character String or File"},"changedFiles":{"text":"changedFiles","snippet":"fileSnapshot(path = \".\", file.info = TRUE, timestamp = NULL, \t    md5sum = FALSE, digest = NULL, full.names = length(path) > 1,\t    ...) changedFiles(before, after, path = before$path, timestamp = before$timestamp, \t    check.file.info = c(\"size\", \"isdir\", \"mode\", \"mtime\"), \t    md5sum = before$md5sum, digest = before$digest, \t    full.names = before$full.names, ...)\t    ## S3 method for class 'fileSnapshot'print(x, verbose = FALSE, ...)## S3 method for class 'changedFiles'print(x, verbose = FALSE, ...) ","prefix":"changedFiles","type":"function","description":"fileSnapshot takes a snapshot of a selection of files,recording summary information about each.  changedFilescompares two snapshots, or compares one snapshot to the current stateof the file system.  The snapshots need not be the same directory;this could be used to compare two directories.","leftLabel":"utils","rightLabel":"R: Detect which files have changed"},"chooseBioCmirror":{"text":"chooseBioCmirror","snippet":"chooseBioCmirror(graphics = getOption(\"menu.graphics\"), ind = NULL,                 useHTTPS = getOption(\"useHTTPS\", TRUE),                 local.only = FALSE)","prefix":"chooseBioCmirror","type":"function","description":"Interact with the user to choose a Bioconductor mirror.","leftLabel":"utils","rightLabel":"R: Select a Bioconductor Mirror"},"chooseCRANmirror":{"text":"chooseCRANmirror","snippet":"chooseCRANmirror(graphics = getOption(\"menu.graphics\"), ind = NULL,                 useHTTPS = getOption(\"useHTTPS\", TRUE),                 local.only = FALSE)getCRANmirrors(all = FALSE, local.only = FALSE)","prefix":"chooseCRANmirror","type":"function","description":"Interact with the user to choose a CRAN mirror.","leftLabel":"utils","rightLabel":"R: Select a CRAN Mirror"},"citEntry":{"text":"citEntry","snippet":"citEntry(entry, textVersion, header = NULL, footer = NULL, ...)citHeader(...)citFooter(...)","prefix":"citEntry","type":"function","description":"Functionality for specifying bibliographic information in enhancedBibTeX style.","leftLabel":"utils","rightLabel":"R: Bibliography Entries (Older Interface)"},"citation":{"text":"citation","snippet":"citation(package = \"base\", lib.loc = NULL, auto = NULL)readCitationFile(file, meta = NULL)","prefix":"citation","type":"function","description":"How to cite R and R packages in publications.","leftLabel":"utils","rightLabel":"R: Citing R and R Packages in Publications"},"cite":{"text":"cite","snippet":"cite(keys, bib, ...)citeNatbib(keys, bib, textual = FALSE, before = NULL, after = NULL,           mode = c(\"authoryear\", \"numbers\", \"super\"),           abbreviate = TRUE, longnamesfirst = TRUE,           bibpunct = c(\"(\", \")\", \";\", \"a\", \"\", \",\"), previous)","prefix":"cite","type":"function","description":"Cite a bibentry object in text.  The cite() functionuses the cite() function from the defaultbibstyle if present, or citeNatbib() if not.citeNatbib() uses a style similar to that used by the LaTeXpackage natbib.","leftLabel":"utils","rightLabel":"R: Cite a bibliography entry."},"close.socket":{"text":"close.socket","snippet":"close.socket(socket, ...)","prefix":"close.socket","type":"function","description":"Closes the socket and frees the space in the file descriptor table.  Theport may not be freed immediately.","leftLabel":"utils","rightLabel":"R: Close a Socket"},"combn":{"text":"combn","snippet":"combn(x, m, FUN = NULL, simplify = TRUE, ...)","prefix":"combn","type":"function","description":"Generate all combinations of the elements of x taken mat a time.  If x is a positive integer, returns allcombinations of the elements of seq(x) taken m at atime.  If argument FUN is not NULL, applies a function givenby the argument to each point.  If simplify is FALSE,  returnsa list; otherwise returns an array, typically amatrix.  ... are passed unchanged to theFUN function, if specified.","leftLabel":"utils","rightLabel":"R: Generate All Combinations of n Elements, Taken m at a Time"},"compareVersion":{"text":"compareVersion","snippet":"compareVersion(a, b)","prefix":"compareVersion","type":"function","description":"Compare two package version numbers to see which is later.","leftLabel":"utils","rightLabel":"R: Compare Two Package Version Numbers"},"contrib.url":{"text":"contrib.url","snippet":"contrib.url(repos, type = getOption(\"pkgType\"))","prefix":"contrib.url","type":"function","description":"contrib.url adds the appropriate type-specific path within arepository to each URL in repos.","leftLabel":"utils","rightLabel":"R: Find Appropriate Paths in CRAN-like Repositories"},"count.fields":{"text":"count.fields","snippet":"count.fields(file, sep = \"\", quote = \"\\\"'\", skip = 0,             blank.lines.skip = TRUE, comment.char = \"#\")","prefix":"count.fields","type":"function","description":"count.fields counts the number of fields, as separated bysep, in each of the lines of file read.","leftLabel":"utils","rightLabel":"R: Count the Number of Fields per Line"},"create.post":{"text":"create.post","snippet":"create.post(instructions = character(), description = \"post\",            subject = \"\",            method = getOption(\"mailer\"),            address = \"the relevant mailing list\",            ccaddress = getOption(\"ccaddress\", \"\"),            filename = \"R.post\", info = character())","prefix":"create.post","type":"function","description":"An ancillary function used by bug.report andhelp.request to prepare emails for submission to packagemaintainers or to R mailing lists.","leftLabel":"utils","rightLabel":"R: Ancillary Function for Preparing Emails and Postings"},"data":{"text":"data","snippet":"data(..., list = character(), package = NULL, lib.loc = NULL,     verbose = getOption(\"verbose\"), envir = .GlobalEnv)","prefix":"data","type":"function","description":"Loads specified data sets, or list the available data sets.","leftLabel":"utils","rightLabel":"R: Data Sets"},"dataentry":{"text":"dataentry","snippet":"data.entry(..., Modes = NULL, Names = NULL)dataentry(data, modes)de(..., Modes = list(), Names = NULL)","prefix":"dataentry","type":"function","description":"A spreadsheet-like editor for entering or editing data.","leftLabel":"utils","rightLabel":"R: Spreadsheet Interface for Entering Data"},"debugcall":{"text":"debugcall","snippet":"debugcall(call, once = FALSE)undebugcall(call)","prefix":"debugcall","type":"function","description":"Set or unset debugging flags based on a call to a function. Takes intoaccount S3/S4 method dispatch based on the classes of the arguments inthe call.","leftLabel":"utils","rightLabel":"R: Debug a Call"},"debugger":{"text":"debugger","snippet":"dump.frames(dumpto = \"last.dump\", to.file = FALSE,            include.GlobalEnv = FALSE)debugger(dump = last.dump)","prefix":"debugger","type":"function","description":"Functions to dump the evaluation environments (frames) and to examinedumped frames.","leftLabel":"utils","rightLabel":"R: Post-Mortem Debugging"},"demo":{"text":"demo","snippet":"demo(topic, package = NULL, lib.loc = NULL,     character.only = FALSE, verbose = getOption(\"verbose\"),     echo = TRUE, ask = getOption(\"demo.ask\"),     encoding = getOption(\"encoding\"))","prefix":"demo","type":"function","description":"demo is a user-friendly interface to running some demonstrationR scripts.  demo() gives the list of available topics.","leftLabel":"utils","rightLabel":"R: Demonstrations of R Functionality"},"download.file":{"text":"download.file","snippet":"download.file(url, destfile, method, quiet = FALSE, mode = \"w\",              cacheOK = TRUE,              extra = getOption(\"download.file.extra\"))","prefix":"download.file","type":"function","description":"This function can be used to download a file from the Internet.","leftLabel":"utils","rightLabel":"R: Download File from the Internet"},"download.packages":{"text":"download.packages","snippet":"download.packages(pkgs, destdir, available = NULL,                  repos = getOption(\"repos\"),                  contriburl = contrib.url(repos, type),                  method, type = getOption(\"pkgType\"), ...)","prefix":"download.packages","type":"function","description":"These functions can be used to automatically compare the versionnumbers of installed packages with the newest available version onthe repositories and update outdated packages on the fly.","leftLabel":"utils","rightLabel":"R: Download Packages from CRAN-like Repositories"},"edit":{"text":"edit","snippet":"## Default S3 method:edit(name = NULL, file = \"\", title = NULL,     editor = getOption(\"editor\"), ...)vi(name = NULL, file = \"\")emacs(name = NULL, file = \"\")pico(name = NULL, file = \"\")xemacs(name = NULL, file = \"\")xedit(name = NULL, file = \"\")","prefix":"edit","type":"function","description":"Invoke a text editor on an R object.","leftLabel":"utils","rightLabel":"R: Invoke a Text Editor"},"edit.data.frame":{"text":"edit.data.frame","snippet":"## S3 method for class 'data.frame'edit(name, factor.mode = c(\"character\", \"numeric\"),     edit.row.names = any(row.names(name) != 1:nrow(name)), ...)## S3 method for class 'matrix'edit(name, edit.row.names = !is.null(dn[[1]]), ...)","prefix":"edit.data.frame","type":"function","description":"Use data editor on data frame or matrix contents.","leftLabel":"utils","rightLabel":"R: Edit Data Frames and Matrices"},"example":{"text":"example","snippet":"example(topic, package = NULL, lib.loc = NULL,        character.only = FALSE, give.lines = FALSE, local = FALSE,        echo = TRUE, verbose = getOption(\"verbose\"),        setRNG = FALSE, ask = getOption(\"example.ask\"),        prompt.prefix = abbreviate(topic, 6),        run.dontrun = FALSE, run.donttest = interactive())","prefix":"example","type":"function","description":"Run all the R code from the Examples part of R's online helptopic topic with possible exceptions dontrun,dontshow, and donttest, see ‘Details’ below.","leftLabel":"utils","rightLabel":"R: Run an Examples Section from the Online Help"},"file.edit":{"text":"file.edit","snippet":"file.edit(..., title = file, editor = getOption(\"editor\"),          fileEncoding = \"\")","prefix":"file.edit","type":"function","description":"Edit one or more files in a text editor.","leftLabel":"utils","rightLabel":"R: Edit One or More Files"},"filetest":{"text":"filetest","snippet":"file_test(op, x, y)","prefix":"filetest","type":"function","description":"Utility for shell-style file tests.","leftLabel":"utils","rightLabel":"R: Shell-style Tests on Files"},"findLineNum":{"text":"findLineNum","snippet":"findLineNum(srcfile, line, nameonly = TRUE,            envir = parent.frame(), lastenv)setBreakpoint(srcfile, line, nameonly = TRUE,              envir = parent.frame(), lastenv, verbose = TRUE,              tracer, print = FALSE, clear = FALSE, ...)","prefix":"findLineNum","type":"function","description":"These functions locate objects containing particular lines of sourcecode, using the information saved when the code was parsed withkeep.source = TRUE.","leftLabel":"utils","rightLabel":"R: Find the Location of a Line of Source Code, or Set a..."},"fix":{"text":"fix","snippet":"fix(x, ...)","prefix":"fix","type":"function","description":"fix invokes edit on x and then assigns the new(edited) version of x in the user's workspace.","leftLabel":"utils","rightLabel":"R: Fix an Object"},"flush.console":{"text":"flush.console","snippet":"flush.console()","prefix":"flush.console","type":"function","description":"This does nothing except on console-based versions of R.On the macOS and Windows GUIs, it ensures that the display ofoutput in the console is current, even if output buffering is on.","leftLabel":"utils","rightLabel":"R: Flush Output to A Console"},"format":{"text":"format","snippet":"formatUL(x, label = \"*\", offset = 0,         width = 0.9 * getOption(\"width\"))formatOL(x, type = \"arabic\", offset = 0, start = 1,         width = 0.9 * getOption(\"width\"))","prefix":"format","type":"function","description":"Format unordered (itemize) and ordered (enumerate) lists.","leftLabel":"utils","rightLabel":"R: Format Unordered and Ordered Lists"},"getAnywhere":{"text":"getAnywhere","snippet":"getAnywhere(x)argsAnywhere(x)","prefix":"getAnywhere","type":"function","description":"These functions locate all objects with name matching their argument,whether visible on the search path, registered as an S3 method or in anamespace but not exported.  getAnywhere() returns the objectsand argsAnywhere() returns the arguments of any objects thatare functions.","leftLabel":"utils","rightLabel":"R: Retrieve an R Object, Including from a Namespace"},"getFromNamespace":{"text":"getFromNamespace","snippet":"getFromNamespace(x, ns, pos = -1, envir = as.environment(pos))assignInNamespace(x, value, ns, pos = -1,                  envir = as.environment(pos))assignInMyNamespace(x, value)fixInNamespace(x, ns, pos = -1, envir = as.environment(pos), ...)","prefix":"getFromNamespace","type":"function","description":"Utility functions to access and replace the non-exported functions ina namespace, for use in developing packages with namespaces.","leftLabel":"utils","rightLabel":"R: Utility functions for Developing Namespaces"},"getParseData":{"text":"getParseData","snippet":"getParseData(x, includeText = NA)getParseText(parseData, id)","prefix":"getParseData","type":"function","description":"If the \"keep.source\" option is TRUE, R's parserwill attach detailed information on the object it has parsed.  Thesefunctions retrieve that information.","leftLabel":"utils","rightLabel":"R: Get detailed parse information from object."},"getS3method":{"text":"getS3method","snippet":"getS3method(f, class, optional = FALSE, envir = parent.frame())","prefix":"getS3method","type":"function","description":"Get a method for an S3 generic, possibly from a namespace or thegeneric's registry.","leftLabel":"utils","rightLabel":"R: Get an S3 Method"},"glob2rx":{"text":"glob2rx","snippet":"glob2rx(pattern, trim.head = FALSE, trim.tail = TRUE)","prefix":"glob2rx","type":"function","description":"Change wildcard aka globbing patterns into thecorresponding regular expressions (regexp).","leftLabel":"utils","rightLabel":"R: Change Wildcard or Globbing Pattern into Regular Expression"},"globalVariables":{"text":"globalVariables","snippet":"globalVariables(names, package, add = TRUE)suppressForeignCheck(names, package, add = TRUE)","prefix":"globalVariables","type":"function","description":"For globalVariables, the names supplied are of functions orother objects that should be regarded as defined globally when thecheck tool is applied to this package.  The call toglobalVariables will be included in the package's source.Repeated calls in the same package accumulate the names of theglobal variables.","leftLabel":"utils","rightLabel":"R: Declarations Used in Checking a Package"},"hasName":{"text":"hasName","snippet":"hasName(x, name)","prefix":"hasName","type":"function","description":"hasName is a convenient way to test for one or more namesin an R object.","leftLabel":"utils","rightLabel":"R: Check for name"},"head":{"text":"head","snippet":"head(x, ...)## Default S3 method:head(x, n = 6L, ...)## S3 method for class 'data.frame'head(x, n = 6L, ...)## S3 method for class 'matrix'head(x, n = 6L, ...)## S3 method for class 'ftable'head(x, n = 6L, ...)## S3 method for class 'table'head(x, n = 6L, ...)## S3 method for class 'function'head(x, n = 6L, ...)tail(x, ...)## Default S3 method:tail(x, n = 6L, ...)## S3 method for class 'data.frame'tail(x, n = 6L, ...)## S3 method for class 'matrix'tail(x, n = 6L, addrownums = TRUE, ...)## S3 method for class 'ftable'tail(x, n = 6L, addrownums = FALSE, ...)## S3 method for class 'table'tail(x, n = 6L, addrownums = TRUE, ...)## S3 method for class 'function'tail(x, n = 6L, ...)","prefix":"head","type":"function","description":"Returns the first or last parts of a vector, matrix, table, data frameor function.  Since head() and tail() are genericfunctions, they may also have been extended to other classes.","leftLabel":"utils","rightLabel":"R: Return the First or Last Part of an Object"},"help":{"text":"help","snippet":"help(topic, package = NULL, lib.loc = NULL,     verbose = getOption(\"verbose\"),     try.all.packages = getOption(\"help.try.all.packages\"),     help_type = getOption(\"help_type\"))","prefix":"help","type":"function","description":"help is the primary interface to the help systems.","leftLabel":"utils","rightLabel":"R: Documentation"},"help.request":{"text":"help.request","snippet":"help.request(subject = \"\",             address = \"r-help@R-project.org\",             file = \"R.help.request\", ...)","prefix":"help.request","type":"function","description":"Prompts the user to check they have done all that is expected of thembefore sending a post to the R-help mailing list, provides a templatefor the post with session information included and optionally sendsthe email (on Unix systems).","leftLabel":"utils","rightLabel":"R: Send a Post to R-help"},"help.search":{"text":"help.search","snippet":"help.search(pattern, fields = c(\"alias\", \"concept\", \"title\"),            apropos, keyword, whatis, ignore.case = TRUE,            package = NULL, lib.loc = NULL,            help.db = getOption(\"help.db\"),            verbose = getOption(\"verbose\"),            rebuild = FALSE, agrep = NULL, use_UTF8 = FALSE,            types = getOption(\"help.search.types\"))??patternfield??pattern","prefix":"help.search","type":"function","description":"Allows for searching the help system for documentation matching agiven character string in the (file) name, alias, title, concept orkeyword entries (or any combination thereof), using eitherfuzzy matching or regular expression matching.  Namesand titles of the matched help entries are displayed nicely formatted.","leftLabel":"utils","rightLabel":"R: Search the Help System"},"help.start":{"text":"help.start","snippet":"help.start(update = FALSE, gui = \"irrelevant\",           browser = getOption(\"browser\"), remote = NULL)","prefix":"help.start","type":"function","description":"Start the hypertext (currently HTML) version of R's onlinedocumentation.","leftLabel":"utils","rightLabel":"R: Hypertext Documentation"},"hsearch-utils":{"text":"hsearch-utils","snippet":"hsearch_db(package = NULL, lib.loc = NULL,           types = getOption(\"help.search.types\"),            verbose = getOption(\"verbose\"),           rebuild = FALSE, use_UTF8 = FALSE)hsearch_db_concepts(db = hsearch_db())hsearch_db_keywords(db = hsearch_db())","prefix":"hsearch-utils","type":"function","description":"Utilities for searching the help system.","leftLabel":"utils","rightLabel":"R: Help Search Utilities"},"install.packages":{"text":"install.packages","snippet":"install.packages(pkgs, lib, repos = getOption(\"repos\"),                 contriburl = contrib.url(repos, type),                 method, available = NULL, destdir = NULL,                 dependencies = NA, type = getOption(\"pkgType\"),                 configure.args = getOption(\"configure.args\"),                 configure.vars = getOption(\"configure.vars\"),                 clean = FALSE, Ncpus = getOption(\"Ncpus\", 1L),                 verbose = getOption(\"verbose\"),                 libs_only = FALSE, INSTALL_opts, quiet = FALSE,                 keep_outputs = FALSE, ...)","prefix":"install.packages","type":"function","description":"Download and install packages from CRAN-like repositories or fromlocal files.","leftLabel":"utils","rightLabel":"R: Install Packages from Repositories or Local Files"},"installed.packages":{"text":"installed.packages","snippet":"installed.packages(lib.loc = NULL, priority = NULL,                   noCache = FALSE, fields = NULL,                   subarch = .Platform$r_arch)","prefix":"installed.packages","type":"function","description":"Find (or retrieve) details of all packages installed in the specifiedlibraries.","leftLabel":"utils","rightLabel":"R: Find Installed Packages"},"isS3method":{"text":"isS3method","snippet":"isS3method(method, f, class, envir = parent.frame())","prefix":"isS3method","type":"function","description":"Checks if method is the name of a valid / registered S3method.  Alternatively, when f and class are specified,it is checked if f is the name of an S3 generic function andpaste(f, class, sep=\".\") is a valid S3 method.","leftLabel":"utils","rightLabel":"R: Is 'method' the Name of an S3 Method?"},"isS3stdGen":{"text":"isS3stdGen","snippet":"isS3stdGeneric(f)","prefix":"isS3stdGen","type":"function","description":"Determines whether f acts as a standard S3-style genericfunction.","leftLabel":"utils","rightLabel":"R: Check if a function acts as an S3 generic"},"localeToCharset":{"text":"localeToCharset","snippet":"localeToCharset(locale = Sys.getlocale(\"LC_CTYPE\"))","prefix":"localeToCharset","type":"function","description":"This functions aims to find a suitable coding for the locale named, bydefault the current locale, and if it is a UTF-8 locale a suitablesingle-byte encoding.","leftLabel":"utils","rightLabel":"R: Select a Suitable Encoding Name from a Locale Name"},"ls_str":{"text":"ls_str","snippet":"ls.str(pos = -1, name, envir, all.names = FALSE,       pattern, mode = \"any\")lsf.str(pos = -1, envir, ...)## S3 method for class 'ls_str'print(x, max.level = 1, give.attr = FALSE, ...,      digits = max(1, getOption(\"str\")$digits.d))","prefix":"ls_str","type":"function","description":"ls.str and lsf.str are variations of lsapplying str() to each matched name: see section Value.","leftLabel":"utils","rightLabel":"R: List Objects and their Structure"},"maintainer":{"text":"maintainer","snippet":"maintainer(pkg)","prefix":"maintainer","type":"function","description":"Show the name and email address of the maintainer of a package.","leftLabel":"utils","rightLabel":"R: Show Package Maintainer"},"make.packages.html":{"text":"make.packages.html","snippet":"make.packages.html(lib.loc = .libPaths(), temp = FALSE,                   verbose = TRUE, docdir = R.home(\"doc\"))","prefix":"make.packages.html","type":"function","description":"Re-create the HTML list of packages.","leftLabel":"utils","rightLabel":"R: Update HTML Package List"},"make.socket":{"text":"make.socket","snippet":"make.socket(host = \"localhost\", port, fail = TRUE, server = FALSE)","prefix":"make.socket","type":"function","description":"With server = FALSE attempts to open a client socket to thespecified port and host.  With server = TRUE the R processlistens on the specified port for a connection and then returns aserver socket.  It is a good idea to use on.exit toensure that a socket is closed, as you only get 64 of them.","leftLabel":"utils","rightLabel":"R: Create a Socket Connection"},"menu":{"text":"menu","snippet":"menu(choices, graphics = FALSE, title = NULL)","prefix":"menu","type":"function","description":"menu presents the user with a menu of choices labelled from 1to the number of choices.  To exit without choosing an item one canselect 0.","leftLabel":"utils","rightLabel":"R: Menu Interaction Function"},"methods":{"text":"methods","snippet":"methods(generic.function, class).S3methods(generic.function, class, envir=parent.frame())## S3 method for class 'MethodsFunction'print(x, byclass = attr(x, \"byclass\"), ...)","prefix":"methods","type":"function","description":"List all available methods for a S3 and S4 generic function, or allmethods for an S3 or S4 class.","leftLabel":"utils","rightLabel":"R: List Methods for S3 Generic Functions or Classes"},"mirrorAdmin":{"text":"mirrorAdmin","snippet":"mirror2html(mirrors = NULL, file = \"mirrors.html\",  head = \"mirrors-head.html\", foot = \"mirrors-foot.html\")checkCRAN(method)","prefix":"mirrorAdmin","type":"function","description":"Functions helping to maintain CRAN, some of them may also be usefulfor administrators of other repository networks.","leftLabel":"utils","rightLabel":"R: Managing Repository Mirrors"},"modifyList":{"text":"modifyList","snippet":"modifyList(x, val, keep.null = FALSE)","prefix":"modifyList","type":"function","description":"Modifies a possibly nested list recursively by changing a subset ofelements at each level to match a second list.","leftLabel":"utils","rightLabel":"R: Recursively Modify Elements of a List"},"news":{"text":"news","snippet":"news(query, package = \"R\", lib.loc = NULL, format = NULL,     reader = NULL, db = NULL)## S3 method for class 'news_db'print(x, doBrowse = interactive(),      browser = getOption(\"browser\"), ...)","prefix":"news","type":"function","description":"Build and query the news data base for R or add-on packages.","leftLabel":"utils","rightLabel":"R: Build and Query R or Package News Information"},"object.size":{"text":"object.size","snippet":"object.size(x)## S3 method for class 'object_size'format(x, units = \"b\", standard = \"auto\", digits = 1L, ...)## S3 method for class 'object_size'print(x, quote = FALSE, units = \"b\", standard = \"auto\",      digits = 1L, ...)","prefix":"object.size","type":"function","description":"Provides an estimate of the memory that is being used to store an R object.","leftLabel":"utils","rightLabel":"R: Report the Space Allocated for an Object"},"package.skeleton":{"text":"package.skeleton","snippet":"package.skeleton(name = \"anRpackage\", list,                 environment = .GlobalEnv,                 path = \".\", force = FALSE,                 code_files = character())","prefix":"package.skeleton","type":"function","description":"package.skeleton automates some of the setup for a new sourcepackage.  It creates directories, saves functions, data, and R code files toappropriate places, and creates skeleton help files and a‘Read-and-delete-me’ file describing further steps in packaging.","leftLabel":"utils","rightLabel":"R: Create a Skeleton for a New Source Package"},"packageDescription":{"text":"packageDescription","snippet":"packageDescription(pkg, lib.loc = NULL, fields = NULL,                   drop = TRUE, encoding = \"\")packageVersion(pkg, lib.loc = NULL)","prefix":"packageDescription","type":"function","description":"Parses and returns the ‘DESCRIPTION’ file of a package.","leftLabel":"utils","rightLabel":"R: Package Description"},"packageName":{"text":"packageName","snippet":"packageName(env = parent.frame())","prefix":"packageName","type":"function","description":"Many environments are associated with a package; this functionattempts to determine that package.","leftLabel":"utils","rightLabel":"R: Find package associated with an environment."},"packageStatus":{"text":"packageStatus","snippet":"packageStatus(lib.loc = NULL, repositories = NULL, method,              type = getOption(\"pkgType\"))## S3 method for class 'packageStatus'summary(object, ...)## S3 method for class 'packageStatus'update(object, lib.loc = levels(object$inst$LibPath),       repositories = levels(object$avail$Repository), ...)## S3 method for class 'packageStatus'upgrade(object, ask = TRUE, ...)","prefix":"packageStatus","type":"function","description":"Summarize information about installed packages and packagesavailable at various repositories, and automatically upgrade outdatedpackages.","leftLabel":"utils","rightLabel":"R: Package Management Tools"},"page":{"text":"page","snippet":"page(x, method = c(\"dput\", \"print\"), ...)","prefix":"page","type":"function","description":"Displays a representation of the object named by x in a pagervia file.show.","leftLabel":"utils","rightLabel":"R: Invoke a Pager on an R Object"},"person":{"text":"person","snippet":"person(given = NULL, family = NULL, middle = NULL,       email = NULL, role = NULL, comment = NULL,       first = NULL, last = NULL)## Default S3 method:as.person(x)## S3 method for class 'person'format(x,       include = c(\"given\", \"family\", \"email\", \"role\", \"comment\"),       braces = list(given = \"\", family = \"\", email = c(\"<\", \">\"),                     role = c(\"[\", \"]\"), comment = c(\"(\", \")\")),       collapse = list(given = \" \", family = \" \", email = \", \",                       role = \", \", comment = \", \"),       ...,       style = c(\"text\", \"R\")       )","prefix":"person","type":"function","description":"A class and utility methods for holding information about personslike name and email address.","leftLabel":"utils","rightLabel":"R: Persons"},"process.events":{"text":"process.events","snippet":"process.events()","prefix":"process.events","type":"function","description":"R front ends like the Windows GUI handle key presses and mouse clicksthrough “events” generated by the OS. These are processedautomatically by R at intervals during computations, but in some casesit may be desirable to trigger immediate event handling.  Theprocess.events function does that.","leftLabel":"utils","rightLabel":"R: Trigger event handling"},"prompt":{"text":"prompt","snippet":"prompt(object, filename = NULL, name = NULL, ...)## Default S3 method:prompt(object, filename = NULL, name = NULL,       force.function = FALSE, ...)## S3 method for class 'data.frame'prompt(object, filename = NULL, name = NULL, ...)promptImport(object, filename = NULL, name = NULL, \timportedFrom = NULL, importPage = name, ...)","prefix":"prompt","type":"function","description":"Facilitate the constructing of files documenting R objects.","leftLabel":"utils","rightLabel":"R: Produce Prototype of an R Documentation File"},"promptData":{"text":"promptData","snippet":"promptData(object, filename = NULL, name = NULL)","prefix":"promptData","type":"function","description":"Generates a shell of documentation for a data set.","leftLabel":"utils","rightLabel":"R: Generate Outline Documentation for a Data Set"},"promptPackage":{"text":"promptPackage","snippet":"promptPackage(package, lib.loc = NULL, filename = NULL,              name = NULL, final = FALSE)","prefix":"promptPackage","type":"function","description":"Generates a shell of documentation for an installed or source package.","leftLabel":"utils","rightLabel":"R: Generate a Shell for Documentation of a Package"},"rcompgen":{"text":"rcompgen","snippet":"rc.settings(ops, ns, args, func, ipck, S3, data, help,            argdb, fuzzy, quotes, files)rc.status()rc.getOption(name)rc.options(...).DollarNames(x, pattern)## Default S3 method:.DollarNames(x, pattern = \"\")## S3 method for class 'list'.DollarNames(x, pattern = \"\")## S3 method for class 'environment'.DollarNames(x, pattern = \"\")","prefix":"rcompgen","type":"function","description":"This page documents a mechanism to generate relevant completionsfrom a partially completed command line.  It is not intended to beuseful by itself, but rather in conjunction with other mechanisms thatuse it as a backend.  The functions listed in the usage sectionprovide a simple control and query mechanism.  The actual interfaceconsists of a few unexported functions described further down.","leftLabel":"utils","rightLabel":"R: A Completion Generator for R"},"read.DIF":{"text":"read.DIF","snippet":"read.DIF(file, header = FALSE,         dec = \".\", numerals = c(\"allow.loss\", \"warn.loss\", \"no.loss\"),         row.names, col.names, as.is = !stringsAsFactors,         na.strings = \"NA\", colClasses = NA, nrows = -1,         skip = 0, check.names = TRUE, blank.lines.skip = TRUE,         stringsAsFactors = default.stringsAsFactors(),         transpose = FALSE, fileEncoding = \"\")","prefix":"read.DIF","type":"function","description":"Reads a file in Data Interchange Format (DIF) and creates a data framefrom it.  DIF is a format for data matrices such as single spreadsheets.","leftLabel":"utils","rightLabel":"R: Data Input from Spreadsheet"},"read.fortran":{"text":"read.fortran","snippet":"read.fortran(file, format, ..., as.is = TRUE, colClasses = NA)","prefix":"read.fortran","type":"function","description":"Read fixed-format data files using Fortran-style format specifications.","leftLabel":"utils","rightLabel":"R: Read Fixed-Format Data in a Fortran-like Style"},"read.fwf":{"text":"read.fwf","snippet":"read.fwf(file, widths, header = FALSE, sep = \"\\t\",         skip = 0, row.names, col.names, n = -1,         buffersize = 2000, fileEncoding = \"\", ...)","prefix":"read.fwf","type":"function","description":"Read a table of fixed width formatteddata into a data.frame.","leftLabel":"utils","rightLabel":"R: Read Fixed Width Format Files"},"read.socket":{"text":"read.socket","snippet":"read.socket(socket, maxlen = 256L, loop = FALSE)write.socket(socket, string)","prefix":"read.socket","type":"function","description":"read.socket reads a string from the specified socket,write.socket writes to the specified socket.  There is verylittle error checking done by either.","leftLabel":"utils","rightLabel":"R: Read from or Write to a Socket"},"read.table":{"text":"read.table","snippet":"read.table(file, header = FALSE, sep = \"\", quote = \"\\\"'\",           dec = \".\", numerals = c(\"allow.loss\", \"warn.loss\", \"no.loss\"),           row.names, col.names, as.is = !stringsAsFactors,           na.strings = \"NA\", colClasses = NA, nrows = -1,           skip = 0, check.names = TRUE, fill = !blank.lines.skip,           strip.white = FALSE, blank.lines.skip = TRUE,           comment.char = \"#\",           allowEscapes = FALSE, flush = FALSE,           stringsAsFactors = default.stringsAsFactors(),           fileEncoding = \"\", encoding = \"unknown\", text, skipNul = FALSE)read.csv(file, header = TRUE, sep = \",\", quote = \"\\\"\",         dec = \".\", fill = TRUE, comment.char = \"\", ...)read.csv2(file, header = TRUE, sep = \";\", quote = \"\\\"\",          dec = \",\", fill = TRUE, comment.char = \"\", ...)read.delim(file, header = TRUE, sep = \"\\t\", quote = \"\\\"\",           dec = \".\", fill = TRUE, comment.char = \"\", ...)read.delim2(file, header = TRUE, sep = \"\\t\", quote = \"\\\"\",            dec = \",\", fill = TRUE, comment.char = \"\", ...)","prefix":"read.table","type":"function","description":"Reads a file in table format and creates a data frame from it, withcases corresponding to lines and variables to fields in the file.","leftLabel":"utils","rightLabel":"R: Data Input"},"recover":{"text":"recover","snippet":"recover()","prefix":"recover","type":"function","description":"This function allows the user to browse directly on any of thecurrently active function calls, and is suitable as an error option.The expression options(error = recover) will make thisthe error option.","leftLabel":"utils","rightLabel":"R: Browsing after an Error"},"relist":{"text":"relist","snippet":"relist(flesh, skeleton)## Default S3 method:relist(flesh, skeleton = attr(flesh, \"skeleton\"))## S3 method for class 'factor'relist(flesh, skeleton = attr(flesh, \"skeleton\"))## S3 method for class 'list'relist(flesh, skeleton = attr(flesh, \"skeleton\"))## S3 method for class 'matrix'relist(flesh, skeleton = attr(flesh, \"skeleton\"))as.relistable(x)is.relistable(x)## S3 method for class 'relistable'unlist(x, recursive = TRUE, use.names = TRUE)","prefix":"relist","type":"function","description":"relist() is an S3 generic function with a few methods in orderto allow easy inversion of unlist(obj) when that is usedwith an object obj of (S3) class \"relistable\".","leftLabel":"utils","rightLabel":"R: Allow Re-Listing an unlist()ed Object"},"remove.packages":{"text":"remove.packages","snippet":"remove.packages(pkgs, lib)","prefix":"remove.packages","type":"function","description":"Removes installed packages/bundles and updates index informationas necessary.","leftLabel":"utils","rightLabel":"R: Remove Installed Packages"},"removeSource":{"text":"removeSource","snippet":"removeSource(fn)","prefix":"removeSource","type":"function","description":"When options(\"keep.source\") is TRUE, a copy of theoriginal source code to a function is stored with it.  This functionremoves that copy.","leftLabel":"utils","rightLabel":"R: Remove Stored Source from a Function."},"roman":{"text":"roman","snippet":"as.roman(x).romans","prefix":"roman","type":"function","description":"Simple manipulation of (a small set of) integer numbers as roman numerals.","leftLabel":"utils","rightLabel":"R: Roman Numerals"},"rtags":{"text":"rtags","snippet":"rtags(path = \".\", pattern = \"\\\\.[RrSs]$\",      recursive = FALSE,      src = list.files(path = path, pattern = pattern,                       full.names = TRUE,                       recursive = recursive),      keep.re = NULL,      ofile = \"\", append = FALSE,      verbose = getOption(\"verbose\"))","prefix":"rtags","type":"function","description":"rtags provides etags-like indexing capabilities for R code,using R's own parser.","leftLabel":"utils","rightLabel":"R: An Etags-like Tagging Utility for R"},"savehistory":{"text":"savehistory","snippet":"loadhistory(file = \".Rhistory\")savehistory(file = \".Rhistory\")history(max.show = 25, reverse = FALSE, pattern, ...)timestamp(stamp = date(),          prefix = \"##------ \", suffix = \" ------##\",          quiet = FALSE)","prefix":"savehistory","type":"function","description":"Load or save or display the commands history.","leftLabel":"utils","rightLabel":"R: Load or Save or Display the Commands History"},"select.list":{"text":"select.list","snippet":"select.list(choices, preselect = NULL, multiple = FALSE,            title = NULL, graphics = getOption(\"menu.graphics\"))","prefix":"select.list","type":"function","description":"Select item(s) from a character vector.","leftLabel":"utils","rightLabel":"R: Select Items from a List"},"sessionInfo":{"text":"sessionInfo","snippet":"sessionInfo(package = NULL)## S3 method for class 'sessionInfo'print(x, locale = TRUE, ...)## S3 method for class 'sessionInfo'toLatex(object, locale = TRUE, ...)","prefix":"sessionInfo","type":"function","description":"Print version information about R, the OS and attached or loaded packages.","leftLabel":"utils","rightLabel":"R: Collect Information About the Current R Session"},"setRepositories":{"text":"setRepositories","snippet":"setRepositories(graphics = getOption(\"menu.graphics\"),                ind = NULL, addURLs = character())","prefix":"setRepositories","type":"function","description":"Interact with the user to choose the package repositories to be used.","leftLabel":"utils","rightLabel":"R: Select Package Repositories"},"sourceutils":{"text":"sourceutils","snippet":"getSrcFilename(x, full.names = FALSE, unique = TRUE)getSrcDirectory(x, unique = TRUE)getSrcref(x)getSrcLocation(x, which = c(\"line\", \"column\", \"byte\", \"parse\"),               first = TRUE)","prefix":"sourceutils","type":"function","description":"These functions extract information from source references.","leftLabel":"utils","rightLabel":"R: Source Reference Utilities"},"stack":{"text":"stack","snippet":"stack(x, ...)## Default S3 method:stack(x, drop=FALSE, ...)## S3 method for class 'data.frame'stack(x, select, drop=FALSE, ...)unstack(x, ...)## Default S3 method:unstack(x, form, ...)## S3 method for class 'data.frame'unstack(x, form, ...)","prefix":"stack","type":"function","description":"Stacking vectors concatenates multiple vectors into a single vectoralong with a factor indicating where each observation originated.Unstacking reverses this operation.","leftLabel":"utils","rightLabel":"R: Stack or Unstack Vectors from a Data Frame or List"},"str":{"text":"str","snippet":"str(object, ...)## S3 method for class 'data.frame'str(object, ...)## Default S3 method:str(object, max.level = NA,    vec.len  = strO$vec.len, digits.d = strO$digits.d,    nchar.max = 128, give.attr = TRUE,    drop.deparse.attr = strO$drop.deparse.attr,    give.head = TRUE, give.length = give.head,    width = getOption(\"width\"), nest.lev = 0,    indent.str = paste(rep.int(\" \", max(0, nest.lev + 1)),                       collapse = \"..\"),    comp.str = \"$ \", no.list = FALSE, envir = baseenv(),    strict.width = strO$strict.width,    formatNum = strO$formatNum, list.len = 99, ...)strOptions(strict.width = \"no\", digits.d = 3, vec.len = 4,           drop.deparse.attr = TRUE,           formatNum = function(x, ...)                       format(x, trim = TRUE, drop0trailing = TRUE, ...))","prefix":"str","type":"function","description":"Compactly display the internal structure of an R object, adiagnostic function and an alternative to summary(and to some extent, dput).  Ideally, only one line foreach ‘basic’ structure is displayed.  It is especially well suitedto compactly display the (abbreviated) contents of (possibly nested)lists.  The idea is to give reasonable output for any Robject.  It calls args for (non-primitive) function objects.","leftLabel":"utils","rightLabel":"R: Compactly Display the Structure of an Arbitrary R Object"},"strcapture":{"text":"strcapture","snippet":"strcapture(pattern, x, proto, perl = FALSE, useBytes = FALSE)","prefix":"strcapture","type":"function","description":"Given a character vector and a regular expression containing captureexpressions, strcapture will extract the captured tokens into atabular data structure, such as a data.frame, the type and structure ofwhich is specified by a prototype object. The assumption is that thesame number of tokens are captured from every input string. ","leftLabel":"utils","rightLabel":"R: Capture string tokens into a data.frame"},"summaryRprof":{"text":"summaryRprof","snippet":"summaryRprof(filename = \"Rprof.out\", chunksize = 5000,              memory = c(\"none\", \"both\", \"tseries\", \"stats\"),              lines = c(\"hide\", \"show\", \"both\"),              index = 2, diff = TRUE, exclude = NULL,              basenames = 1)","prefix":"summaryRprof","type":"function","description":"Summarise the output of the Rprof function to show theamount of time used by different R functions.","leftLabel":"utils","rightLabel":"R: Summarise Output of R Sampling Profiler"},"tar":{"text":"tar","snippet":"tar(tarfile, files = NULL,    compression = c(\"none\", \"gzip\", \"bzip2\", \"xz\"),    compression_level = 6, tar = Sys.getenv(\"tar\"),    extra_flags = \"\")","prefix":"tar","type":"function","description":"Create a tar archive.","leftLabel":"utils","rightLabel":"R: Create a Tar Archive"},"toLatex":{"text":"toLatex","snippet":"toBibtex(object, ...)toLatex(object, ...)## S3 method for class 'Bibtex'print(x, prefix = \"\", ...)## S3 method for class 'Latex'print(x, prefix = \"\", ...)","prefix":"toLatex","type":"function","description":"These methods convert R objects to character vectors withBibTeX or LaTeX markup.","leftLabel":"utils","rightLabel":"R: Converting R Objects to BibTeX or LaTeX"},"txtProgressBar":{"text":"txtProgressBar","snippet":"txtProgressBar(min = 0, max = 1, initial = 0, char = \"=\",               width = NA, title, label, style = 1, file = \"\")getTxtProgressBar(pb)setTxtProgressBar(pb, value, title = NULL, label = NULL)## S3 method for class 'txtProgressBar'close(con, ...)","prefix":"txtProgressBar","type":"function","description":"Text progress bar in the R console.","leftLabel":"utils","rightLabel":"R: Text Progress Bar"},"type.convert":{"text":"type.convert","snippet":"type.convert(x, na.strings = \"NA\", as.is = FALSE, dec = \".\",             numerals = c(\"allow.loss\", \"warn.loss\", \"no.loss\"))","prefix":"type.convert","type":"function","description":"Convert a character vector to logical, integer, numeric, complex orfactor as appropriate.","leftLabel":"utils","rightLabel":"R: Type Conversion on Character Variables"},"untar":{"text":"untar","snippet":"untar(tarfile, files = NULL, list = FALSE, exdir = \".\",      compressed = NA, extras = NULL, verbose = FALSE,      restore_times =  TRUE, tar = Sys.getenv(\"TAR\"))","prefix":"untar","type":"function","description":"Extract files from or list the contents of a tar archive.","leftLabel":"utils","rightLabel":"R: Extract or List Tar Archives"},"unzip":{"text":"unzip","snippet":"unzip(zipfile, files = NULL, list = FALSE, overwrite = TRUE,      junkpaths = FALSE, exdir = \".\", unzip = \"internal\",      setTimes = FALSE)","prefix":"unzip","type":"function","description":"Extract files from or list a zip archive.","leftLabel":"utils","rightLabel":"R: Extract or List Zip Archives"},"update.packages":{"text":"update.packages","snippet":"update.packages(lib.loc = NULL, repos = getOption(\"repos\"),                contriburl = contrib.url(repos, type),                method, instlib = NULL,                ask = TRUE, available = NULL,                oldPkgs = NULL, ..., checkBuilt = FALSE,                type = getOption(\"pkgType\"))old.packages(lib.loc = NULL, repos = getOption(\"repos\"),             contriburl = contrib.url(repos, type),             instPkgs = installed.packages(lib.loc = lib.loc),             method, available = NULL, checkBuilt = FALSE,             type = getOption(\"pkgType\"))new.packages(lib.loc = NULL, repos = getOption(\"repos\"),             contriburl = contrib.url(repos, type),             instPkgs = installed.packages(lib.loc = lib.loc),             method, available = NULL, ask = FALSE, ...,             type = getOption(\"pkgType\"))","prefix":"update.packages","type":"function","description":"old.packages indicates packages which have a (suitable) laterversion on the repositories whereas update.packages offers todownload and install such packages.","leftLabel":"utils","rightLabel":"R: Compare Installed Packages with CRAN-like Repositories"},"url.show":{"text":"url.show","snippet":"url.show(url, title = url, file = tempfile(),         delete.file = TRUE, method, ...)","prefix":"url.show","type":"function","description":"Extension of file.show to display text files from a remoteserver.","leftLabel":"utils","rightLabel":"R: Display a text URL"},"utils-defunct":{"text":"utils-defunct","snippet":"# Defunct in R 2.0.0package.contents(pkg, lib.loc = NULL)# Defunct in R 2.2.0CRAN.packages(CRAN = getOption(\"repos\"), method,              contriburl = contrib.url(CRAN))# Defunct in R 2.14.0zip.file.extract(file, zipname = \"R.zip\",                 unzip = getOption(\"unzip\"), dir = tempdir())","prefix":"utils-defunct","type":"function","description":"The functions or variables listed here are no longer part of R asthey are not needed (any more).","leftLabel":"utils","rightLabel":"R: Defunct Functions in Package 'utils'"},"utils-deprecated":{"text":"utils-deprecated","snippet":{},"prefix":"utils-deprecated","type":"function","description":"These functions are provided for compatibility with older versions ofR only, and may be defunct as soon as of the next release.","leftLabel":"utils","rightLabel":"R: Deprecated Functions in Package 'utils'"},"utils-package":{"text":"utils-package","snippet":{},"prefix":"utils-package","type":"function","description":"R utility functions","leftLabel":"utils","rightLabel":"R: The R Utils Package"},"vignette":{"text":"vignette","snippet":"vignette(topic, package = NULL, lib.loc = NULL, all = TRUE)## S3 method for class 'vignette'print(x, ...)## S3 method for class 'vignette'edit(name, ...)","prefix":"vignette","type":"function","description":"View a specified package vignette, or list the available ones;display it rendered in a viewer, and get or edit its R source file.","leftLabel":"utils","rightLabel":"R: View, List or Get R Source of Package Vignettes"},"write.table":{"text":"write.table","snippet":"write.table(x, file = \"\", append = FALSE, quote = TRUE, sep = \" \",            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = TRUE,            col.names = TRUE, qmethod = c(\"escape\", \"double\"),            fileEncoding = \"\")write.csv(...)write.csv2(...)","prefix":"write.table","type":"function","description":"write.table prints its required argument x (afterconverting it to a data frame if it is not one nor a matrix) toa file or connection.","leftLabel":"utils","rightLabel":"R: Data Output"},"zip":{"text":"zip","snippet":"zip(zipfile, files, flags = \"-r9X\", extras = \"\",    zip = Sys.getenv(\"R_ZIPCMD\", \"zip\"))","prefix":"zip","type":"function","description":"A wrapper for an external zip command to create zip archives.","leftLabel":"utils","rightLabel":"R: Create Zip archives"},"COMPILE":{"text":"COMPILE","snippet":"R CMD COMPILE [options] srcfiles","prefix":"COMPILE","type":"function","description":"Compile given source files so that they can subsequently be collectedinto a shared object using R CMD SHLIB or an executableprogram using R CMD LINK.","leftLabel":"utils","rightLabel":"R: Compile Files for Use with R"},"LINK":{"text":"LINK","snippet":"R CMD LINK [options] linkcmd","prefix":"LINK","type":"function","description":"Front-end for creating executable programs.","leftLabel":"utils","rightLabel":"R: Create Executable Programs"},"memory.size":{"text":"memory.size","snippet":"memory.size(max = FALSE)memory.limit(size = NA)","prefix":"memory.size","type":"function","description":"memory.size and memory.limit are used to manage thetotal memory allocation on Windows.  On other platforms these arestubs which report infinity with a warning.","leftLabel":"utils","rightLabel":"R: Report on Memory Allocation"},"nsl":{"text":"nsl","snippet":"nsl(hostname)","prefix":"nsl","type":"function","description":"Interface to gethostbyname.","leftLabel":"utils","rightLabel":"R: Look up the IP Address by Hostname"},"AirPassengers":{"text":"AirPassengers","snippet":"AirPassengers","prefix":"AirPassengers","type":"function","description":"The classic Box & Jenkins airline data.  Monthly totals ofinternational airline passengers, 1949 to 1960.","leftLabel":"datasets","rightLabel":"R: Monthly Airline Passenger Numbers 1949-1960"},"BJsales":{"text":"BJsales","snippet":"BJsalesBJsales.lead","prefix":"BJsales","type":"function","description":"The sales time series BJsales and leading indicatorBJsales.lead each contain 150 observations.The objects are of class \"ts\".","leftLabel":"datasets","rightLabel":"R: Sales Data with Leading Indicator"},"BOD":{"text":"BOD","snippet":"BOD","prefix":"BOD","type":"function","description":"The BOD data frame has 6 rows and 2 columns giving thebiochemical oxygen demand versus time in an evaluation of waterquality.","leftLabel":"datasets","rightLabel":"R: Biochemical Oxygen Demand"},"ChickWeight":{"text":"ChickWeight","snippet":"ChickWeight","prefix":"ChickWeight","type":"function","description":"The ChickWeight data frame has 578 rows and 4 columns from anexperiment on the effect of diet on early growth of chicks.","leftLabel":"datasets","rightLabel":"R: Weight versus age of chicks on different diets"},"DNase":{"text":"DNase","snippet":"DNase","prefix":"DNase","type":"function","description":"The DNase data frame has 176 rows and 3 columns of dataobtained during development of an ELISA assay for the recombinantprotein DNase in rat serum.","leftLabel":"datasets","rightLabel":"R: Elisa assay of DNase"},"EuStockMarkets":{"text":"EuStockMarkets","snippet":"EuStockMarkets","prefix":"EuStockMarkets","type":"function","description":"Contains the daily closing prices of major European stock indices:Germany DAX (Ibis), Switzerland SMI, France CAC, and UK FTSE.  Thedata are sampled in business time, i.e., weekends and holidays areomitted.","leftLabel":"datasets","rightLabel":"R: Daily Closing Prices of Major European Stock Indices,..."},"Formaldehyde":{"text":"Formaldehyde","snippet":"Formaldehyde","prefix":"Formaldehyde","type":"function","description":"These data are from a chemical experiment to prepare a standard curvefor the determination of formaldehyde by the addition of chromatropicacid and concentrated sulphuric acid and the reading of the resultingpurple color on a spectrophotometer.","leftLabel":"datasets","rightLabel":"R: Determination of Formaldehyde"},"HairEyeColor":{"text":"HairEyeColor","snippet":"HairEyeColor","prefix":"HairEyeColor","type":"function","description":"Distribution of hair and eye color and sex in 592 statistics students.","leftLabel":"datasets","rightLabel":"R: Hair and Eye Color of Statistics Students"},"Harman23.cor":{"text":"Harman23.cor","snippet":"Harman23.cor","prefix":"Harman23.cor","type":"function","description":"A correlation matrix of eight physical measurements on 305 girls betweenages seven and seventeen.","leftLabel":"datasets","rightLabel":"R: Harman Example 2.3"},"Harman74.cor":{"text":"Harman74.cor","snippet":"Harman74.cor","prefix":"Harman74.cor","type":"function","description":"A correlation matrix of 24 psychological tests given to 145 seventh andeight-grade children in a Chicago suburb by Holzinger and Swineford.","leftLabel":"datasets","rightLabel":"R: Harman Example 7.4"},"Indometh":{"text":"Indometh","snippet":"Indometh","prefix":"Indometh","type":"function","description":"The Indometh data frame has 66 rows and 3 columns of data onthe pharmacokinetics of indometacin (or, older spelling,‘indomethacin’).","leftLabel":"datasets","rightLabel":"R: Pharmacokinetics of Indomethacin"},"InsectSprays":{"text":"InsectSprays","snippet":"InsectSprays","prefix":"InsectSprays","type":"function","description":"The counts of insects in agricultural experimental units treated withdifferent insecticides.","leftLabel":"datasets","rightLabel":"R: Effectiveness of Insect Sprays"},"JohnsonJohnson":{"text":"JohnsonJohnson","snippet":"JohnsonJohnson","prefix":"JohnsonJohnson","type":"function","description":"Quarterly earnings (dollars) per Johnson & Johnson share 1960–80.","leftLabel":"datasets","rightLabel":"R: Quarterly Earnings per Johnson & Johnson Share"},"LakeHuron":{"text":"LakeHuron","snippet":"LakeHuron","prefix":"LakeHuron","type":"function","description":"Annual measurements of the level, in feet, of Lake Huron 1875–1972.","leftLabel":"datasets","rightLabel":"R: Level of Lake Huron 1875-1972"},"LifeCycleSavings":{"text":"LifeCycleSavings","snippet":"LifeCycleSavings","prefix":"LifeCycleSavings","type":"function","description":"Data on the savings ratio 1960–1970.","leftLabel":"datasets","rightLabel":"R: Intercountry Life-Cycle Savings Data"},"Loblolly":{"text":"Loblolly","snippet":"Loblolly","prefix":"Loblolly","type":"function","description":"The Loblolly data frame has 84 rows and 3 columns of records ofthe growth of Loblolly pine trees.","leftLabel":"datasets","rightLabel":"R: Growth of Loblolly pine trees"},"Nile":{"text":"Nile","snippet":"Nile","prefix":"Nile","type":"function","description":"Measurements of the annual flow of the river Nile at Aswan (formerlyAssuan), 1871–1970, in 10^8 m^3,“with apparent changepoint near 1898” (Cobb(1978), Table 1, p.249).","leftLabel":"datasets","rightLabel":"R: Flow of the River Nile"},"Orange":{"text":"Orange","snippet":"Orange","prefix":"Orange","type":"function","description":"The Orange data frame has 35 rows and 3 columns of records ofthe growth of orange trees.","leftLabel":"datasets","rightLabel":"R: Growth of Orange Trees"},"OrchardSprays":{"text":"OrchardSprays","snippet":"OrchardSprays","prefix":"OrchardSprays","type":"function","description":"An experiment was conducted to assess the potency of variousconstituents of orchard sprays in repelling honeybees, using aLatin square design.","leftLabel":"datasets","rightLabel":"R: Potency of Orchard Sprays"},"PlantGrowth":{"text":"PlantGrowth","snippet":"PlantGrowth","prefix":"PlantGrowth","type":"function","description":"Results from an experiment to compare yields (as measured by driedweight of plants) obtained under a control and two different treatmentconditions.","leftLabel":"datasets","rightLabel":"R: Results from an Experiment on Plant Growth"},"Puromycin":{"text":"Puromycin","snippet":"Puromycin","prefix":"Puromycin","type":"function","description":"The Puromycin data frame has 23 rows and 3 columns of thereaction velocity versus substrate concentration in an enzymaticreaction involving untreated cells or cells treated with Puromycin.","leftLabel":"datasets","rightLabel":"R: Reaction Velocity of an Enzymatic Reaction"},"Theoph":{"text":"Theoph","snippet":"Theoph","prefix":"Theoph","type":"function","description":"The Theoph data frame has 132 rows and 5 columns of data froman experiment on the pharmacokinetics of theophylline.","leftLabel":"datasets","rightLabel":"R: Pharmacokinetics of Theophylline"},"Titanic":{"text":"Titanic","snippet":"Titanic","prefix":"Titanic","type":"function","description":"This data set provides information on the fate of passengers on thefatal maiden voyage of the ocean liner ‘Titanic’, summarized accordingto economic status (class), sex, age and survival.","leftLabel":"datasets","rightLabel":"R: Survival of passengers on the Titanic"},"ToothGrowth":{"text":"ToothGrowth","snippet":"ToothGrowth","prefix":"ToothGrowth","type":"function","description":"The response is the length of odontoblasts (cells responsible fortooth growth) in 60 guinea pigs.  Each animal received one of threedose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two deliverymethods, (orange juice or ascorbic acid (a form of vitamin C and codedas VC).","leftLabel":"datasets","rightLabel":"R: The Effect of Vitamin C on Tooth Growth in Guinea Pigs"},"UCBAdmissions":{"text":"UCBAdmissions","snippet":"UCBAdmissions","prefix":"UCBAdmissions","type":"function","description":"Aggregate data on applicants to graduate school at Berkeley for thesix largest departments in 1973 classified by admission and sex.","leftLabel":"datasets","rightLabel":"R: Student Admissions at UC Berkeley"},"UKDriverDeaths":{"text":"UKDriverDeaths","snippet":"UKDriverDeathsSeatbelts","prefix":"UKDriverDeaths","type":"function","description":"UKDriverDeaths is a time series giving the monthly totalsof car drivers inGreat Britain killed or seriously injured Jan 1969 to Dec 1984.Compulsory wearing of seat belts was introduced on 31 Jan 1983.","leftLabel":"datasets","rightLabel":"R: Road Casualties in Great Britain 1969-84"},"UKLungDeaths":{"text":"UKLungDeaths","snippet":"ldeathsfdeathsmdeaths","prefix":"UKLungDeaths","type":"function","description":"Three time series giving the monthly deaths from bronchitis,emphysema and asthma in the UK, 1974–1979,both sexes (ldeaths), males (mdeaths) andfemales (fdeaths).","leftLabel":"datasets","rightLabel":"R: Monthly Deaths from Lung Diseases in the UK"},"UKgas":{"text":"UKgas","snippet":"UKgas","prefix":"UKgas","type":"function","description":"Quarterly UK gas consumption from 1960Q1 to 1986Q4, in millions of therms.","leftLabel":"datasets","rightLabel":"R: UK Quarterly Gas Consumption"},"USAccDeaths":{"text":"USAccDeaths","snippet":"USAccDeaths","prefix":"USAccDeaths","type":"function","description":"A time series giving the monthly totals of accidental deaths in theUSA.  The values for the first six months of 1979 are 7798 7406 83638460 9217 9316.","leftLabel":"datasets","rightLabel":"R: Accidental Deaths in the US 1973-1978"},"USArrests":{"text":"USArrests","snippet":"USArrests","prefix":"USArrests","type":"function","description":"This data set contains statistics, in arrests per 100,000 residentsfor assault, murder, and rape in each of the 50 US states in 1973.Also given is the percent of the population living in urban areas.","leftLabel":"datasets","rightLabel":"R: Violent Crime Rates by US State"},"USJudgeRatings":{"text":"USJudgeRatings","snippet":"USJudgeRatings","prefix":"USJudgeRatings","type":"function","description":"Lawyers' ratings of state judges in the US Superior Court.","leftLabel":"datasets","rightLabel":"R: Lawyers' Ratings of State Judges in the US Superior Court"},"USPersonalExpenditure":{"text":"USPersonalExpenditure","snippet":"USPersonalExpenditure","prefix":"USPersonalExpenditure","type":"function","description":"This data set consists of United States personal expenditures (inbillions of dollars) in the categories; food and tobacco, householdoperation, medical and health, personal care, and private educationfor the years 1940, 1945, 1950, 1955 and 1960.","leftLabel":"datasets","rightLabel":"R: Personal Expenditure Data"},"VADeaths":{"text":"VADeaths","snippet":"VADeaths","prefix":"VADeaths","type":"function","description":"Death rates per 1000 in Virginia in 1940.","leftLabel":"datasets","rightLabel":"R: Death Rates in Virginia (1940)"},"WWWusage":{"text":"WWWusage","snippet":"WWWusage","prefix":"WWWusage","type":"function","description":"A time series of the numbers of users connected to the Internetthrough a server every minute.","leftLabel":"datasets","rightLabel":"R: Internet Usage per Minute"},"WorldPhones":{"text":"WorldPhones","snippet":"WorldPhones","prefix":"WorldPhones","type":"function","description":"The number of telephones in various regions of the world (inthousands).","leftLabel":"datasets","rightLabel":"R: The World's Telephones"},"ability.cov":{"text":"ability.cov","snippet":"ability.cov","prefix":"ability.cov","type":"function","description":"Six tests were given to 112 individuals. The covariance matrix isgiven in this object.","leftLabel":"datasets","rightLabel":"R: Ability and Intelligence Tests"},"airmiles":{"text":"airmiles","snippet":"airmiles","prefix":"airmiles","type":"function","description":"The revenue passenger miles flown by commercial airlines inthe United States for each year from 1937 to 1960.","leftLabel":"datasets","rightLabel":"R: Passenger Miles on Commercial US Airlines, 1937-1960"},"airquality":{"text":"airquality","snippet":"airquality","prefix":"airquality","type":"function","description":"Daily air quality measurements in New York, May to September 1973.","leftLabel":"datasets","rightLabel":"R: New York Air Quality Measurements"},"anscombe":{"text":"anscombe","snippet":"anscombe","prefix":"anscombe","type":"function","description":"Four x-y datasets which have the same traditionalstatistical properties (mean, variance, correlation, regression line,etc.), yet are quite different.","leftLabel":"datasets","rightLabel":"R: Anscombe's Quartet of 'Identical' Simple Linear Regressions"},"attenu":{"text":"attenu","snippet":"attenu","prefix":"attenu","type":"function","description":"This data gives peak accelerations measured at various observationstations for 23 earthquakes in California.  The data have been usedby various workers to estimate the attenuating affect of distanceon ground acceleration.","leftLabel":"datasets","rightLabel":"R: The Joyner-Boore Attenuation Data"},"attitude":{"text":"attitude","snippet":"attitude","prefix":"attitude","type":"function","description":"From a survey of the clerical employees of a large financialorganization, the data are aggregated from the questionnaires of theapproximately 35 employees for each of 30 (randomly selected)departments.  The numbers give the percent proportion of favourableresponses to seven questions in each department.","leftLabel":"datasets","rightLabel":"R: The Chatterjee-Price Attitude Data"},"austres":{"text":"austres","snippet":"austres","prefix":"austres","type":"function","description":"Numbers (in thousands) of Australian residents measured quarterly fromMarch 1971 to March 1994.  The object is of class \"ts\".","leftLabel":"datasets","rightLabel":"R: Quarterly Time Series of the Number of Australian Residents"},"beavers":{"text":"beavers","snippet":"beaver1beaver2","prefix":"beavers","type":"function","description":"Reynolds (1994) describes a small part of a study of the long-termtemperature dynamics of beaver Castor canadensis innorth-central Wisconsin.  Body temperature was measured by telemetryevery 10 minutes for four females, but data from a one period ofless than a day for each of two animals is used there.","leftLabel":"datasets","rightLabel":"R: Body Temperature Series of Two Beavers"},"cars":{"text":"cars","snippet":"cars","prefix":"cars","type":"function","description":"The data give the speed of cars and the distances taken to stop.Note that the data were recorded in the 1920s.","leftLabel":"datasets","rightLabel":"R: Speed and Stopping Distances of Cars"},"chickwts":{"text":"chickwts","snippet":"chickwts","prefix":"chickwts","type":"function","description":"An experiment was conducted to measure and compare the effectivenessof various feed supplements on the growth rate of chickens.","leftLabel":"datasets","rightLabel":"R: Chicken Weights by Feed Type"},"co2":{"text":"co2","snippet":"co2","prefix":"co2","type":"function","description":"Atmospheric concentrations of CO2 are expressed in parts permillion (ppm) and reported in the preliminary 1997 SIO manometric molefraction scale.","leftLabel":"datasets","rightLabel":"R: Mauna Loa Atmospheric CO2 Concentration"},"crimtab":{"text":"crimtab","snippet":"crimtab","prefix":"crimtab","type":"function","description":"Data of 3000 male criminals over 20 years old undergoing theirsentences in the chief prisons of England and Wales.","leftLabel":"datasets","rightLabel":"R: Student's 3000 Criminals Data"},"datasets-package":{"text":"datasets-package","snippet":{},"prefix":"datasets-package","type":"function","description":"Base R datasets","leftLabel":"datasets","rightLabel":"R: The R Datasets Package"},"discoveries":{"text":"discoveries","snippet":"discoveries","prefix":"discoveries","type":"function","description":"The numbers of “great” inventions and scientificdiscoveries in each year from 1860 to 1959.","leftLabel":"datasets","rightLabel":"R: Yearly Numbers of Important Discoveries"},"esoph":{"text":"esoph","snippet":"esoph","prefix":"esoph","type":"function","description":"Data from a case-control study of (o)esophageal cancer inIlle-et-Vilaine, France.","leftLabel":"datasets","rightLabel":"R: Smoking, Alcohol and (O)esophageal Cancer"},"euro":{"text":"euro","snippet":"euroeuro.cross","prefix":"euro","type":"function","description":"Conversion rates between the various Euro currencies.","leftLabel":"datasets","rightLabel":"R: Conversion Rates of Euro Currencies"},"eurodist":{"text":"eurodist","snippet":"eurodistUScitiesD","prefix":"eurodist","type":"function","description":"The eurodist gives the road distances (in km) between 21cities in Europe.  The data are taken from a table in TheCambridge Encyclopaedia.","leftLabel":"datasets","rightLabel":"R: Distances Between European Cities and Between US Cities"},"faithful":{"text":"faithful","snippet":"faithful","prefix":"faithful","type":"function","description":"Waiting time between eruptions and the duration of the eruption forthe Old Faithful geyser in Yellowstone National Park, Wyoming, USA.","leftLabel":"datasets","rightLabel":"R: Old Faithful Geyser Data"},"freeny":{"text":"freeny","snippet":"freenyfreeny.xfreeny.y","prefix":"freeny","type":"function","description":"Freeny's data on quarterly revenue and explanatory variables.","leftLabel":"datasets","rightLabel":"R: Freeny's Revenue Data"},"infert":{"text":"infert","snippet":"infert","prefix":"infert","type":"function","description":"This is a matched case-control study dating from before theavailability of conditional logistic regression.","leftLabel":"datasets","rightLabel":"R: Infertility after Spontaneous and Induced Abortion"},"iris":{"text":"iris","snippet":"irisiris3","prefix":"iris","type":"function","description":"This famous (Fisher's or Anderson's) iris data set gives themeasurements in centimeters of the variables sepal length and widthand petal length and width, respectively, for 50 flowers from eachof 3 species of iris.  The species are Iris setosa,versicolor, and virginica.","leftLabel":"datasets","rightLabel":"R: Edgar Anderson's Iris Data"},"islands":{"text":"islands","snippet":"islands","prefix":"islands","type":"function","description":"The areas in thousands of square miles of the landmasses which exceed10,000 square miles.","leftLabel":"datasets","rightLabel":"R: Areas of the World's Major Landmasses"},"lh":{"text":"lh","snippet":"lh","prefix":"lh","type":"function","description":"A regular time series giving the luteinizing hormone in bloodsamples at 10 mins intervals from a human female, 48 samples.","leftLabel":"datasets","rightLabel":"R: Luteinizing Hormone in Blood Samples"},"longley":{"text":"longley","snippet":"longley","prefix":"longley","type":"function","description":"A macroeconomic data set which provides a well-known example for ahighly collinear regression.","leftLabel":"datasets","rightLabel":"R: Longley's Economic Regression Data"},"lynx":{"text":"lynx","snippet":"lynx","prefix":"lynx","type":"function","description":"Annual numbers of lynx trappings for 1821–1934 in Canada. Taken fromBrockwell & Davis (1991), this appears to be the series consideredby Campbell & Walker (1977).","leftLabel":"datasets","rightLabel":"R: Annual Canadian Lynx trappings 1821-1934"},"morley":{"text":"morley","snippet":"morley","prefix":"morley","type":"function","description":"A classical data of Michelson (but not this one with Morley) onmeasurements done in 1879 on the speed of light.  The data consists offive experiments, each consisting of 20 consecutive ‘runs’.The response is the speed of light measurement, suitably coded(km/sec, with 299000 subtracted).","leftLabel":"datasets","rightLabel":"R: Michelson Speed of Light Data"},"mtcars":{"text":"mtcars","snippet":"mtcars","prefix":"mtcars","type":"function","description":"The data was extracted from the 1974 Motor Trend US magazine,and comprises fuel consumption and 10 aspects ofautomobile design and performance for 32 automobiles (1973–74models).","leftLabel":"datasets","rightLabel":"R: Motor Trend Car Road Tests"},"nhtemp":{"text":"nhtemp","snippet":"nhtemp","prefix":"nhtemp","type":"function","description":"The mean annual temperature in degrees Fahrenheit in New Haven,Connecticut, from 1912 to 1971.","leftLabel":"datasets","rightLabel":"R: Average Yearly Temperatures in New Haven"},"nottem":{"text":"nottem","snippet":"nottem","prefix":"nottem","type":"function","description":"A time series object containing average air temperatures atNottingham Castle in degrees Fahrenheit for 20 years.","leftLabel":"datasets","rightLabel":"R: Average Monthly Temperatures at Nottingham, 1920-1939"},"npk":{"text":"npk","snippet":"npk","prefix":"npk","type":"function","description":"A classical N, P, K (nitrogen, phosphate, potassium) factorialexperiment on the growth of peas conducted on 6 blocks. Each half of afractional factorial design confounding the NPK interaction was usedon 3 of the plots.","leftLabel":"datasets","rightLabel":"R: Classical N, P, K Factorial Experiment"},"occupationalStatus":{"text":"occupationalStatus","snippet":"occupationalStatus","prefix":"occupationalStatus","type":"function","description":"Cross-classification of a sample of British males according to eachsubject's occupational status and his father's occupational status.","leftLabel":"datasets","rightLabel":"R: Occupational Status of Fathers and their Sons"},"precip":{"text":"precip","snippet":"precip","prefix":"precip","type":"function","description":"The average amount of precipitation (rainfall) in inches for each of70 United States (and Puerto Rico) cities.","leftLabel":"datasets","rightLabel":"R: Annual Precipitation in US Cities"},"presidents":{"text":"presidents","snippet":"presidents","prefix":"presidents","type":"function","description":"The (approximately) quarterly approval rating for the President of theUnited States from the first quarter of 1945 to the last quarter of1974.","leftLabel":"datasets","rightLabel":"R: Quarterly Approval Ratings of US Presidents"},"pressure":{"text":"pressure","snippet":"pressure","prefix":"pressure","type":"function","description":"Data on the relation between temperature in degrees Celsius and vaporpressure of mercury in millimeters (of mercury).","leftLabel":"datasets","rightLabel":"R: Vapor Pressure of Mercury as a Function of Temperature"},"quakes":{"text":"quakes","snippet":"quakes","prefix":"quakes","type":"function","description":"The data set give the locations of 1000 seismic events of MB > 4.0.The events occurred in a cube near Fiji since 1964.","leftLabel":"datasets","rightLabel":"R: Locations of Earthquakes off Fiji"},"randu":{"text":"randu","snippet":"randu","prefix":"randu","type":"function","description":"400 triples of successive random numbers were taken from the VAXFORTRAN function RANDU running under VMS 1.5.","leftLabel":"datasets","rightLabel":"R: Random Numbers from Congruential Generator RANDU"},"rivers":{"text":"rivers","snippet":"rivers","prefix":"rivers","type":"function","description":"This data set gives the lengths (in miles) of 141 “major”rivers in North America, as compiled by the US Geological Survey.","leftLabel":"datasets","rightLabel":"R: Lengths of Major North American Rivers"},"rock":{"text":"rock","snippet":"rock","prefix":"rock","type":"function","description":"Measurements on 48 rock samples from a petroleum reservoir.","leftLabel":"datasets","rightLabel":"R: Measurements on Petroleum Rock Samples"},"sleep":{"text":"sleep","snippet":"sleep","prefix":"sleep","type":"function","description":"Data which show the effect of two soporific drugs (increase in hoursof sleep compared to control) on 10 patients.","leftLabel":"datasets","rightLabel":"R: Student's Sleep Data"},"stackloss":{"text":"stackloss","snippet":"stacklossstack.xstack.loss","prefix":"stackloss","type":"function","description":"Operational data of a plant for the oxidation of ammonia to nitricacid.","leftLabel":"datasets","rightLabel":"R: Brownlee's Stack Loss Plant Data"},"state":{"text":"state","snippet":"state.abbstate.areastate.centerstate.divisionstate.namestate.regionstate.x77","prefix":"state","type":"function","description":"Data sets related to the 50 states of the United States ofAmerica.","leftLabel":"datasets","rightLabel":"R: US State Facts and Figures"},"sunspot.month":{"text":"sunspot.month","snippet":"sunspot.month","prefix":"sunspot.month","type":"function","description":"Monthly numbers of sunspots, as from the World Data Center, aka SIDC.This is the version of the data that will occasionally be updated whennew counts become available.","leftLabel":"datasets","rightLabel":"R: Monthly Sunspot Data, from 1749 to \"Present\""},"sunspot.year":{"text":"sunspot.year","snippet":"sunspot.year","prefix":"sunspot.year","type":"function","description":"Yearly numbers of sunspots from 1700 to 1988 (rounded to one digit).","leftLabel":"datasets","rightLabel":"R: Yearly Sunspot Data, 1700-1988"},"sunspots":{"text":"sunspots","snippet":"sunspots","prefix":"sunspots","type":"function","description":"Monthly mean relative sunspot numbers from 1749 to 1983.  Collected atSwiss Federal Observatory, Zurich until 1960, then Tokyo AstronomicalObservatory.","leftLabel":"datasets","rightLabel":"R: Monthly Sunspot Numbers, 1749-1983"},"swiss":{"text":"swiss","snippet":"swiss","prefix":"swiss","type":"function","description":"Standardized fertility measure and socio-economic indicators for eachof 47 French-speaking provinces of Switzerland at about 1888.","leftLabel":"datasets","rightLabel":"R: Swiss Fertility and Socioeconomic Indicators (1888) Data"},"treering":{"text":"treering","snippet":"treering","prefix":"treering","type":"function","description":"Contains normalized tree-ring widths in dimensionless units.","leftLabel":"datasets","rightLabel":"R: Yearly Treering Data, -6000-1979"},"trees":{"text":"trees","snippet":"trees","prefix":"trees","type":"function","description":"This data set provides measurements of the girth, height and volumeof timber in 31 felled black cherry trees.  Note that girth is thediameter of the tree (in inches) measured at 4 ft 6 in above theground.","leftLabel":"datasets","rightLabel":"R: Girth, Height and Volume for Black Cherry Trees"},"uspop":{"text":"uspop","snippet":"uspop","prefix":"uspop","type":"function","description":"This data set gives the population of the United States (in millions)as recorded by the decennial census for the period 1790–1970.","leftLabel":"datasets","rightLabel":"R: Populations Recorded by the US Census"},"volcano":{"text":"volcano","snippet":"volcano","prefix":"volcano","type":"function","description":"Maunga Whau (Mt Eden) is one of about 50 volcanos in the Aucklandvolcanic field.  This data set gives topographic information forMaunga Whau on a 10m by 10m grid.","leftLabel":"datasets","rightLabel":"R: Topographic Information on Auckland's Maunga Whau Volcano"},"warpbreaks":{"text":"warpbreaks","snippet":"warpbreaks","prefix":"warpbreaks","type":"function","description":"This data set gives the number of warp breaks per loom, where a loomcorresponds to a fixed length of yarn.","leftLabel":"datasets","rightLabel":"R: The Number of Breaks in Yarn during Weaving"},"women":{"text":"women","snippet":"women","prefix":"women","type":"function","description":"This data set gives the average heights and weights for American womenaged 30–39.","leftLabel":"datasets","rightLabel":"R: Average Heights and Weights for American Women"},"zCO2":{"text":"zCO2","snippet":"CO2","prefix":"zCO2","type":"function","description":"The CO2 data frame has 84 rows and 5 columns of data from anexperiment on the cold tolerance of the grass speciesEchinochloa crus-galli.","leftLabel":"datasets","rightLabel":"R: Carbon Dioxide Uptake in Grass Plants"},"BasicClasses":{"text":"BasicClasses","snippet":"### The following are all basic vector classes.### They can appear as class names in method signatures,### in calls to as(), is(), and new().\"character\"\"complex\"\"double\"\"expression\"\"integer\"\"list\"\"logical\"\"numeric\"\"single\"\"raw\"### the class\"vector\"### is a virtual class, extended by all the above### the class\"S4\"### is an object type for S4 objects that do not extend### any of the basic vector classes.  It is a virtual class.### The following are additional basic classes\"NULL\"     #  NULL objects\"function\" #  function objects, including primitives\"externalptr\" # raw external pointers for use in C code\"ANY\"  # virtual classes used by the methods package itself\"VIRTUAL\"\"missing\"\"namedList\" # the alternative to \"list\" that preserves            # the names attribute","prefix":"BasicClasses","type":"function","description":"Formal classes exist corresponding to the basic R object types, allowingthese types to be used in method signatures, as slots in classdefinitions, and to be extended by new classes.","leftLabel":"methods","rightLabel":"R: Classes Corresponding to Basic Data Types"},"Classes":{"text":"Classes","snippet":{},"prefix":"Classes","type":"function","description":"You have navigated to an old link to documentation of S4 classes.","leftLabel":"methods","rightLabel":"R: S4 Class Documentation"},"Classes_Details":{"text":"Classes_Details","snippet":{},"prefix":"Classes_Details","type":"function","description":"Class definitions are objects that contain the formal definition of aclass of R objects, usually referred to as an S4 class, todistinguish them from the informal S3 classes.This document gives an overview of S4 classes; fordetails of the class representation objects, see help for the classclassRepresentation.","leftLabel":"methods","rightLabel":"R: Class Definitions"},"Documentation":{"text":"Documentation","snippet":{},"prefix":"Documentation","type":"function","description":"Special documentation can be supplied to describe theclasses and methods that are created by the software in the methodspackage.  Techniques to access this documentation and to create itin R help files are described here.","leftLabel":"methods","rightLabel":"R: Using and Creating On-line Documentation for Classes and..."},"EmptyMethodsList-class":{"text":"EmptyMethodsList-class","snippet":"## class described below\"EmptyMethodsList\"### Other, virtual classes used in method dispatch\"OptionalMethods\"\"PossibleMethod\"","prefix":"EmptyMethodsList-class","type":"function","description":"Objects from class \"EmptyMethodsList\" are generated duringmethod selection to indicate failed search (forcing backtracking).Other classes described here are used internally in method dispatch.All these are for internal use.","leftLabel":"methods","rightLabel":"R: Internal Class representing Empty Methods List"},"EnvironmentClass":{"text":"EnvironmentClass","snippet":{},"prefix":"EnvironmentClass","type":"function","description":" A formal class for R environments.","leftLabel":"methods","rightLabel":"R: Class '\"environment\"'"},"GenericFunctions":{"text":"GenericFunctions","snippet":"isGeneric(f, where, fdef, getName = FALSE)isGroup(f, where, fdef)removeGeneric(f, where)dumpMethod(f, signature, file, where, def)findFunction(f, generic = TRUE, where = topenv(parent.frame()))dumpMethods(f, file, signature, methods, where)signature(...)removeMethods(f, where = topenv(parent.frame()), all = missing(where))setReplaceMethod(f, ..., where = topenv(parent.frame()))getGenerics(where, searchForm = FALSE)","prefix":"GenericFunctions","type":"function","description":"The functions documented here manage collections of methods associatedwith a generic function, as well as providing information about thegeneric functions themselves.","leftLabel":"methods","rightLabel":"R: Tools for Managing Generic Functions"},"Introduction":{"text":"Introduction","snippet":{},"prefix":"Introduction","type":"function","description":"The majority of applications using methods and classes will be in Rpackages implementing new computations for an application, using new classesof objects that represent the data and results.Computations will be implemented using methods that implementfunctional computations when one or more of the arguments is an objectfrom these classes.","leftLabel":"methods","rightLabel":"R: Basic use of S4 Methods and Classes"},"LanguageClasses":{"text":"LanguageClasses","snippet":"### each of these classes corresponds to an unevaluated object### in the S language.### The class name can appear in method signatures,### and in a few other contexts (such as some calls to as()).\"(\"\"<-\"\"call\"\"for\"\"if\"\"repeat\"\"while\"\"name\"\"{\"### Each of the classes above extends the virtual class\"language\"","prefix":"LanguageClasses","type":"function","description":"  The virtual class \"language\" and the specificclasses that extend it represent unevaluated objects, as produced forexample by the parser or by functions such as quote.","leftLabel":"methods","rightLabel":"R: Classes to Represent Unevaluated Language Objects"},"LinearMethodsList-class":{"text":"LinearMethodsList-class","snippet":{},"prefix":"LinearMethodsList-class","type":"function","description":"A version of methods lists that has been ‘linearized’for producing summary information.  The actual objects from class\"MethodsList\" used for method dispatch are defined recursivelyover the arguments involved.","leftLabel":"methods","rightLabel":"R: Class \"LinearMethodsList\""},"MethodDefinition-class":{"text":"MethodDefinition-class","snippet":{},"prefix":"MethodDefinition-class","type":"function","description":"These classes extend the basic class \"function\" whenfunctions are to be stored and used as method definitions.","leftLabel":"methods","rightLabel":"R: Classes to Represent Method Definitions"},"MethodSupport":{"text":"MethodSupport","snippet":"listFromMethods(generic, where, table)getMethodsForDispatch(fdef, inherited = FALSE)cacheMethod(f, sig, def, args, fdef, inherited = FALSE)resetGeneric(f, fdef, mlist, where, deflt)","prefix":"MethodSupport","type":"function","description":"These are internal support routines for computations on formal methods.","leftLabel":"methods","rightLabel":"R: Additional (Support) Functions for Methods"},"MethodWithNext-class":{"text":"MethodWithNext-class","snippet":{},"prefix":"MethodWithNext-class","type":"function","description":" Class of method definitions set up for callNextMethod ","leftLabel":"methods","rightLabel":"R: Class MethodWithNext"},"Methods":{"text":"Methods","snippet":{},"prefix":"Methods","type":"function","description":"You have navigated to an old link to documentation of S4 methods.","leftLabel":"methods","rightLabel":"R: S4 Class Documentation"},"MethodsList-class":{"text":"MethodsList-class","snippet":{},"prefix":"MethodsList-class","type":"function","description":" This class of objects was used in the originalimplementation of the package to control method dispatch.  Its useis now defunct, but object appear as the default method slot ingeneric functions.  This and any other remaining uses will beremoved in the future.","leftLabel":"methods","rightLabel":"R: Class MethodsList, Defunct Representation of Methods"},"MethodsList":{"text":"MethodsList","snippet":"listFromMlist(mlist, prefix = list(), sigs. = TRUE, methods. = TRUE)linearizeMlist(mlist, inherited = TRUE)finalDefaultMethod(method)loadMethod(method, fname, envir)##--------- These are all deprecated, since R 3.2.0 ----------MethodsList(.ArgName, ...)makeMethodsList(object, level=1)SignatureMethod(names, signature, definition)insertMethod(mlist, signature, args, def, cacheOnly)inheritedSubMethodLists(object, thisClass, mlist, ev)showMlist(mlist, includeDefs = TRUE, inherited = TRUE,   classes, useArgNames, printTo = stdout() )## S3 method for class 'MethodsList'print(x, ...)mergeMethods(m1, m2, genericLabel)","prefix":"MethodsList","type":"function","description":"These functions create and manipulate MethodsList objects, theobjects formerly used in R to store methods for dispatch.  Use ofthese objects is deprecated since R 3.2.0, as it will rarely be agood idea.  Where methods dispatch isto be studied, see selectMethod.  For computationsthat iterate over methods or over method signatures, seefindMethods, which returns a linearized methods listto hold method definitions, usually more convenient for iterationthan the recursive MethodsList objects.","leftLabel":"methods","rightLabel":"R: MethodsList Objects"},"Methods_Details":{"text":"Methods_Details","snippet":{},"prefix":"Methods_Details","type":"function","description":"This documentation covers some general topics on how methodswork and how the methods package interacts with the rest of R.  Theinformation is usually not needed to get started with methods andclasses, but may be helpful for moderately ambitious projects, or whensomething doesn't work as expected.","leftLabel":"methods","rightLabel":"R: General Information on Methods"},"Methods_for_Nongenerics":{"text":"Methods_for_Nongenerics","snippet":{},"prefix":"Methods_for_Nongenerics","type":"function","description":"In writing methods for an R package, it's common for these methods toapply to a function (in another package) that is not  generic in thatpackage; that is, there are no formal methods for the function in itsown package, although it may have S3 methods.The programming in this case involves one extra step, to callsetGeneric() to declare that the function isgeneric in your package.","leftLabel":"methods","rightLabel":"R: Methods for Non-Generic Functions in Other Packages"},"Methods_for_S3":{"text":"Methods_for_S3","snippet":{},"prefix":"Methods_for_S3","type":"function","description":"The S3 and S4 software in R are two generations implementingfunctional object-oriented programming.S3 is the original, simpler for initial programming but less general,less formal and less open to validation.The S4 formal methods and classes provide these features but requiremore programming.","leftLabel":"methods","rightLabel":"R: Methods For S3 and S4 Dispatch"},"NextMethod":{"text":"NextMethod","snippet":"callNextMethod(...)","prefix":"NextMethod","type":"function","description":"A call to callNextMethod can only appear inside a methoddefinition.  It then results in a call to the first inherited methodafter the current method, with the arguments to the current methodpassed down to the next method.  The value of that method call is thevalue of callNextMethod.","leftLabel":"methods","rightLabel":"R: Call an Inherited Method"},"ObjectsWithPackage-class":{"text":"ObjectsWithPackage-class","snippet":{},"prefix":"ObjectsWithPackage-class","type":"function","description":"This class of objects is used to represent ordinary character stringobject names, extended with a package slot naming the packageassociated with each object.","leftLabel":"methods","rightLabel":"R: A Vector of Object Names, with associated Package Names"},"RClassUtils":{"text":"RClassUtils","snippet":"classLabel(Class).classEnv(Class, default = .requirePackage(\"methods\"), mustFind = TRUE)testVirtual(properties, extends, prototype, where)makePrototypeFromClassDef(slots, ClassDef, extends, where)newEmptyObject()completeClassDefinition(Class, ClassDef, where, doExtends)getAllSuperClasses(ClassDef, simpleOnly = TRUE)superClassDepth(ClassDef, soFar, simpleOnly = TRUE)isVirtualClass(Class, where)newBasic(Class, ...)makeExtends(Class, to, coerce, test, replace, by, package, slots,                 classDef1, classDef2)reconcilePropertiesAndPrototype(name, properties, prototype,       superClasses, where)tryNew(Class, where)empty.dump()showClass(Class, complete=TRUE, propertiesAreCalled=\"Slots\")showExtends(ext, printTo = stdout())possibleExtends(class1, class2, ClassDef1 = getClassDef(class1),                 ClassDef2 = getClassDef(class2, where =                 .classEnv(ClassDef1)))completeExtends(ClassDef, class2, extensionDef, where)classMetaName(name)methodsPackageMetaName(prefix, name, package = \"\")metaNameUndo(strings, prefix, searchForm = FALSE)requireMethods(functions, signature, message, where)checkAtAssignment(cl, name, valueClass)checkSlotAssignment(obj, name, value)defaultPrototype()isClassDef(object)validSlotNames(names)getDataPart(object)setDataPart(object, value, check = TRUE)","prefix":"RClassUtils","type":"function","description":"These are various functions to support the definition and use offormal classes.  Most of them are rarely suitable to be calleddirectly.","leftLabel":"methods","rightLabel":"R: Utilities for Managing Class Definitions"},"RMethodUtils":{"text":"RMethodUtils","snippet":"getGeneric(f, mustFind=FALSE, where, package)getGroup(fdef, recursive, where)getGroupMembers(group, recursive = FALSE, character = TRUE)getMethodsMetaData(f, where)assignMethodsMetaData (f, value, fdef, where)makeGeneric(f, fdef, fdefault =, group=list(), valueClass=character(),            package =, signature = NULL, genericFunction = NULL,            simpleInheritanceOnly = NULL)makeStandardGeneric(f, fdef)generic.skeleton(name, fdef, fdefault)defaultDumpName(generic, signature)doPrimitiveMethod(name, def, call= sys.call(sys.parent()),                  ev = sys.frame(sys.parent(2)))conformMethod(signature, mnames, fnames, f= , fdef, method)matchSignature(signature, fun, where)findUnique(what, message, where)MethodAddCoerce(method, argName, thisClass, methodClass)cacheMetaData(where, attach = TRUE, searchWhere = as.environment(where),              doCheck = TRUE)cacheGenericsMetaData(f, fdef, attach = TRUE, where, package, methods)setPrimitiveMethods(f, fdef, code, generic, mlist)missingArg(symbol, envir = parent.frame(), eval)sigToEnv(signature, generic)rematchDefinition(definition, generic, mnames, fnames, signature)unRematchDefinition(definition)isRematched(definition)asMethodDefinition(def, signature, sealed = FALSE, fdef)addNextMethod(method, f, mlist, optional, envir)insertClassMethods(methods, Class, value, fieldNames, returnAll)balanceMethodsList(mlist, args, check = TRUE) # <- deprecated since R 3.2.0","prefix":"RMethodUtils","type":"function","description":"Utility functions to support the definition and use of formalmethods.  Most of these functions will not normally be called directlyby the user.","leftLabel":"methods","rightLabel":"R: Method Utilities"},"S3Part":{"text":"S3Part","snippet":"S3Part(object, strictS3 = FALSE, S3Class)S3Class(object)isXS3Class(classDef)slotsFromS3(object)## the replacement versions of the functions are not recommended## Create a new object from the class or use the replacement version of as().S3Part(object, strictS3 = FALSE, needClass = ) <- valueS3Class(object) <-  value","prefix":"S3Part","type":"function","description":"A regular (S4) class may contain an S3 class, if that class has been registered (by callingsetOldClass).  The functions described here provideinformation about contained S3 classes.  See the section ‘Functions’.","leftLabel":"methods","rightLabel":"R: S4 Classes that Contain S3 Classes"},"S4groupGeneric":{"text":"S4groupGeneric","snippet":"## S4 group generics:Arith(e1, e2)Compare(e1, e2)Ops(e1, e2)Logic(e1, e2)Math(x)Math2(x, digits)Summary(x, ..., na.rm = FALSE)Complex(z)","prefix":"S4groupGeneric","type":"function","description":"Methods can be defined for group generic functions.  Each groupgeneric function has a number of member generic functionsassociated with it.","leftLabel":"methods","rightLabel":"R: S4 Group Generic Functions"},"SClassExtension-class":{"text":"SClassExtension-class","snippet":{},"prefix":"SClassExtension-class","type":"function","description":"  An object from this class represents a single ‘is’relationship; lists of these objects are used to represent all theextensions (superclasses) and subclasses for a given class.  Theobject contains information about how the relation is defined andmethods to coerce, test, and replace correspondingly. ","leftLabel":"methods","rightLabel":"R: Class to Represent Inheritance (Extension) Relations"},"StructureClasses":{"text":"StructureClasses","snippet":"## The following class names can appear in method signatures,## as the class in as() and is() expressions, and, except for## the classes commented as VIRTUAL, in calls to new()\"matrix\"\"array\"\"ts\"\"structure\" ## VIRTUAL","prefix":"StructureClasses","type":"function","description":"The virtual class structure and classes thatextend it are formal classes analogous to S language structures suchas arrays and time-series.","leftLabel":"methods","rightLabel":"R: Classes Corresponding to Basic Structures"},"TraceClasses":{"text":"TraceClasses","snippet":"### Objects from the following classes are generated### by calling trace() on an object from the corresponding### class without the \"WithTrace\" in the name.\"functionWithTrace\"\"MethodDefinitionWithTrace\"\"MethodWithNextWithTrace\"\"genericFunctionWithTrace\"\"groupGenericFunctionWithTrace\"### the following is a virtual class extended by each of the### classes above\"traceable\"","prefix":"TraceClasses","type":"function","description":" The classes described  here are used by the R functiontrace to create versions of functions and methodsincluding browser calls, etc., and also to untrace thesame objects.","leftLabel":"methods","rightLabel":"R: Classes Used Internally to Control Tracing"},"as":{"text":"as","snippet":"as(object, Class, strict=TRUE, ext)as(object, Class) <- value","prefix":"as","type":"function","description":["Coerce an object to a given class.","as(object)returns the version of this object coerced to be the givenClass.  When used in the replacement form on the left ofan assignment, the portion of the object corresponding toClass is replaced by value."],"leftLabel":"methods","rightLabel":"R: Force an Object to Belong to a Class"},"callGeneric":{"text":"callGeneric","snippet":"callGeneric(...)","prefix":"callGeneric","type":"function","description":"A call to callGeneric can only appear inside a methoddefinition.  It then results in a call to the current genericfunction.  The value of that call is the value of callGeneric.While it can be called from any method, it is useful and typicallyused in methods for group generic functions.","leftLabel":"methods","rightLabel":"R: Call the Current Generic Function from a Method"},"canCoerce":{"text":"canCoerce","snippet":"canCoerce(object, Class)","prefix":"canCoerce","type":"function","description":"Test if an object can be coerced to a given S4 class.Maybe useful inside if() to ensure that callingas(object, Class) will find a method.","leftLabel":"methods","rightLabel":"R: Can an Object be Coerced to a Certain S4 Class?"},"cbind2":{"text":"cbind2","snippet":"cbind2(x, y, ...)rbind2(x, y, ...)","prefix":"cbind2","type":"function","description":"Combine two matrix-like R objects by columns (cbind2)or rows (rbind2).  These are (S4) generic functions with defaultmethods.","leftLabel":"methods","rightLabel":"R: Combine two Objects by Columns or Rows"},"className":{"text":"className","snippet":"className(class, package)multipleClasses(details = FALSE)","prefix":"className","type":"function","description":"The function className() generates avalid references to a class, including the name of the packagecontaining the class definition.  The object returned, from class \"className\", is theunambiguous way to refer to a class, for example when callingsetMethod, just in case multiple definitions of theclass exist.","leftLabel":"methods","rightLabel":"R: Class names including the corresponding package"},"classRepresentation-class":{"text":"classRepresentation-class","snippet":{},"prefix":"classRepresentation-class","type":"function","description":"  These are the objects that hold the definition ofclasses of objects.  They are constructed and stored as meta-data bycalls to the function setClass.  Don't manipulate themdirectly, except perhaps to look at individual slots. ","leftLabel":"methods","rightLabel":"R: Class Objects"},"classesToAM":{"text":"classesToAM","snippet":"classesToAM(classes, includeSubclasses = FALSE,       abbreviate = 2)","prefix":"classesToAM","type":"function","description":"Given a vector of class names or a list of class definitions, thefunction returns an adjacency matrix of the superclasses of theseclasses; that is, a matrix with class names as the row and columnnames and with element [i, j] being 1 if the class in column j is adirect superclass of the class in row i, and 0 otherwise.","leftLabel":"methods","rightLabel":"R: Compute an Adjacency Matrix for Superclasses of Class..."},"dotsMethods":{"text":"dotsMethods","snippet":{},"prefix":"dotsMethods","type":"function","description":"The “...” argument in R functions is treated specially, in that itmatches zero, one or more actual arguments (and so, objects).  Amechanism has been added to R to allow “...” as the signature of ageneric function.  Methods defined for such functions will beselected and called when all  the arguments matching “...”are from the specified class or from some subclass of that class.","leftLabel":"methods","rightLabel":"R: The Use of '...' in Method Signatures"},"evalSource":{"text":"evalSource","snippet":"evalSource(source, package = \"\", lock = TRUE, cache = FALSE)insertSource(source, package = \"\", functions = , methods = ,           force = )","prefix":"evalSource","type":"function","description":"Definitions of functions and/or methods from a source file areinserted into a package, using the trace mechanism.Typically, this allows testing or debugging modified versions of a fewfunctions without reinstalling a large package.","leftLabel":"methods","rightLabel":"R: Use Function Definitions from a Source File without..."},"findClass":{"text":"findClass","snippet":"isClass(Class, formal=TRUE, where)getClasses(where, inherits = missing(where))findClass(Class, where, unique = \"\")## The remaining functions are retained for compatibility## but not generally recommendedremoveClass(Class, where)resetClass(Class, classDef, where)sealClass(Class, where)","prefix":"findClass","type":"function","description":"Functions to find classes:  isClass tests for a class;findClass returns the name(s) of packages containing theclass; getClasses returns the names of all the classes in anenvironment, typically a namespace.  To examine the definition of a class, use getClass.","leftLabel":"methods","rightLabel":"R: Find Class Definitions"},"findMethods":{"text":"findMethods","snippet":"findMethods(f, where, classes = character(), inherited = FALSE,      package = \"\")findMethodSignatures(..., target = TRUE, methods = )hasMethods(f, where, package)## Deprecated in 2010 and defunct in 2015 for \\code{table = FALSE}:getMethods(f, where, table = FALSE)","prefix":"findMethods","type":"function","description":"The function findMethods converts the methods defined in a table for a genericfunction (as used for selection of methods) into a list, for study ordisplay.  The list is actually from the class listOfMethods(see the section describing the class, below).","leftLabel":"methods","rightLabel":"R: Description of the Methods Defined for a Generic Function"},"fixPrevious":{"text":"fixPrevious","snippet":"fixPre1.8(names, where)","prefix":"fixPrevious","type":"function","description":"Beginning with R version 1.8.0, the class of an object contains theidentification of the package in which the class is defined.  Thefunction fixPre1.8 fixes and re-assigns objects missing that information(typically because they were loaded from a file saved with a previousversion of R.)","leftLabel":"methods","rightLabel":"R: Fix Objects Saved from R Versions Previous to 1.8"},"genericFunction-class":{"text":"genericFunction-class","snippet":{},"prefix":"genericFunction-class","type":"function","description":"Generic functions (objects from or extending classgenericFunction) are extended function objects,containing information used in creating and dispatching methods forthis function.  They also identify the package associated with thefunction and its methods.","leftLabel":"methods","rightLabel":"R: Generic Function Objects"},"getClass":{"text":"getClass","snippet":"getClass   (Class, .Force = FALSE, where)getClassDef(Class, where, package, inherits = TRUE)","prefix":"getClass","type":"function","description":"Get the definition of a class.","leftLabel":"methods","rightLabel":"R: Get Class Definition"},"getMethod":{"text":"getMethod","snippet":"  selectMethod(f, signature, optional = FALSE, useInherited =,             mlist = , fdef = , verbose = , doCache = )  findMethod(f, signature, where)  getMethod(f, signature = character(), where, optional = FALSE,             mlist, fdef)  existsMethod(f, signature = character(), where)  hasMethod(f, signature = character(), where)","prefix":"getMethod","type":"function","description":"The function selectMethod() returns the method thatwould be selected for a call to function f if the arguments hadclasses as specified by signature.  Failing to find a methodis an error, unless argument optional = TRUE, in which caseNULL is returned.","leftLabel":"methods","rightLabel":"R: Get or Test for the Definition of a Method"},"getPackageName":{"text":"getPackageName","snippet":"getPackageName(where, create = TRUE)setPackageName(pkg, env)packageSlot(object)packageSlot(object) <- value","prefix":"getPackageName","type":"function","description":"The functions below produce the package associated with a particularenvironment or position on the search list, or of the packagecontaining a particular function.  They are primarily used to supportcomputations that need to differentiate objects on multiple packages.","leftLabel":"methods","rightLabel":"R: The Name associated with a Given Package"},"hasArg":{"text":"hasArg","snippet":"hasArg(name)","prefix":"hasArg","type":"function","description":"Returns TRUE if name corresponds to an argument in thecall, either a formal argument to the function, or a component of..., and FALSE otherwise.","leftLabel":"methods","rightLabel":"R: Look for an Argument in the Call"},"implicitGeneric":{"text":"implicitGeneric","snippet":"implicitGeneric(name, where, generic)setGenericImplicit(name, where, restore = TRUE)prohibitGeneric(name, where)registerImplicitGenerics(what, where)","prefix":"implicitGeneric","type":"function","description":"The implicit generic mechanism stores generic versions offunctionsin a table in a package. The package does not want the currentversion of the function to be a generic, however, and retains thenon-generic version.","leftLabel":"methods","rightLabel":"R: Manage Implicit Versions of Generic Functions"},"inheritedSlotNames":{"text":"inheritedSlotNames","snippet":"inheritedSlotNames(Class, where = topenv(parent.frame()))","prefix":"inheritedSlotNames","type":"function","description":"For a class (or class definition, see getClass andthe description of class classRepresentation),give the names which are inherited from “above”, i.e., superclasses, rather than by this class' definition itself.","leftLabel":"methods","rightLabel":"R: Names of Slots Inherited From a Super Class"},"initialize-methods":{"text":"initialize-methods","snippet":{},"prefix":"initialize-methods","type":"function","description":"The arguments to function new to create an object from aparticular class can be interpreted specially for that class, by thedefinition of a method for function initialize for the class.This documentation describes some existing methods, and also outlineshow to write new ones.","leftLabel":"methods","rightLabel":"R: Methods to Initialize New Objects from a Class"},"is":{"text":"is","snippet":"is(object, class2)extends(class1, class2, maybe = TRUE, fullInfo = FALSE)","prefix":"is","type":"function","description":"Functions to test inheritance relationships between an object and aclass or between two classes (extends).","leftLabel":"methods","rightLabel":"R: Is an Object from a Class?"},"isSealedMethod":{"text":"isSealedMethod","snippet":"isSealedMethod(f, signature, fdef, where)isSealedClass(Class, where)","prefix":"isSealedMethod","type":"function","description":"These functions check for either a method or a class that has beensealed when it was defined, and which therefore cannot bere-defined.","leftLabel":"methods","rightLabel":"R: Check for a Sealed Method or Class"},"languageEl":{"text":"languageEl","snippet":"languageEl(object, which)isGrammarSymbol(symbol)","prefix":"languageEl","type":"function","description":"Internal routines to support some operations on language objects.","leftLabel":"methods","rightLabel":"R: Elements of Language Objects"},"localRefClass":{"text":"localRefClass","snippet":"setRefClass(Class, fields = , contains = c(\"localRefClass\",....),     methods =, where =, ...)","prefix":"localRefClass","type":"function","description":"Local reference classes are modified ReferenceClasses thatisolate the objects to the local frame.  Therefore, they do notpropagate changes back to the calling environment.   At the same time,they use the reference field semantics locally, avoiding the automaticduplication applied to standard R objects.","leftLabel":"methods","rightLabel":"R: Localized Objects based on Reference Classes"},"method.skeleton":{"text":"method.skeleton","snippet":"method.skeleton(generic, signature, file, external = FALSE, where)","prefix":"method.skeleton","type":"function","description":"This function writes a source file containing a call tosetMethod to define a method for the generic functionand signature supplied.  By default the method definition is in linein the call, but can be made an external (previously assigned) function.","leftLabel":"methods","rightLabel":"R: Create a Skeleton File for a New Method"},"methodUtilities":{"text":"methodUtilities","snippet":"functionBody(fun=sys.function(sys.parent()))allNames(x)getFunction(name, generic=TRUE, mustFind=TRUE, where)el(object, where)elNamed(x, name, mustFind=FALSE)formalArgs(def)Quote(expr)showDefault(object, oldMethods = TRUE)initMethodDispatch(where = topenv(parent.frame()))methodSignatureMatrix(object, sigSlots = c(\"target\", \"defined\"))","prefix":"methodUtilities","type":"function","description":"These are internal utilities, currently in the methodspackage, that either provide some functionality needed by the package(e.g., element matching by name), or add compatibility with S-Plus, or both.","leftLabel":"methods","rightLabel":"R: Utility Functions for Methods and S-Plus Compatibility"},"methods-defunct":{"text":"methods-defunct","snippet":"getAccess(ClassDef)getClassName(ClassDef)getClassPackage(ClassDef)getExtends(ClassDef)getProperties(ClassDef)getPrototype(ClassDef)getSubclasses(ClassDef)getVirtual(ClassDef)getAllMethods(f, fdef, where)mlistMetaName (name, package)removeMethodsObject(f, where)seemsS4Object(object)allGenerics()trySilent(expr)traceOn(what, tracer=browseAll, exit=NULL)traceOff(what)","prefix":"methods-defunct","type":"function","description":"Defunct functions in package methods.","leftLabel":"methods","rightLabel":"R: Defunct Functions in Package 'methods'"},"methods-deprecated":{"text":"methods-deprecated","snippet":{},"prefix":"methods-deprecated","type":"function","description":"These functions are provided for compatibility with older versions ofR only, and may be defunct as soon as the next release.","leftLabel":"methods","rightLabel":"R: Deprecated Functions in Package 'methods'"},"methods-package":{"text":"methods-package","snippet":{},"prefix":"methods-package","type":"function","description":"Formally defined methods and classes for R objects, plusother programming tools, as described in the references.","leftLabel":"methods","rightLabel":"R: Formal Methods and Classes"},"new":{"text":"new","snippet":"new(Class, ...)initialize(.Object, ...)","prefix":"new","type":"function","description":"A call to  new returns a newly allocated object from theclass identified by the first argument.  This call in turn calls themethod for the generic function initialize corresponding tothe specified class, passing the ... arguments to thismethod.In the default method for initialize(), named arguments providevalues for the corresponding slots and unnamed arguments must beobjects from superclasses of this class.","leftLabel":"methods","rightLabel":"R: Generate an Object from a Class"},"nonStructure-class":{"text":"nonStructure-class","snippet":{},"prefix":"nonStructure-class","type":"function","description":" S4 classes that are defined to extend one of the basicvector classes should contain the classstructure if they behave like structures; thatis, if they should retain their class behavior under math functionsor operators, so long as their length is unchanged.On the other hand, if their class depends on the values in theobject, not just its structure, then they should lose that classunder any such transformations.  In the latter case, they should bedefined to contain nonStructure.","leftLabel":"methods","rightLabel":"R: A non-structure S4 Class for basic types"},"promptClass":{"text":"promptClass","snippet":"promptClass(clName, filename = NULL, type = \"class\",            keywords = \"classes\", where = topenv(parent.frame()),            generatorName = clName)","prefix":"promptClass","type":"function","description":"Assembles all relevant slot and method information for a class, withminimal markup for Rd processing; no QC facilities at present.","leftLabel":"methods","rightLabel":"R: Generate a Shell for Documentation of a Formal Class"},"promptMethods":{"text":"promptMethods","snippet":"promptMethods(f, filename = NULL, methods)","prefix":"promptMethods","type":"function","description":"Generates a shell of documentation for the methods of a genericfunction.","leftLabel":"methods","rightLabel":"R: Generate a Shell for Documentation of Formal Methods"},"refClass":{"text":"refClass","snippet":"setRefClass(Class, fields = , contains = , methods =,     where =, inheritPackage =, ...)getRefClass(Class, where =)","prefix":"refClass","type":"function","description":"The software described here allows packages to define referenceclasses that behave in the style of “OOP” languages such as Java andC++.This model for OOP differs from the functional model implemented by S4(and S3) classes and methods, in which methods are defined for genericfunctions.Methods for reference classes are “encapsulated” in the class definition.","leftLabel":"methods","rightLabel":"R: Objects With Fields Treated by Reference (OOP-style)"},"removeMethod":{"text":"removeMethod","snippet":"removeMethod(f, signature, where)","prefix":"removeMethod","type":"function","description":"Remove the method for a given function and signature.  Obsolete forordinary applications: Method definitions in a package should neverneed to remove methods and it's very bad practice to remove methodsthat were defined in other packages.","leftLabel":"methods","rightLabel":"R: Remove a Method"},"representation":{"text":"representation","snippet":"representation(...)prototype(...)","prefix":"representation","type":"function","description":"These are old utility functions  to construct, respectivelya list designed to represent the slots and superclasses anda list of prototype specifications.  The representation()function is no longer useful, since the arguments slots andcontains to setClass are now recommended.","leftLabel":"methods","rightLabel":"R: Construct a Representation or a Prototype for a Class..."},"selectSuperClasses":{"text":"selectSuperClasses","snippet":"selectSuperClasses(Class, dropVirtual = FALSE, namesOnly = TRUE,                   directOnly = TRUE, simpleOnly = directOnly,                   where = topenv(parent.frame())).selectSuperClasses(ext, dropVirtual = FALSE, namesOnly = TRUE,                    directOnly = TRUE, simpleOnly = directOnly)","prefix":"selectSuperClasses","type":"function","description":"Return superclasses of ClassDef, possibly only non-virtual ordirect or simple ones.","leftLabel":"methods","rightLabel":"R: Super Classes (of Specific Kinds) of a Class"},"setAs":{"text":"setAs","snippet":"setAs(from, to, def, replace, where = topenv(parent.frame()))","prefix":"setAs","type":"function","description":"A call to setAs defines a method for coercing an object ofclass from to class to.  The methods will then be usedby calls to as for objects with class from,including calls that replace part of the object.","leftLabel":"methods","rightLabel":"R: Methods for Coercing an Object to a Class"},"setClass":{"text":"setClass","snippet":"setClass(Class, representation, prototype, contains=character(),         validity, access, where, version, sealed, package,         S3methods = FALSE, slots)","prefix":"setClass","type":"function","description":"Create  a class definition and return a generator function to createobjects from the class.  Typical usage will beof the style:","leftLabel":"methods","rightLabel":"R: Create a Class Definition"},"setClassUnion":{"text":"setClassUnion","snippet":"setClassUnion(name, members, where)isClassUnion(Class)","prefix":"setClassUnion","type":"function","description":"A class may be defined as the union of other classes; thatis, as a virtual class defined as a superclass of several otherclasses. Class unions are useful in method signatures or as slots inother classes, when we want to allow one of several classes to be supplied.","leftLabel":"methods","rightLabel":"R: Classes Defined as the Union of Other Classes"},"setGeneric":{"text":"setGeneric","snippet":"setGeneric(name, def= , group=list(), valueClass=character(),           where= , package= , signature= , useAsDefault= ,           genericFunction= , simpleInheritanceOnly = )","prefix":"setGeneric","type":"function","description":"Create a generic version of the named function so that methods maybe defined for it.  A call to setMethod will callsetGeneric automatically if applied to a non-genericfunction.","leftLabel":"methods","rightLabel":"R: Create a Generic Version of a Function"},"setGroupGeneric":{"text":"setGroupGeneric","snippet":"setGroupGeneric(name, def= , group=list(), valueClass=character(),                knownMembers=list(), package= , where= )","prefix":"setGroupGeneric","type":"function","description":"The setGroupGeneric function behaves like setGenericexcept that it constructs a group generic function, differing in twoways from an ordinary generic function.  First, this function cannotbe called directly, and the body of the function created will containa stop call with this information.  Second, the group generic functioncontains information about the known members of the group, used tokeep the members up to date when the group definition changes, throughchanges in the search list or direct specification of methods, etc.","leftLabel":"methods","rightLabel":"R: Create a Group Generic Version of a Function"},"setIs":{"text":"setIs","snippet":"setIs(class1, class2, test=NULL, coerce=NULL, replace=NULL,      by = character(), where = topenv(parent.frame()), classDef =,      extensionObject = NULL, doComplete = TRUE)","prefix":"setIs","type":"function","description":"setIs is an explicit alternativeto the contains= argument to setClass.  It isonly needed to create relations with explicit test or coercion.These have not proved to be of much practical value, so thisfunction should not likely be needed in applications.","leftLabel":"methods","rightLabel":"R: Specify a Superclass Explicitly"},"setLoadActions":{"text":"setLoadActions","snippet":"setLoadAction(action, aname=, where=)setLoadActions(..., .where=)getLoadActions(where=)hasLoadAction(aname, where=)evalOnLoad(expr, where=, aname=)evalqOnLoad(expr, where=, aname=)","prefix":"setLoadActions","type":"function","description":"These functions provide a mechanism for packages to specifycomputations to be done during the loading of a package namespace.Such actions are a flexible way to provide information only available atload time (such as locations in a dynamically linked library).","leftLabel":"methods","rightLabel":"R: Set Actions For Package Loading"},"setMethod":{"text":"setMethod","snippet":"setMethod(f, signature=character(), definition,          where = topenv(parent.frame()),          valueClass = NULL, sealed = FALSE)","prefix":"setMethod","type":"function","description":"Create a method for a generic function, corresponding to a signature of classes for the arguments. Standard usage will be of the form:","leftLabel":"methods","rightLabel":"R: Create and Save a Method"},"setOldClass":{"text":"setOldClass","snippet":"setOldClass(Classes, prototype, where, test = FALSE, S4Class)","prefix":"setOldClass","type":"function","description":"Register an old-style (a.k.a. ‘S3’) class as a formally definedclass. Simple usage will be of the form:","leftLabel":"methods","rightLabel":"R: Register Old-Style (S3) Classes and Inheritance"},"setSClass":{"text":"setSClass","snippet":"makeClassRepresentation(name, slots=list(), superClasses=character(),                        prototype=NULL, package, validity, access,                        version, sealed, virtual=NA, where)","prefix":"setSClass","type":"function","description":"Constructs an object of class classRepresentationto describe a particular class.  Mostly a utility function, but you cancall it to create a class definition without assigning it, assetClass would do.","leftLabel":"methods","rightLabel":"R: Create a Class Definition"},"show":{"text":"show","snippet":"show(object)","prefix":"show","type":"function","description":"Display the object, by printing, plotting or whatever suits itsclass.  This function exists to be specialized by methods.  Thedefault method calls showDefault.","leftLabel":"methods","rightLabel":"R: Show an Object"},"showMethods":{"text":"showMethods","snippet":"showMethods(f = character(), where = topenv(parent.frame()),            classes = NULL, includeDefs = FALSE,            inherited = !includeDefs,            showEmpty, printTo = stdout(), fdef).S4methods(generic.function, class)","prefix":"showMethods","type":"function","description":"Show a summary of the methods for one or more generic functions,possibly restricted to those involving specified classes.","leftLabel":"methods","rightLabel":"R: Show all the methods for the specified function(s) or class"},"signature-class":{"text":"signature-class","snippet":{},"prefix":"signature-class","type":"function","description":"This class represents the mapping of some of the formalarguments of a function onto the corresponding classes.  It is used fortwo slots in the MethodDefinition class.","leftLabel":"methods","rightLabel":"R: Class '\"signature\"' For Method Definitions"},"slot":{"text":"slot","snippet":"object@nameobject@name <- valueslot(object, name)slot(object, name, check = TRUE) <- value.hasSlot(object, name)slotNames(x)getSlots(x)","prefix":"slot","type":"function","description":"These functions return or set information about the individual slotsin an object.","leftLabel":"methods","rightLabel":"R: The Slots in an Object from a Formal Class"},"stdRefClass":{"text":"stdRefClass","snippet":{},"prefix":"stdRefClass","type":"function","description":"Support Class to Implement R Objects using Reference Semantics","leftLabel":"methods","rightLabel":"R: Class '\"envRefClass\"'"},"substituteDirect":{"text":"substituteDirect","snippet":"substituteDirect(object, frame, cleanFunction=TRUE)","prefix":"substituteDirect","type":"function","description":"Substitute for the variables named in the second argument thecorresponding objects, substituting into object.  The argumentframe is a named list; if omitted, the environment of thecaller is used.","leftLabel":"methods","rightLabel":"R: SubstituteDirect"},"testInheritedMethods":{"text":"testInheritedMethods","snippet":"testInheritedMethods(f, signatures, test = TRUE, virtual = FALSE,                     groupMethods = TRUE, where = .GlobalEnv)","prefix":"testInheritedMethods","type":"function","description":"A set of distinct inherited signatures is generated to testinheritance for all the methods of a specified generic function.  Ifmethod selection is ambiguous for some of these, a summary of theambiguities is attached to the returned object.  This test should beperformed by package authors before releasing a package.","leftLabel":"methods","rightLabel":"R: Test for and Report about Selection of Inherited Methods"},"validObject":{"text":"validObject","snippet":"validObject(object, test = FALSE, complete = FALSE)setValidity(Class, method, where = topenv(parent.frame()) )getValidity(ClassDef)","prefix":"validObject","type":"function","description":"validObject() tests the validity of object related toits class definition; specifically, it checks that all slotsspecified in the class definition are present and that the object inthe slot is from the required class or a subclass of that class.","leftLabel":"methods","rightLabel":"R: Test the Validity of an Object"},"zBasicFunsList":{"text":"zBasicFunsList","snippet":{},"prefix":"zBasicFunsList","type":"function","description":"A named list providing instructions for turning builtin and specialfunctions into generic functions.","leftLabel":"methods","rightLabel":"R: List of Builtin and Special Functions"},"Arithmetic":{"text":"Arithmetic","snippet":"+ x- xx + yx - yx * yx / yx ^ yx %% yx %/% y","prefix":"Arithmetic","type":"function","description":"These unary and binary operators perform arithmetic on numeric orcomplex vectors (or objects which can be coerced to them).","leftLabel":"base","rightLabel":"R: Arithmetic Operators"},"AsIs":{"text":"AsIs","snippet":"I(x)","prefix":"AsIs","type":"function","description":"Change the class of an object to indicate that it should be treated‘as is’.","leftLabel":"base","rightLabel":"R: Inhibit Interpretation/Conversion of Objects"},"Bessel":{"text":"Bessel","snippet":"besselI(x, nu, expon.scaled = FALSE)besselK(x, nu, expon.scaled = FALSE)besselJ(x, nu)besselY(x, nu)","prefix":"Bessel","type":"function","description":"Bessel Functions of integer and fractional order, of firstand second kind, J(nu) and Y(nu), andModified Bessel functions (of first and third kind),I(nu) and K(nu).","leftLabel":"base","rightLabel":"R: Bessel Functions"},"CallExternal":{"text":"CallExternal","snippet":"    .Call(.NAME, ..., PACKAGE).External(.NAME, ..., PACKAGE)","prefix":"CallExternal","type":"function","description":"Functions to pass R objects to compiled C/C++ code that has beenloaded into R.","leftLabel":"base","rightLabel":"R: Modern Interfaces to C/C++ code"},"Colon":{"text":"Colon","snippet":"from:to   a:b","prefix":"Colon","type":"function","description":"Generate regular sequences.","leftLabel":"base","rightLabel":"R: Colon Operator"},"Comparison":{"text":"Comparison","snippet":"x < yx > yx <= yx >= yx == yx != y","prefix":"Comparison","type":"function","description":"Binary operators which allow the comparison of values in atomic vectors.","leftLabel":"base","rightLabel":"R: Relational Operators"},"Constants":{"text":"Constants","snippet":"LETTERSlettersmonth.abbmonth.namepi","prefix":"Constants","type":"function","description":"Constants built into R.","leftLabel":"base","rightLabel":"R: Built-in Constants"},"Control":{"text":"Control","snippet":"if(cond) exprif(cond) cons.expr  else  alt.exprfor(var in seq) exprwhile(cond) exprrepeat exprbreaknext","prefix":"Control","type":"function","description":"These are the basic control-flow constructs of the R language.  Theyfunction in much the same way as control statements in any Algol-likelanguage.  They are all reserved words.","leftLabel":"base","rightLabel":"R: Control Flow"},"Cstack_info":{"text":"Cstack_info","snippet":"Cstack_info()","prefix":"Cstack_info","type":"function","description":"Report information on the C stack size and usage (if available).","leftLabel":"base","rightLabel":"R: Report Information on C Stack Size and Usage"},"DateTimeClasses":{"text":"DateTimeClasses","snippet":"## S3 method for class 'POSIXct'print(x, tz = \"\", usetz = TRUE, ...)## S3 method for class 'POSIXct'summary(object, digits = 15, ...)time + zz + timetime - ztime1 lop time2","prefix":"DateTimeClasses","type":"function","description":"Description of the classes \"POSIXlt\" and \"POSIXct\"representing calendar dates and times.","leftLabel":"base","rightLabel":"R: Date-Time Classes"},"Dates":{"text":"Dates","snippet":"## S3 method for class 'Date'summary(object, digits = 12, ...)","prefix":"Dates","type":"function","description":"Description of the class \"Date\" representing calendar dates.","leftLabel":"base","rightLabel":"R: Date Class"},"Defunct":{"text":"Defunct","snippet":".Defunct(new, package = NULL, msg)","prefix":"Defunct","type":"function","description":"When a function is removed from R it should be replaced by a functionwhich calls .Defunct.","leftLabel":"base","rightLabel":"R: Marking Objects as Defunct"},"Deprecated":{"text":"Deprecated","snippet":".Deprecated(new, package=NULL, msg,            old = as.character(sys.call(sys.parent()))[1L])","prefix":"Deprecated","type":"function","description":"When an object is about to be removed from R it is first deprecated andshould include a call to .Deprecated.","leftLabel":"base","rightLabel":"R: Marking Objects as Deprecated"},"Encoding":{"text":"Encoding","snippet":"Encoding(x)Encoding(x) <- valueenc2native(x)enc2utf8(x)","prefix":"Encoding","type":"function","description":"Read or set the declared encodings for a character vector.","leftLabel":"base","rightLabel":"R: Read or Set the Declared Encodings for a Character Vector"},"EnvVar":{"text":"EnvVar","snippet":{},"prefix":"EnvVar","type":"function","description":"Details of some of the environment variables which affect an R session.","leftLabel":"base","rightLabel":"R: Environment Variables"},"Extract":{"text":"Extract","snippet":"x[i]x[i, j, ... , drop = TRUE]x[[i, exact = TRUE]]x[[i, j, ..., exact = TRUE]]x$namegetElement(object, name)x[i] <- valuex[i, j, ...] <- valuex[[i]] <- valuex$name <- value","prefix":"Extract","type":"function","description":"Operators acting on vectors, matrices, arrays and lists to extract orreplace parts.","leftLabel":"base","rightLabel":"R: Extract or Replace Parts of an Object"},"Extract.data.frame":{"text":"Extract.data.frame","snippet":"## S3 method for class 'data.frame'x[i, j, drop = ]## S3 replacement method for class 'data.frame'x[i, j] <- value## S3 method for class 'data.frame'x[[..., exact = TRUE]]## S3 replacement method for class 'data.frame'x[[i, j]] <- value## S3 method for class 'data.frame'x$name## S3 replacement method for class 'data.frame'x$name <- value","prefix":"Extract.data.frame","type":"function","description":"Extract or replace subsets of data frames.","leftLabel":"base","rightLabel":"R: Extract or Replace Parts of a Data Frame"},"Extract.factor":{"text":"Extract.factor","snippet":"## S3 method for class 'factor'x[..., drop = FALSE]## S3 method for class 'factor'x[[...]]## S3 replacement method for class 'factor'x[...] <- value## S3 replacement method for class 'factor'x[[...]] <- value","prefix":"Extract.factor","type":"function","description":"Extract or replace subsets of factors.","leftLabel":"base","rightLabel":"R: Extract or Replace Parts of a Factor"},"Extremes":{"text":"Extremes","snippet":"max(..., na.rm = FALSE)min(..., na.rm = FALSE)pmax(..., na.rm = FALSE)pmin(..., na.rm = FALSE)pmax.int(..., na.rm = FALSE)pmin.int(..., na.rm = FALSE)","prefix":"Extremes","type":"function","description":"Returns the (regular or parallel) maxima and minima of theinput values.","leftLabel":"base","rightLabel":"R: Maxima and Minima"},"Foreign-internal":{"text":"Foreign-internal","snippet":"    .Call.graphics(.NAME, ..., PACKAGE).External.graphics(.NAME, ..., PACKAGE)        .External2(.NAME, ..., PACKAGE)","prefix":"Foreign-internal","type":"function","description":"Internal versions of .Call and .External.","leftLabel":"base","rightLabel":"R: Internal Versions of the Foreign Function Interface"},"Foreign":{"text":"Foreign","snippet":"       .C(.NAME, ..., NAOK = FALSE, DUP = TRUE, PACKAGE, ENCODING) .Fortran(.NAME, ..., NAOK = FALSE, DUP = TRUE, PACKAGE, ENCODING)","prefix":"Foreign","type":"function","description":"Functions to make calls to compiled code that has been loaded into R.","leftLabel":"base","rightLabel":"R: Foreign Function Interface"},"Hyperbolic":{"text":"Hyperbolic","snippet":"cosh(x)sinh(x)tanh(x)acosh(x)asinh(x)atanh(x)","prefix":"Hyperbolic","type":"function","description":"These functions give the obvious hyperbolic functions.  Theyrespectively compute the hyperbolic cosine, sine, tangent, and theirinverses, arc-cosine, arc-sine, arc-tangent (or ‘area cosine’,etc).","leftLabel":"base","rightLabel":"R: Hyperbolic Functions"},"ISOdatetime":{"text":"ISOdatetime","snippet":"ISOdatetime(year, month, day, hour, min, sec, tz = \"\")ISOdate(year, month, day, hour = 12, min = 0, sec = 0, tz = \"GMT\")","prefix":"ISOdatetime","type":"function","description":"Convenience wrappers to create date-times from numeric representations.","leftLabel":"base","rightLabel":"R: Date-time Conversion Functions from Numeric Representations"},"Internal":{"text":"Internal","snippet":" .Internal(call)","prefix":"Internal","type":"function","description":".Internal performs a call to an internal codewhich is built in to the R interpreter.","leftLabel":"base","rightLabel":"R: Call an Internal Function"},"InternalMethods":{"text":"InternalMethods","snippet":{},"prefix":"InternalMethods","type":"function","description":"Many R-internal functions are generic and allowmethods to be written for.","leftLabel":"base","rightLabel":"R: Internal Generic Functions"},"La_library":{"text":"La_library","snippet":"La_library()","prefix":"La_library","type":"function","description":"Report the name of the shared object file with LAPACK implementationin use.","leftLabel":"base","rightLabel":"R: LAPACK Library"},"La_version":{"text":"La_version","snippet":"La_version()","prefix":"La_version","type":"function","description":"Report the version of LAPACK in use.","leftLabel":"base","rightLabel":"R: LAPACK Version"},"Last.value":{"text":"Last.value","snippet":".Last.value","prefix":"Last.value","type":"function","description":"The value of the internal evaluation of a top-level R expressionis always assigned to .Last.value (in package:base)before further processing (e.g., printing).","leftLabel":"base","rightLabel":"R: Value of Last Evaluated Expression"},"Log":{"text":"Log","snippet":"log(x, base = exp(1))logb(x, base = exp(1))log10(x)log2(x)log1p(x)exp(x)expm1(x)","prefix":"Log","type":"function","description":"log computes logarithms, by default natural logarithms,log10 computes common (i.e., base 10) logarithms, andlog2 computes binary (i.e., base 2) logarithms.The general form log(x, base) computes logarithms with basebase.","leftLabel":"base","rightLabel":"R: Logarithms and Exponentials"},"Logic":{"text":"Logic","snippet":"! xx & yx && yx | yx || yxor(x, y)isTRUE(x)","prefix":"Logic","type":"function","description":"These operators act on raw, logical and number-like vectors.","leftLabel":"base","rightLabel":"R: Logical Operators"},"LongVectors":{"text":"LongVectors","snippet":{},"prefix":"LongVectors","type":"function","description":"Vectors of 2^31 or more elements were added in R 3.0.0.","leftLabel":"base","rightLabel":"R: Long Vectors"},"MathFun":{"text":"MathFun","snippet":"abs(x)sqrt(x)","prefix":"MathFun","type":"function","description":"abs(x) computes the absolute value of x, sqrt(x) computes the(principal) square root of x, √{x}.","leftLabel":"base","rightLabel":"R: Miscellaneous Mathematical Functions"},"Memory-limits":{"text":"Memory-limits","snippet":{},"prefix":"Memory-limits","type":"function","description":"R holds objects it is using in virtual memory.  This help filedocuments the current design limitations on large objects: thesediffer between 32-bit and 64-bit builds of R.","leftLabel":"base","rightLabel":"R: Memory Limits in R"},"Memory":{"text":"Memory","snippet":{},"prefix":"Memory","type":"function","description":"How R manages its workspace.","leftLabel":"base","rightLabel":"R: Memory Available for Data Storage"},"NA":{"text":"NA","snippet":"NAis.na(x)anyNA(x, recursive = FALSE)## S3 method for class 'data.frame'is.na(x)is.na(x) <- value","prefix":"NA","type":"function","description":"NA is a logical constant of length 1 which contains a missingvalue indicator.  NA can be coerced to any other vectortype except raw.  There are also constants NA_integer_,NA_real_, NA_complex_ and NA_character_ of theother atomic vector types which support missing values: all of theseare reserved words in the R language.","leftLabel":"base","rightLabel":"R: 'Not Available' / Missing Values"},"NULL":{"text":"NULL","snippet":"NULLas.null(x, ...)is.null(x)","prefix":"NULL","type":"function","description":"NULL represents the null object in R: it is a reservedword.  NULL is often returned by expressions and functionswhose value is undefined.","leftLabel":"base","rightLabel":"R: The Null Object"},"NumericConstants":{"text":"NumericConstants","snippet":{},"prefix":"NumericConstants","type":"function","description":"How R parses numeric constants.","leftLabel":"base","rightLabel":"R: Numeric Constants"},"Ops.Date":{"text":"Ops.Date","snippet":"date + xx + datedate - xdate1 lop date2","prefix":"Ops.Date","type":"function","description":"Operators for the \"Date\" class.","leftLabel":"base","rightLabel":"R: Operators on the Date Class"},"Paren":{"text":"Paren","snippet":"( \\dots ){ \\dots }","prefix":"Paren","type":"function","description":"Open parenthesis, (, and open brace, {, are.Primitive functions in R.","leftLabel":"base","rightLabel":"R: Parentheses and Braces"},"Platform":{"text":"Platform","snippet":".Platform","prefix":"Platform","type":"function","description":".Platform is a list with some details of the platform underwhich R was built.  This provides means to write OS-portable Rcode.","leftLabel":"base","rightLabel":"R: Platform Specific Variables"},"Primitive":{"text":"Primitive","snippet":".Primitive(name)","prefix":"Primitive","type":"function","description":".Primitive looks up by name a ‘primitive’(internally implemented) function.","leftLabel":"base","rightLabel":"R: Look Up a Primitive Function"},"Quotes":{"text":"Quotes","snippet":{},"prefix":"Quotes","type":"function","description":"Descriptions of the various uses of quoting in R.","leftLabel":"base","rightLabel":"R: Quotes"},"Random-user":{"text":"Random-user","snippet":{},"prefix":"Random-user","type":"function","description":"Function RNGkind allows user-coded uniform andnormal random number generators to be supplied.  The details are givenhere.","leftLabel":"base","rightLabel":"R: User-supplied Random Number Generation"},"Random":{"text":"Random","snippet":".Random.seed <- c(rng.kind, n1, n2, \\dots)RNGkind(kind = NULL, normal.kind = NULL)RNGversion(vstr)set.seed(seed, kind = NULL, normal.kind = NULL)","prefix":"Random","type":"function","description":".Random.seed is an integer vector, containing the random numbergenerator (RNG) state for random number generation in R.  Itcan be saved and restored, but should not be altered by the user.","leftLabel":"base","rightLabel":"R: Random Number Generation"},"RdUtils":{"text":"RdUtils","snippet":"R CMD Rdconv [options] fileR CMD Rd2pdf [options] files","prefix":"RdUtils","type":"function","description":"Utilities for converting files in R documentation (Rd) format to otherformats or create indices from them, and for converting documentationin other formats to Rd format.","leftLabel":"base","rightLabel":"R: Utilities for Processing Rd Files"},"Recall":{"text":"Recall","snippet":"Recall(...)","prefix":"Recall","type":"function","description":"Recall is used as a placeholder for the name of the functionin which it is called.  It allows the definition of recursivefunctions which still work after being renamed, see example below.","leftLabel":"base","rightLabel":"R: Recursive Calling"},"Reserved":{"text":"Reserved","snippet":{},"prefix":"Reserved","type":"function","description":"The reserved words in R's parser are","leftLabel":"base","rightLabel":"R: Reserved Words in R"},"Rhome":{"text":"Rhome","snippet":"R.home(component = \"home\")","prefix":"Rhome","type":"function","description":"Return the R home directory, or the full path to a component of theR installation.","leftLabel":"base","rightLabel":"R: Return the R Home Directory"},"Round":{"text":"Round","snippet":"ceiling(x)floor(x)trunc(x, ...)round(x, digits = 0)signif(x, digits = 6)","prefix":"Round","type":"function","description":"ceiling takes a single numeric argument x and returns anumeric vector containing the smallest integers not less than thecorresponding elements of x.","leftLabel":"base","rightLabel":"R: Rounding of Numbers"},"Special":{"text":"Special","snippet":"beta(a, b)lbeta(a, b)gamma(x)lgamma(x)psigamma(x, deriv = 0)digamma(x)trigamma(x)choose(n, k)lchoose(n, k)factorial(x)lfactorial(x)","prefix":"Special","type":"function","description":"Special mathematical functions related to the beta and gammafunctions.","leftLabel":"base","rightLabel":"R: Special Functions of Mathematics"},"Startup":{"text":"Startup","snippet":{},"prefix":"Startup","type":"function","description":"In R, the startup mechanism is as follows.","leftLabel":"base","rightLabel":"R: Initialization at Start of an R Session"},"Syntax":{"text":"Syntax","snippet":{},"prefix":"Syntax","type":"function","description":"Outlines R syntax and gives the precedence of operators.","leftLabel":"base","rightLabel":"R: Operator Syntax and Precedence"},"Sys.getenv":{"text":"Sys.getenv","snippet":"Sys.getenv(x = NULL, unset = \"\", names = NA)","prefix":"Sys.getenv","type":"function","description":"Sys.getenv obtains the values of the environment variables.","leftLabel":"base","rightLabel":"R: Get Environment Variables"},"Sys.getpid":{"text":"Sys.getpid","snippet":"Sys.getpid()","prefix":"Sys.getpid","type":"function","description":"Get the process ID of the R Session.  It is guaranteed by theoperating system that two R sessions running simultaneously willhave different IDs, but it is possible that R sessions running atdifferent times will have the same ID.","leftLabel":"base","rightLabel":"R: Get the Process ID of the R Session"},"Sys.glob":{"text":"Sys.glob","snippet":"Sys.glob(paths, dirmark = FALSE)","prefix":"Sys.glob","type":"function","description":"Function to do wildcard expansion (also known as ‘globbing’) onfile paths.","leftLabel":"base","rightLabel":"R: Wildcard Expansion on File Paths"},"Sys.info":{"text":"Sys.info","snippet":"Sys.info()","prefix":"Sys.info","type":"function","description":"Reports system and user information.","leftLabel":"base","rightLabel":"R: Extract System and User Information"},"Sys.localeconv":{"text":"Sys.localeconv","snippet":"Sys.localeconv()","prefix":"Sys.localeconv","type":"function","description":"Get details of the numerical and monetary representations in thecurrent locale.","leftLabel":"base","rightLabel":"R: Find Details of the Numerical and Monetary Representations in..."},"Sys.readlink":{"text":"Sys.readlink","snippet":"Sys.readlink(paths)","prefix":"Sys.readlink","type":"function","description":"Find out if a file path is a symbolic link, and if so what it islinked to, via the system call readlink.","leftLabel":"base","rightLabel":"R: Read File Symbolic Links"},"Sys.setFileTime":{"text":"Sys.setFileTime","snippet":"Sys.setFileTime(path, time)","prefix":"Sys.setFileTime","type":"function","description":"Uses system calls to set the times on a file or directory.","leftLabel":"base","rightLabel":"R: Set File Time"},"Sys.setenv":{"text":"Sys.setenv","snippet":"Sys.setenv(...)Sys.unsetenv(x)","prefix":"Sys.setenv","type":"function","description":"Sys.setenv sets environment variables (for other processescalled from within R or future calls to Sys.getenv fromthis R process).","leftLabel":"base","rightLabel":"R: Set or Unset Environment Variables"},"Sys.sleep":{"text":"Sys.sleep","snippet":"Sys.sleep(time)","prefix":"Sys.sleep","type":"function","description":"Suspend execution of R expressions for a specified time interval.","leftLabel":"base","rightLabel":"R: Suspend Execution for a Time Interval"},"Sys.time":{"text":"Sys.time","snippet":"Sys.time()Sys.Date()","prefix":"Sys.time","type":"function","description":"Sys.time and Sys.Date returns the system's idea of thecurrent date with and without time.","leftLabel":"base","rightLabel":"R: Get Current Date and Time"},"Sys.which":{"text":"Sys.which","snippet":"Sys.which(names)","prefix":"Sys.which","type":"function","description":"This is an interface to the system command which, or to anemulation on Windows.","leftLabel":"base","rightLabel":"R: Find Full Paths to Executables"},"Trig":{"text":"Trig","snippet":"cos(x)sin(x)tan(x)acos(x)asin(x)atan(x)atan2(y, x)cospi(x)sinpi(x)tanpi(x)","prefix":"Trig","type":"function","description":"These functions give the obvious trigonometric functions.  Theyrespectively compute the cosine, sine, tangent, arc-cosine, arc-sine,arc-tangent, and the two-argument arc-tangent.","leftLabel":"base","rightLabel":"R: Trigonometric Functions"},"UseMethod":{"text":"UseMethod","snippet":"UseMethod(generic, object)NextMethod(generic = NULL, object = NULL, ...)","prefix":"UseMethod","type":"function","description":"R possesses a simple generic function mechanism which can be used foran object-oriented style of programming.  Method dispatch takes placebased on the class(es) of the first argument to the generic function or ofthe object supplied as an argument to UseMethod or NextMethod.","leftLabel":"base","rightLabel":"R: Class Methods"},"Vectorize":{"text":"Vectorize","snippet":"Vectorize(FUN, vectorize.args = arg.names, SIMPLIFY = TRUE,          USE.NAMES = TRUE)","prefix":"Vectorize","type":"function","description":"Vectorize creates a function wrapper that vectorizes theaction of its argument FUN.","leftLabel":"base","rightLabel":"R: Vectorize a Scalar Function"},"Version":{"text":"Version","snippet":"R.Version()R.versionR.version.stringversion","prefix":"Version","type":"function","description":"R.Version() provides detailed information about the version ofR running.","leftLabel":"base","rightLabel":"R: Version Information"},"abbreviate":{"text":"abbreviate","snippet":"abbreviate(names.arg, minlength = 4, use.classes = TRUE,           dot = FALSE, strict = FALSE,           method = c(\"left.kept\", \"both.sides\"), named = TRUE)","prefix":"abbreviate","type":"function","description":"Abbreviate strings to at least minlength characters,such that they remain unique (if they were),unless strict = TRUE.","leftLabel":"base","rightLabel":"R: Abbreviate Strings"},"agrep":{"text":"agrep","snippet":"agrep(pattern, x, max.distance = 0.1, costs = NULL,      ignore.case = FALSE, value = FALSE, fixed = TRUE,      useBytes = FALSE)agrepl(pattern, x, max.distance = 0.1, costs = NULL,       ignore.case = FALSE, fixed = TRUE, useBytes = FALSE)","prefix":"agrep","type":"function","description":"Searches for approximate matches to pattern (the first argument)within each element of the string x (the second argument) usingthe generalized Levenshtein edit distance (the minimal possiblyweighted number of insertions, deletions and substitutions needed totransform one string into another).","leftLabel":"base","rightLabel":"R: Approximate String Matching (Fuzzy Matching)"},"all":{"text":"all","snippet":"all(..., na.rm = FALSE)","prefix":"all","type":"function","description":"Given a set of logical vectors, are all of the values true?","leftLabel":"base","rightLabel":"R: Are All Values True?"},"all.equal":{"text":"all.equal","snippet":"all.equal(target, current, ...)## S3 method for class 'numeric'all.equal(target, current,          tolerance = sqrt(.Machine$double.eps), scale = NULL,          ..., check.attributes = TRUE)## S3 method for class 'list'all.equal(target, current, ...,          check.attributes = TRUE, use.names = TRUE)## S3 method for class 'environment'all.equal(target, current, all.names=TRUE, ...)## S3 method for class 'POSIXt'all.equal(target, current, ..., tolerance = 1e-3, scale)attr.all.equal(target, current, ...,               check.attributes = TRUE, check.names = TRUE)","prefix":"all.equal","type":"function","description":"all.equal(x, y) is a utility to compare R objects xand y testing ‘near equality’.  If they are different,comparison is still made to some extent, and a report of thedifferences is returned.    Do not use all.equal directly inif expressions—either use isTRUE(all.equal(....)) oridentical if appropriate.","leftLabel":"base","rightLabel":"R: Test if Two Objects are (Nearly) Equal"},"allnames":{"text":"allnames","snippet":"all.names(expr, functions = TRUE, max.names = -1L, unique = FALSE)all.vars(expr, functions = FALSE, max.names = -1L, unique = TRUE)","prefix":"allnames","type":"function","description":"Return a character vector containing all the names which occur in anexpression or call.","leftLabel":"base","rightLabel":"R: Find All Names in an Expression"},"any":{"text":"any","snippet":"any(..., na.rm = FALSE)","prefix":"any","type":"function","description":"Given a set of logical vectors, is at least one of the values true?","leftLabel":"base","rightLabel":"R: Are Some Values True?"},"aperm":{"text":"aperm","snippet":"aperm(a, perm, ...)## Default S3 method:aperm(a, perm = NULL, resize = TRUE, ...)## S3 method for class 'table'aperm(a, perm = NULL, resize = TRUE, keep.class = TRUE, ...)","prefix":"aperm","type":"function","description":"Transpose an array by permuting its dimensions and optionally resizingit.","leftLabel":"base","rightLabel":"R: Array Transposition"},"append":{"text":"append","snippet":"append(x, values, after = length(x))","prefix":"append","type":"function","description":"Add elements to a vector.","leftLabel":"base","rightLabel":"R: Vector Merging"},"apply":{"text":"apply","snippet":"apply(X, MARGIN, FUN, ...)","prefix":"apply","type":"function","description":"Returns a vector or array or list of values obtained by applying afunction to margins of an array or matrix.","leftLabel":"base","rightLabel":"R: Apply Functions Over Array Margins"},"args":{"text":"args","snippet":"args(name)","prefix":"args","type":"function","description":"Displays the argument names and corresponding default values of afunction or primitive.","leftLabel":"base","rightLabel":"R: Argument List of a Function"},"array":{"text":"array","snippet":"array(data = NA, dim = length(data), dimnames = NULL)as.array(x, ...)is.array(x)","prefix":"array","type":"function","description":"Creates or tests for arrays.","leftLabel":"base","rightLabel":"R: Multi-way Arrays"},"as.Date":{"text":"as.Date","snippet":"as.Date(x, ...)## S3 method for class 'character'as.Date(x, format, ...)## S3 method for class 'numeric'as.Date(x, origin, ...)## S3 method for class 'POSIXct'as.Date(x, tz = \"UTC\", ...)## S3 method for class 'Date'format(x, ...)## S3 method for class 'Date'as.character(x, ...)","prefix":"as.Date","type":"function","description":"Functions to convert between character representations and objects ofclass \"Date\" representing calendar dates.","leftLabel":"base","rightLabel":"R: Date Conversion Functions to and from Character"},"as.POSIXlt":{"text":"as.POSIXlt","snippet":"as.POSIXct(x, tz = \"\", ...)as.POSIXlt(x, tz = \"\", ...)## S3 method for class 'character'as.POSIXlt(x, tz = \"\", format, ...)## S3 method for class 'numeric'as.POSIXlt(x, tz = \"\", origin, ...)## S3 method for class 'POSIXlt'as.double(x, ...)","prefix":"as.POSIXlt","type":"function","description":"Functions to manipulate objects of classes \"POSIXlt\" and\"POSIXct\" representing calendar dates and times.","leftLabel":"base","rightLabel":"R: Date-time Conversion Functions"},"as.data.frame":{"text":"as.data.frame","snippet":"as.data.frame(x, row.names = NULL, optional = FALSE, ...)## S3 method for class 'character'as.data.frame(x, ...,              stringsAsFactors = default.stringsAsFactors())## S3 method for class 'list'as.data.frame(x, row.names = NULL, optional = FALSE, ...,              cut.names = FALSE, col.names = names(x), fix.empty.names = TRUE,              stringsAsFactors = default.stringsAsFactors())## S3 method for class 'matrix'as.data.frame(x, row.names = NULL, optional = FALSE, ...,              stringsAsFactors = default.stringsAsFactors())is.data.frame(x)","prefix":"as.data.frame","type":"function","description":"Functions to check if an object is a data frame, or coerce it if possible.","leftLabel":"base","rightLabel":"R: Coerce to a Data Frame"},"as.environment":{"text":"as.environment","snippet":"as.environment(x)","prefix":"as.environment","type":"function","description":"A generic function coercing an R object to anenvironment.  A number or a character string isconverted to the corresponding environment on the search path.","leftLabel":"base","rightLabel":"R: Coerce to an Environment Object"},"as.function":{"text":"as.function","snippet":"as.function(x, ...)## Default S3 method:as.function(x, envir = parent.frame(), ...)","prefix":"as.function","type":"function","description":"as.function is a generic function which is used to convertobjects to functions.","leftLabel":"base","rightLabel":"R: Convert Object to Function"},"assign":{"text":"assign","snippet":"assign(x, value, pos = -1, envir = as.environment(pos),       inherits = FALSE, immediate = TRUE)","prefix":"assign","type":"function","description":"Assign a value to a name in an environment.","leftLabel":"base","rightLabel":"R: Assign a Value to a Name"},"assignOps":{"text":"assignOps","snippet":"x <- valuex <<- valuevalue -> xvalue ->> xx = value","prefix":"assignOps","type":"function","description":"Assign a value to a name.","leftLabel":"base","rightLabel":"R: Assignment Operators"},"attach":{"text":"attach","snippet":"attach(what, pos = 2L, name = deparse(substitute(what)),       warn.conflicts = TRUE)","prefix":"attach","type":"function","description":"The database is attached to the R search path.  This means that thedatabase is searched by R when evaluating a variable, so objects inthe database can be accessed by simply giving their names.","leftLabel":"base","rightLabel":"R: Attach Set of R Objects to Search Path"},"attr":{"text":"attr","snippet":"attr(x, which, exact = FALSE)attr(x, which) <- value","prefix":"attr","type":"function","description":"Get or set specific attributes of an object.","leftLabel":"base","rightLabel":"R: Object Attributes"},"attributes":{"text":"attributes","snippet":"attributes(obj)attributes(obj) <- valuemostattributes(obj) <- value","prefix":"attributes","type":"function","description":"These functions access an object's attributes.The first form below returns the object's attribute list.The replacement forms uses the list on the right-handside of the assignment as the object's attributes (if appropriate).","leftLabel":"base","rightLabel":"R: Object Attribute Lists"},"autoload":{"text":"autoload","snippet":"autoload(name, package, reset = FALSE, ...)autoloader(name, package, ...).AutoloadEnv.Autoloaded","prefix":"autoload","type":"function","description":"autoload creates a promise-to-evaluate autoloader andstores it with name name in .AutoloadEnv environment.When R attempts to evaluate name, autoloader is run,the package is loaded and name is re-evaluated in the newpackage's environment.  The result is that R behaves as iffile was loaded but it does not occupy memory.","leftLabel":"base","rightLabel":"R: On-demand Loading of Packages"},"backsolve":{"text":"backsolve","snippet":"   backsolve(r, x, k = ncol(r), upper.tri = TRUE,             transpose = FALSE)forwardsolve(l, x, k = ncol(l), upper.tri = FALSE,             transpose = FALSE)","prefix":"backsolve","type":"function","description":"Solves a triangular system of linear equations.","leftLabel":"base","rightLabel":"R: Solve an Upper or Lower Triangular System"},"base-defunct":{"text":"base-defunct","snippet":"# Defunct in 1.xVersion()provide(package).Providedcategory(...)print.anova.glm(.)print.anova.lm(.)print.tabular(.)print.plot(.)save.plot(.)system.test(.)getenv(...)read.table.url(url, method, ...)scan.url(url, file = tempfile(), method, ...)source.url(url, file = tempfile(), method, ...)httpclient(url, port = 80, error.is.fatal = TRUE,           check.MIME.type = TRUE, file = tempfile(),           drop.ctrl.z = TRUE)parse.dcf(text = NULL, file = \"\", fields = NULL,          versionfix = FALSE).Alias(expr)print.ordered(.).Dyn.libs.lib.locmachine()Machine()Platform()restart()printNoClass(x, digits = NULL, quote = TRUE, na.print = NULL,             print.gap = NULL, right = FALSE, ...)codes(x, ...)codes(x, ...) <- value# Defunct in 2.0.0La.eigen(x, symmetric, only.values = FALSE,         method = c(\"dsyevr\", \"dsyev\"))tetragamma(x)pentagamma(x)package.description(pkg, lib.loc = NULL, fields = NULL)# Defunct in 2.2.0loadURL(url, envir = parent.frame(), quiet = TRUE, ...)delay(x, env = .GlobalEnv)# Defunct in 2.3.0format.char(x, width = NULL, flag = \"-\")# Defunct in 2.4.0La.chol(x)La.chol2inv(x, size = ncol(x))# Defunct in 2.4.0symbol.C(name)symbol.For(name)# Defunct in 2.5.0unix(call, intern = FALSE)# Defunct in 2.8.0gammaCody(x)# Defunct in 2.9.0manglePackageName(pkgName, pkgVersion)# Defunct in 2.13.0.Import(...).ImportFrom(name, ...).Export(...).S3method(generic, class, method)# Defunct in 2.14.0.First.lib(lib, pkg)# Defunct in 2.15.0mem.limits(nsize = NA, vsize = NA).saveRDS(...).readRDS(...)Sys.putenv(...)# Defunct in 3.0.0real(length = 0)as.real(x, ...)is.real(x)# Defunct in 3.1.0.find.package(...).path.package(...)","prefix":"base-defunct","type":"function","description":"The functions or variables listed here are no longer part of R asthey are no longer needed.","leftLabel":"base","rightLabel":"R: Defunct Functions in Package 'base'"},"base-deprecated":{"text":"base-deprecated","snippet":{},"prefix":"base-deprecated","type":"function","description":"These functions are provided for compatibility with older versions ofR only, and may be defunct as soon as the next release.","leftLabel":"base","rightLabel":"R: Deprecated Functions in Package 'base'"},"base-internal":{"text":"base-internal","snippet":".subset(x, ...).subset2(x, ...).getRequiredPackages(file = \"DESCRIPTION\", lib.loc = NULL,                     quietly = FALSE, useImports = FALSE).getRequiredPackages2(pkgInfo, quietly = FALSE, lib.loc = NULL,                      useImports = FALSE)testPlatformEquivalence(built, run).isMethodsDispatchOn(onOff = NULL)sys.load.image(name, quiet)sys.save.image(name).row_names_info(x, type = 1L).set_row_names(n)findPackageEnv(info)lazyLoadDBfetch(key, file, compressed, hook).TAOCP1997init(seed).gt(x, i, j).gtn(x, strictly).primTrace(obj).primUntrace(obj).POSIXct(xx, tz = NULL).POSIXlt(xx, tz = NULL).difftime(xx, units).cache_class(class, extends).popath.mapply(FUN, dots, MoreArgs).detach(pos).maskedMsg(same, pkg, by)","prefix":"base-internal","type":"function","description":"Internal objects in the base package most of which are only user-visiblebecause of the special nature of the base namespace.","leftLabel":"base","rightLabel":"R: Internal Objects in Package 'base'"},"base-package":{"text":"base-package","snippet":{},"prefix":"base-package","type":"function","description":"Base R functions","leftLabel":"base","rightLabel":"R: The R Base Package"},"basename":{"text":"basename","snippet":"basename(path)dirname(path)","prefix":"basename","type":"function","description":"basename removes all of the path up to and including the lastpath separator (if any).","leftLabel":"base","rightLabel":"R: Manipulate File Paths"},"bincode":{"text":"bincode","snippet":".bincode(x, breaks, right = TRUE, include.lowest = FALSE)","prefix":"bincode","type":"function","description":"Bin a numeric vector and return integer codes for the binning.","leftLabel":"base","rightLabel":"R: Bin a Numeric Vector"},"bindenv":{"text":"bindenv","snippet":"lockEnvironment(env, bindings = FALSE)environmentIsLocked(env)lockBinding(sym, env)unlockBinding(sym, env)bindingIsLocked(sym, env)makeActiveBinding(sym, fun, env)bindingIsActive(sym, env)","prefix":"bindenv","type":"function","description":"These functions represent an interface for adjustmentsto environments and bindings within environments.  They allow forlocking environments as well as individual bindings, and for linkinga variable to a function.","leftLabel":"base","rightLabel":"R: Binding and Environment Locking, Active Bindings"},"bitwise":{"text":"bitwise","snippet":"bitwNot(a)bitwAnd(a, b)bitwOr(a, b)bitwXor(a, b)bitwShiftL(a, n)bitwShiftR(a, n)","prefix":"bitwise","type":"function","description":"Logical operations on integer vectors with elements viewed as sets of bits.","leftLabel":"base","rightLabel":"R: Bitwise Logical Operations"},"body":{"text":"body","snippet":"body(fun = sys.function(sys.parent()))body(fun, envir = environment(fun)) <- value","prefix":"body","type":"function","description":"Get or set the body of a function.","leftLabel":"base","rightLabel":"R: Access to and Manipulation of the Body of a Function"},"bquote":{"text":"bquote","snippet":"bquote(expr, where = parent.frame())","prefix":"bquote","type":"function","description":"An analogue of the LISP backquote macro.  bquote quotes itsargument except that terms wrapped in .() are evaluated in thespecified where environment.","leftLabel":"base","rightLabel":"R: Partial substitution in expressions"},"browser":{"text":"browser","snippet":"browser(text = \"\", condition = NULL, expr = TRUE, skipCalls = 0L)","prefix":"browser","type":"function","description":"Interrupt the execution of an expression and allow the inspection ofthe environment where browser was called from.","leftLabel":"base","rightLabel":"R: Environment Browser"},"browserText":{"text":"browserText","snippet":"browserText(n = 1)browserCondition(n = 1)browserSetDebug(n = 1)","prefix":"browserText","type":"function","description":"A call to browser can provide context by supplying either a textargument or a condition argument.  These functions can be used toretrieve either of these arguments.","leftLabel":"base","rightLabel":"R: Functions to Retrieve Values Supplied by Calls to the Browser"},"builtins":{"text":"builtins","snippet":"builtins(internal = FALSE)","prefix":"builtins","type":"function","description":"Return the names of all the built-in objects.  These are fetcheddirectly from the symbol table of the R interpreter.","leftLabel":"base","rightLabel":"R: Returns the Names of All Built-in Objects"},"by":{"text":"by","snippet":"by(data, INDICES, FUN, ..., simplify = TRUE)","prefix":"by","type":"function","description":"Function by is an object-oriented wrapper fortapply applied to data frames.","leftLabel":"base","rightLabel":"R: Apply a Function to a Data Frame Split by Factors"},"c":{"text":"c","snippet":"## S3 Generic functionc(...)## Default S3 method:c(..., recursive = FALSE, use.names = TRUE)","prefix":"c","type":"function","description":"This is a generic function which combines its arguments.","leftLabel":"base","rightLabel":"R: Combine Values into a Vector or List"},"call":{"text":"call","snippet":"call(name, ...)is.call(x)as.call(x)","prefix":"call","type":"function","description":"Create or test for objects of mode \"call\".","leftLabel":"base","rightLabel":"R: Function Calls"},"callCC":{"text":"callCC","snippet":"callCC(fun)","prefix":"callCC","type":"function","description":"A downward-only version of Scheme's call with current continuation.","leftLabel":"base","rightLabel":"R: Call With Current Continuation"},"capabilities":{"text":"capabilities","snippet":"capabilities(what = NULL)","prefix":"capabilities","type":"function","description":"Report on the optional features which have been compiled into thisbuild of R.","leftLabel":"base","rightLabel":"R: Report Capabilities of this Build of R"},"cat":{"text":"cat","snippet":"cat(... , file = \"\", sep = \" \", fill = FALSE, labels = NULL,    append = FALSE)","prefix":"cat","type":"function","description":"Outputs the objects, concatenating the representations.  catperforms much less conversion than print.","leftLabel":"base","rightLabel":"R: Concatenate and Print"},"cbind":{"text":"cbind","snippet":"cbind(..., deparse.level = 1)rbind(..., deparse.level = 1)## S3 method for class 'data.frame'rbind(..., deparse.level = 1, make.row.names = TRUE,      stringsAsFactors = default.stringsAsFactors())","prefix":"cbind","type":"function","description":"Take a sequence of vector, matrix or data-frame arguments and combineby columns or rows, respectively.  These are genericfunctions with methods for other R classes.","leftLabel":"base","rightLabel":"R: Combine R Objects by Rows or Columns"},"char.expand":{"text":"char.expand","snippet":"char.expand(input, target, nomatch = stop(\"no match\"))","prefix":"char.expand","type":"function","description":"Seeks a unique match of its first argument among theelements of its second.  If successful, it returns this element;otherwise, it performs an action specified by the third argument.","leftLabel":"base","rightLabel":"R: Expand a String with Respect to a Target Table"},"character":{"text":"character","snippet":"character(length = 0)as.character(x, ...)is.character(x)","prefix":"character","type":"function","description":"Create or test for objects of type \"character\".","leftLabel":"base","rightLabel":"R: Character Vectors"},"charmatch":{"text":"charmatch","snippet":"charmatch(x, table, nomatch = NA_integer_)","prefix":"charmatch","type":"function","description":"charmatch seeks matches for the elements of its first argumentamong those of its second.","leftLabel":"base","rightLabel":"R: Partial String Matching"},"chartr":{"text":"chartr","snippet":"chartr(old, new, x)tolower(x)toupper(x)casefold(x, upper = FALSE)","prefix":"chartr","type":"function","description":"Translate characters in character vectors, in particular from upper tolower case or vice versa.","leftLabel":"base","rightLabel":"R: Character Translation and Casefolding"},"chkDots":{"text":"chkDots","snippet":"chkDots(..., which.call = -1, allowed = character(0))","prefix":"chkDots","type":"function","description":"Warn about extraneous arguments in the ... of its caller.  Autility to be used e.g., in S3 methods which need a formal ...argument but do not make any use of it.  This helps catching usererrors in calling the function in question (which is the caller ofchkDots().","leftLabel":"base","rightLabel":"R: Warn About Extraneous Arguments in the \"...\" of Its Caller"},"chol":{"text":"chol","snippet":"chol(x, ...)## Default S3 method:chol(x, pivot = FALSE,  LINPACK = FALSE, tol = -1, ...)","prefix":"chol","type":"function","description":"Compute the Choleski factorization of a real symmetricpositive-definite square matrix.","leftLabel":"base","rightLabel":"R: The Choleski Decomposition"},"chol2inv":{"text":"chol2inv","snippet":"chol2inv(x, size = NCOL(x), LINPACK = FALSE)","prefix":"chol2inv","type":"function","description":"Invert a symmetric, positive definite square matrix from its Choleskidecomposition.  Equivalently, compute (X'X)^(-1)from the (R part) of the QR decomposition of X.","leftLabel":"base","rightLabel":"R: Inverse from Choleski (or QR) Decomposition"},"class":{"text":"class","snippet":"class(x)class(x) <- valueunclass(x)inherits(x, what, which = FALSE)oldClass(x)oldClass(x) <- value","prefix":"class","type":"function","description":"R possesses a simple generic function mechanism which can be used foran object-oriented style of programming.  Method dispatch takes placebased on the class of the first argument to the generic function.","leftLabel":"base","rightLabel":"R: Object Classes"},"col":{"text":"col","snippet":"col(x, as.factor = FALSE)","prefix":"col","type":"function","description":"Returns a matrix of integers indicating their column number in amatrix-like object, or a factor of column labels.","leftLabel":"base","rightLabel":"R: Column Indexes"},"colSums":{"text":"colSums","snippet":"colSums (x, na.rm = FALSE, dims = 1)rowSums (x, na.rm = FALSE, dims = 1)colMeans(x, na.rm = FALSE, dims = 1)rowMeans(x, na.rm = FALSE, dims = 1).colSums(x, m, n, na.rm = FALSE).rowSums(x, m, n, na.rm = FALSE).colMeans(x, m, n, na.rm = FALSE).rowMeans(x, m, n, na.rm = FALSE)","prefix":"colSums","type":"function","description":"Form row and column sums and means for numeric arrays (or data frames).","leftLabel":"base","rightLabel":"R: Form Row and Column Sums and Means"},"colnames":{"text":"colnames","snippet":"rownames(x, do.NULL = TRUE, prefix = \"row\")rownames(x) <- valuecolnames(x, do.NULL = TRUE, prefix = \"col\")colnames(x) <- value","prefix":"colnames","type":"function","description":"Retrieve or set the row or column names of a matrix-like object.","leftLabel":"base","rightLabel":"R: Row and Column Names"},"commandArgs":{"text":"commandArgs","snippet":"commandArgs(trailingOnly = FALSE)","prefix":"commandArgs","type":"function","description":"Provides access to a copy of the command line arguments supplied whenthis R session was invoked.","leftLabel":"base","rightLabel":"R: Extract Command Line Arguments"},"comment":{"text":"comment","snippet":"comment(x)comment(x) <- value","prefix":"comment","type":"function","description":"These functions set and query a commentattribute for any R objects.  This is typically useful fordata.frames or model fits.","leftLabel":"base","rightLabel":"R: Query or Set a '\"comment\"' Attribute"},"complex":{"text":"complex","snippet":"complex(length.out = 0, real = numeric(), imaginary = numeric(),        modulus = 1, argument = 0)as.complex(x, ...)is.complex(x)Re(z)Im(z)Mod(z)Arg(z)Conj(z)","prefix":"complex","type":"function","description":"Basic functions which support complex arithmetic in R, in addition tothe arithmetic operators +, -, *, /, and ^.","leftLabel":"base","rightLabel":"R: Complex Numbers and Basic Functionality"},"conditions":{"text":"conditions","snippet":"tryCatch(expr, ..., finally)withCallingHandlers(expr, ...)signalCondition(cond)simpleCondition(message, call = NULL)simpleError    (message, call = NULL)simpleWarning  (message, call = NULL)simpleMessage  (message, call = NULL)## S3 method for class 'condition'as.character(x, ...)## S3 method for class 'error'as.character(x, ...)## S3 method for class 'condition'print(x, ...)## S3 method for class 'restart'print(x, ...)conditionCall(c)## S3 method for class 'condition'conditionCall(c)conditionMessage(c)## S3 method for class 'condition'conditionMessage(c)withRestarts(expr, ...)computeRestarts(cond = NULL)findRestart(name, cond = NULL)invokeRestart(r, ...)invokeRestartInteractively(r)isRestart(x)restartDescription(r)restartFormals(r).signalSimpleWarning(msg, call).handleSimpleError(h, msg, call).tryResumeInterrupt()","prefix":"conditions","type":"function","description":"These functions provide a mechanism for handling unusual conditions,including errors and warnings.","leftLabel":"base","rightLabel":"R: Condition Handling and Recovery"},"conflicts":{"text":"conflicts","snippet":"conflicts(where = search(), detail = FALSE)","prefix":"conflicts","type":"function","description":"conflicts reports on objects that exist with the same name intwo or more places on the search path, usually becausean object in the user's workspace or a package is masking a systemobject of the same name.  This helps discover unintentional masking.","leftLabel":"base","rightLabel":"R: Search for Masked Objects on the Search Path"},"connections":{"text":"connections","snippet":"file(description = \"\", open = \"\", blocking = TRUE,     encoding = getOption(\"encoding\"), raw = FALSE,     method = getOption(\"url.method\", \"default\"))url(description, open = \"\", blocking = TRUE,    encoding = getOption(\"encoding\"),    method = getOption(\"url.method\", \"default\"))gzfile(description, open = \"\", encoding = getOption(\"encoding\"),       compression = 6)bzfile(description, open = \"\", encoding = getOption(\"encoding\"),       compression = 9)xzfile(description, open = \"\", encoding = getOption(\"encoding\"),       compression = 6)unz(description, filename, open = \"\", encoding = getOption(\"encoding\"))pipe(description, open = \"\", encoding = getOption(\"encoding\"))fifo(description, open = \"\", blocking = FALSE,     encoding = getOption(\"encoding\"))socketConnection(host = \"localhost\", port, server = FALSE,                 blocking = FALSE, open = \"a+\",                 encoding = getOption(\"encoding\"),                 timeout = getOption(\"timeout\"))open(con, ...)## S3 method for class 'connection'open(con, open = \"r\", blocking = TRUE, ...)close(con, ...)## S3 method for class 'connection'close(con, type = \"rw\", ...)flush(con)isOpen(con, rw = \"\")isIncomplete(con)","prefix":"connections","type":"function","description":"Functions to create, open and close connections, i.e.,“generalized files”, such as possibly compressed files, URLs,pipes, etc.","leftLabel":"base","rightLabel":"R: Functions to Manipulate Connections (Files, URLs, ...)"},"contributors":{"text":"contributors","snippet":"contributors()","prefix":"contributors","type":"function","description":"The R Who-is-who, describing who made significant contributions tothe development of R.","leftLabel":"base","rightLabel":"R: R Project Contributors"},"copyright":{"text":"copyright","snippet":{},"prefix":"copyright","type":"function","description":"R is released under the ‘GNU Public License’: seelicense for details.  The license describes your rightto use R.  Copyright is concerned with ownership of intellectualrights, and some of the software used has conditions that thecopyright must be explicitly stated: see the ‘Details’ section.  Weare grateful to these people and other contributors (seecontributors) for the ability to use their work.","leftLabel":"base","rightLabel":"R: Copyrights of Files Used to Build R"},"crossprod":{"text":"crossprod","snippet":"crossprod(x, y = NULL)tcrossprod(x, y = NULL)","prefix":"crossprod","type":"function","description":"Given matrices x and y as arguments, return a matrixcross-product.  This is formally equivalent to (but usually slightlyfaster than) the call t(x) %*% y (crossprod) orx %*% t(y) (tcrossprod).","leftLabel":"base","rightLabel":"R: Matrix Crossproduct"},"cumsum":{"text":"cumsum","snippet":"cumsum(x)cumprod(x)cummax(x)cummin(x)","prefix":"cumsum","type":"function","description":"Returns a vector whose elements are the cumulative sums, products,minima or maxima of the elements of the argument.","leftLabel":"base","rightLabel":"R: Cumulative Sums, Products, and Extremes"},"curlGetHeaders":{"text":"curlGetHeaders","snippet":"curlGetHeaders(url, redirect = TRUE, verify = TRUE)","prefix":"curlGetHeaders","type":"function","description":"Retrieve the headers for a URL for a supported protocol such ashttp://, ftp://, https:// and ftps://.An optional function not supported on all platforms.","leftLabel":"base","rightLabel":"R: Retrieve Headers from URLs"},"cut.POSIXt":{"text":"cut.POSIXt","snippet":"## S3 method for class 'POSIXt'cut(x, breaks, labels = NULL, start.on.monday = TRUE,    right = FALSE, ...)## S3 method for class 'Date'cut(x, breaks, labels = NULL, start.on.monday = TRUE,    right = FALSE, ...)","prefix":"cut.POSIXt","type":"function","description":"Method for cut applied to date-time objects.","leftLabel":"base","rightLabel":"R: Convert a Date or Date-Time Object to a Factor"},"cut":{"text":"cut","snippet":"cut(x, ...)## Default S3 method:cut(x, breaks, labels = NULL,    include.lowest = FALSE, right = TRUE, dig.lab = 3,    ordered_result = FALSE, ...)","prefix":"cut","type":"function","description":"cut divides the range of x into intervalsand codes the values in x according to whichinterval they fall.  The leftmost interval corresponds to level one,the next leftmost to level two and so on.","leftLabel":"base","rightLabel":"R: Convert Numeric to Factor"},"data.class":{"text":"data.class","snippet":"data.class(x)","prefix":"data.class","type":"function","description":"Determine the class of an arbitrary R object.","leftLabel":"base","rightLabel":"R: Object Classes"},"data.frame":{"text":"data.frame","snippet":"data.frame(..., row.names = NULL, check.rows = FALSE,           check.names = TRUE, fix.empty.names = TRUE,           stringsAsFactors = default.stringsAsFactors())default.stringsAsFactors()","prefix":"data.frame","type":"function","description":"The function data.frame() creates data frames, tightly coupledcollections of variables which share many of the properties ofmatrices and of lists, used as the fundamental data structure by mostof R's modeling software.","leftLabel":"base","rightLabel":"R: Data Frames"},"data.matrix":{"text":"data.matrix","snippet":"data.matrix(frame, rownames.force = NA)","prefix":"data.matrix","type":"function","description":"Return the matrix obtained by converting all the variables in a dataframe to numeric mode and then binding them together as the columns ofa matrix.  Factors and ordered factors are replaced by their internalcodes.","leftLabel":"base","rightLabel":"R: Convert a Data Frame to a Numeric Matrix"},"dataframeHelpers":{"text":"dataframeHelpers","snippet":"xpdrows.data.frame(x, old.rows, new.rows)","prefix":"dataframeHelpers","type":"function","description":"Internal auxiliary functions for use with data frames.","leftLabel":"base","rightLabel":"R: Data Frame Auxiliary Functions"},"date":{"text":"date","snippet":"date()","prefix":"date","type":"function","description":"Returns a character string of the current system date and time.","leftLabel":"base","rightLabel":"R: System Date and Time"},"dcf":{"text":"dcf","snippet":"read.dcf(file, fields = NULL, all = FALSE, keep.white = NULL)write.dcf(x, file = \"\", append = FALSE,          indent = 0.1 * getOption(\"width\"),          width = 0.9 * getOption(\"width\"),          keep.white = NULL)","prefix":"dcf","type":"function","description":"Reads or writes an R object from/to a file in Debian Control Fileformat.","leftLabel":"base","rightLabel":"R: Read and Write Data in DCF Format"},"debug":{"text":"debug","snippet":"debug(fun, text = \"\", condition = NULL, signature = NULL)debugonce(fun, text = \"\", condition = NULL, signature = NULL)undebug(fun, signature = NULL)isdebugged(fun, signature = NULL)debuggingState(on = NULL)","prefix":"debug","type":"function","description":"Set, unset or query the debugging flag on a function.The text and condition arguments are the same as thosethat can be supplied via a call to browser. They can be retrievedby the user once the browser has been entered, and provide a mechanism toallow users to identify which breakpoint has been activated.","leftLabel":"base","rightLabel":"R: Debug a Function"},"delayedAssign":{"text":"delayedAssign","snippet":"delayedAssign(x, value, eval.env = parent.frame(1),              assign.env = parent.frame(1))","prefix":"delayedAssign","type":"function","description":"delayedAssign creates a promise to evaluate the givenexpression if its value is requested.  This provides direct accessto the lazy evaluation mechanism used by R for the evaluationof (interpreted) functions.","leftLabel":"base","rightLabel":"R: Delay Evaluation"},"deparse":{"text":"deparse","snippet":"deparse(expr, width.cutoff = 60L,        backtick = mode(expr) %in%            c(\"call\", \"expression\", \"(\", \"function\"),        control = c(\"keepInteger\", \"showAttributes\", \"keepNA\"),        nlines = -1L)","prefix":"deparse","type":"function","description":"Turn unevaluated expressions into character strings.","leftLabel":"base","rightLabel":"R: Expression Deparsing"},"deparseOpts":{"text":"deparseOpts","snippet":".deparseOpts(control)","prefix":"deparseOpts","type":"function","description":"Process the deparsing options for deparse, dput anddump.","leftLabel":"base","rightLabel":"R: Options for Expression Deparsing"},"det":{"text":"det","snippet":"det(x, ...)determinant(x, logarithm = TRUE, ...)","prefix":"det","type":"function","description":"det calculates the determinant of a matrix.  determinantis a generic function that returns separately the modulus of the determinant,optionally on the logarithm scale, and the sign of the determinant.","leftLabel":"base","rightLabel":"R: Calculate the Determinant of a Matrix"},"detach":{"text":"detach","snippet":"detach(name, pos = 2L, unload = FALSE, character.only = FALSE,       force = FALSE)","prefix":"detach","type":"function","description":"Detach a database, i.e., remove it from the search()path of available R objects.  Usually this is either adata.frame which has been attached or apackage which was attached by library.","leftLabel":"base","rightLabel":"R: Detach Objects from the Search Path"},"dev.1":{"text":"dev","snippet":{},"prefix":"dev","type":"function","description":"A pairlist of the names of open graphics devices is stored in.Devices. The name of the active device (seedev.cur) is stored in .Device.  Both are symbolsand so appear in the base namespace.","leftLabel":"base","rightLabel":"R: Lists of Open/Active Graphics Devices"},"diag":{"text":"diag","snippet":"diag(x = 1, nrow, ncol)diag(x) <- value","prefix":"diag","type":"function","description":"Extract or replace the diagonal of a matrix,or construct a diagonal matrix.","leftLabel":"base","rightLabel":"R: Matrix Diagonals"},"diff":{"text":"diff","snippet":"diff(x, ...)## Default S3 method:diff(x, lag = 1, differences = 1, ...)## S3 method for class 'POSIXt'diff(x, lag = 1, differences = 1, ...)## S3 method for class 'Date'diff(x, lag = 1, differences = 1, ...)","prefix":"diff","type":"function","description":"Returns suitably lagged and iterated differences.","leftLabel":"base","rightLabel":"R: Lagged Differences"},"difftime":{"text":"difftime","snippet":"time1 - time2difftime(time1, time2, tz,         units = c(\"auto\", \"secs\", \"mins\", \"hours\",                   \"days\", \"weeks\"))as.difftime(tim, format = \"%X\", units = \"auto\")## S3 method for class 'difftime'format(x, ...)## S3 method for class 'difftime'units(x)## S3 replacement method for class 'difftime'units(x) <- value## S3 method for class 'difftime'as.double(x, units = \"auto\", ...)## Group methods, notably for round(), signif(), floor(),## ceiling(), trunc(), abs(); called directly, *not* as Math():## S3 method for class 'difftime'Math(x, ...)","prefix":"difftime","type":"function","description":"Time intervals creation, printing, and some arithmetic.  Theprint() method calls these “time differences”.","leftLabel":"base","rightLabel":"R: Time Intervals / Differences"},"dim":{"text":"dim","snippet":"dim(x)dim(x) <- value","prefix":"dim","type":"function","description":"Retrieve or set the dimension of an object.","leftLabel":"base","rightLabel":"R: Dimensions of an Object"},"dimnames":{"text":"dimnames","snippet":"dimnames(x)dimnames(x) <- valueprovideDimnames(x, sep = \"\", base = list(LETTERS), unique = TRUE)","prefix":"dimnames","type":"function","description":"Retrieve or set the dimnames of an object.","leftLabel":"base","rightLabel":"R: Dimnames of an Object"},"do.call":{"text":"do.call","snippet":"do.call(what, args, quote = FALSE, envir = parent.frame())","prefix":"do.call","type":"function","description":"do.call constructs and executes a function call from a name ora function and a list of arguments to be passed to it.","leftLabel":"base","rightLabel":"R: Execute a Function Call"},"dontCheck":{"text":"dontCheck","snippet":"dontCheck(x)","prefix":"dontCheck","type":"function","description":"The dontCheck function is the same as identity, but is interpreted by R CMD check code analysis as a directiveto suppress checking of x.  Currently this is only used bycheckFF(registration = TRUE)when checking the .NAME argument of foreign function calls.","leftLabel":"base","rightLabel":"R: Identity Function to Suppress Checking"},"double":{"text":"double","snippet":"double(length = 0)as.double(x, ...)is.double(x)single(length = 0)as.single(x, ...)","prefix":"double","type":"function","description":"Create, coerce to or test for a double-precision vector.","leftLabel":"base","rightLabel":"R: Double-Precision Vectors"},"dput":{"text":"dput","snippet":"dput(x, file = \"\",     control = c(\"keepNA\", \"keepInteger\", \"showAttributes\"))dget(file, keep.source = FALSE)","prefix":"dput","type":"function","description":"Writes an ASCII text representation of an R object to a fileor connection, or uses one to recreate the object.","leftLabel":"base","rightLabel":"R: Write an Object to a File or Recreate it"},"drop":{"text":"drop","snippet":"drop(x)","prefix":"drop","type":"function","description":"Delete the dimensions of an array which have only one level.","leftLabel":"base","rightLabel":"R: Drop Redundant Extent Information"},"droplevels":{"text":"droplevels","snippet":"## S3 method for class 'factor'droplevels(x, exclude = if(anyNA(levels(x))) NULL else NA, ...)## S3 method for class 'data.frame'droplevels(x, except, exclude, ...)","prefix":"droplevels","type":"function","description":"The function droplevels is used to drop unused levels from afactor or, more commonly, from factors in a data frame.","leftLabel":"base","rightLabel":"R: Drop Unused Levels from Factors"},"dump":{"text":"dump","snippet":"dump(list, file = \"dumpdata.R\", append = FALSE,     control = \"all\", envir = parent.frame(), evaluate = TRUE)","prefix":"dump","type":"function","description":"This function takes a vector of names of R objects and producestext representations of the objects on a file or connection.A dump file can usually be sourced into anotherR session.","leftLabel":"base","rightLabel":"R: Text Representations of R Objects"},"duplicated":{"text":"duplicated","snippet":"duplicated(x, incomparables = FALSE, ...)## Default S3 method:duplicated(x, incomparables = FALSE,           fromLast = FALSE, nmax = NA, ...)## S3 method for class 'array'duplicated(x, incomparables = FALSE, MARGIN = 1,           fromLast = FALSE, ...)anyDuplicated(x, incomparables = FALSE, ...)## Default S3 method:anyDuplicated(x, incomparables = FALSE,           fromLast = FALSE, ...)## S3 method for class 'array'anyDuplicated(x, incomparables = FALSE,           MARGIN = 1, fromLast = FALSE, ...)","prefix":"duplicated","type":"function","description":"duplicated() determines which elements of a vector or dataframe are duplicatesof elements with smaller subscripts, and returns a logical vectorindicating which elements (rows) are duplicates.","leftLabel":"base","rightLabel":"R: Determine Duplicate Elements"},"dynload":{"text":"dynload","snippet":"dyn.load(x, local = TRUE, now = TRUE, ...)dyn.unload(x)is.loaded(symbol, PACKAGE = \"\", type = \"\")","prefix":"dynload","type":"function","description":"Load or unload DLLs (also known as shared objects), and test whether aC function or Fortran subroutine is available.","leftLabel":"base","rightLabel":"R: Foreign Function Interface"},"eapply":{"text":"eapply","snippet":"eapply(env, FUN, ..., all.names = FALSE, USE.NAMES = TRUE)","prefix":"eapply","type":"function","description":"eapply applies FUN to the named values from anenvironment and returns the results as a list.  The usercan request that all named objects are used (normally names that beginwith a dot are not).  The output is not sorted and no enclosingenvironments are searched.","leftLabel":"base","rightLabel":"R: Apply a Function Over Values in an Environment"},"eigen":{"text":"eigen","snippet":"eigen(x, symmetric, only.values = FALSE, EISPACK = FALSE)","prefix":"eigen","type":"function","description":"Computes eigenvalues and eigenvectors of numeric (double, integer,logical) or complex matrices.","leftLabel":"base","rightLabel":"R: Spectral Decomposition of a Matrix"},"encodeString":{"text":"encodeString","snippet":"encodeString(x, width = 0, quote = \"\", na.encode = TRUE,             justify = c(\"left\", \"right\", \"centre\", \"none\"))","prefix":"encodeString","type":"function","description":"encodeString escapes the strings in a character vector in thesame way print.default does, and optionally fits the encodedstrings within a field width.","leftLabel":"base","rightLabel":"R: Encode Character Vector as for Printing"},"environment":{"text":"environment","snippet":"environment(fun = NULL)environment(fun) <- valueis.environment(x).GlobalEnvglobalenv().BaseNamespaceEnvemptyenv()baseenv()new.env(hash = TRUE, parent = parent.frame(), size = 29L)parent.env(env)parent.env(env) <- valueenvironmentName(env)env.profile(env)","prefix":"environment","type":"function","description":"Get, set, test for and create environments.","leftLabel":"base","rightLabel":"R: Environment Access"},"eval":{"text":"eval","snippet":"eval(expr, envir = parent.frame(),           enclos = if(is.list(envir) || is.pairlist(envir))                       parent.frame() else baseenv())evalq(expr, envir, enclos)eval.parent(expr, n = 1)local(expr, envir = new.env())","prefix":"eval","type":"function","description":"Evaluate an R expression in a specified environment.","leftLabel":"base","rightLabel":"R: Evaluate an (Unevaluated) Expression"},"exists":{"text":"exists","snippet":"exists(x, where = -1, envir = , frame, mode = \"any\",       inherits = TRUE)get0(x, envir = pos.to.env(-1L), mode = \"any\", inherits = TRUE,     ifnotfound = NULL)","prefix":"exists","type":"function","description":"Look for an R object of the given name and possibly return it","leftLabel":"base","rightLabel":"R: Is an Object Defined?"},"expand.grid":{"text":"expand.grid","snippet":"expand.grid(..., KEEP.OUT.ATTRS = TRUE, stringsAsFactors = TRUE)","prefix":"expand.grid","type":"function","description":"Create a data frame from all combinations of the supplied vectors orfactors.  See the description of the return value for precise details ofthe way this is done.","leftLabel":"base","rightLabel":"R: Create a Data Frame from All Combinations of Factor Variables"},"expression":{"text":"expression","snippet":"expression(...)is.expression(x)as.expression(x, ...)","prefix":"expression","type":"function","description":"Creates or tests for objects of mode \"expression\".","leftLabel":"base","rightLabel":"R: Unevaluated Expressions"},"extSoftVersion":{"text":"extSoftVersion","snippet":"extSoftVersion()","prefix":"extSoftVersion","type":"function","description":"Report versions of (external) third-party software used.","leftLabel":"base","rightLabel":"R: Report Versions of Third-Party Software"},"factor":{"text":"factor","snippet":"factor(x = character(), levels, labels = levels,       exclude = NA, ordered = is.ordered(x), nmax = NA)ordered(x, ...)is.factor(x)is.ordered(x)as.factor(x)as.ordered(x)addNA(x, ifany = FALSE)","prefix":"factor","type":"function","description":"The function factor is used to encode a vector as a factor (theterms ‘category’ and ‘enumerated type’ are also used forfactors).  If argument ordered is TRUE, the factorlevels are assumed to be ordered.  For compatibility with S there isalso a function ordered.","leftLabel":"base","rightLabel":"R: Factors"},"file.access":{"text":"file.access","snippet":"file.access(names, mode = 0)","prefix":"file.access","type":"function","description":"Utility function to access information about files on the user'sfile systems.","leftLabel":"base","rightLabel":"R: Ascertain File Accessibility"},"file.choose":{"text":"file.choose","snippet":"file.choose(new = FALSE)","prefix":"file.choose","type":"function","description":"Choose a file interactively.","leftLabel":"base","rightLabel":"R: Choose a File Interactively"},"file.info":{"text":"file.info","snippet":"file.info(..., extra_cols = TRUE)file.mode(...)file.mtime(...)file.size(...)","prefix":"file.info","type":"function","description":"Utility function to extract information about files on the user'sfile systems.","leftLabel":"base","rightLabel":"R: Extract File Information"},"file.path":{"text":"file.path","snippet":"file.path(..., fsep = .Platform$file.sep)","prefix":"file.path","type":"function","description":"Construct the path to a file from components in a platform-independentway.","leftLabel":"base","rightLabel":"R: Construct Path to File"},"file.show":{"text":"file.show","snippet":"file.show(..., header = rep(\"\", nfiles),          title = \"R Information\",          delete.file = FALSE, pager = getOption(\"pager\"),          encoding = \"\")","prefix":"file.show","type":"function","description":"Display one or more (plain) text files, in a platformspecific way, typically via a ‘pager’.","leftLabel":"base","rightLabel":"R: Display One or More Text Files"},"files":{"text":"files","snippet":"file.create(..., showWarnings = TRUE)file.exists(...)file.remove(...)file.rename(from, to)file.append(file1, file2)file.copy(from, to, overwrite = recursive, recursive = FALSE,          copy.mode = TRUE, copy.date = FALSE)file.symlink(from, to)file.link(from, to)","prefix":"files","type":"function","description":"These functions provide a low-level interface to the computer'sfile system.","leftLabel":"base","rightLabel":"R: File Manipulation"},"files2":{"text":"files2","snippet":"dir.exists(paths)dir.create(path, showWarnings = TRUE, recursive = FALSE, mode = \"0777\")Sys.chmod(paths, mode = \"0777\", use_umask = TRUE)Sys.umask(mode = NA)","prefix":"files2","type":"function","description":"These functions provide a low-level interface to the computer'sfile system.","leftLabel":"base","rightLabel":"R: Manipulaton of Directories and File Permissions"},"find.package":{"text":"find.package","snippet":"find.package(package, lib.loc = NULL, quiet = FALSE,             verbose = getOption(\"verbose\"))path.package(package, quiet = FALSE)","prefix":"find.package","type":"function","description":"Find the paths to one or more packages.","leftLabel":"base","rightLabel":"R: Find Packages"},"findInterval":{"text":"findInterval","snippet":"findInterval(x, vec, rightmost.closed = FALSE, all.inside = FALSE,             left.open = FALSE)","prefix":"findInterval","type":"function","description":"Given a vector of non-decreasing breakpoints in vec, find theinterval containing each element of x; i.e., ifi <- findInterval(x,v), for each index j in xv[i[j]] ≤ x[j] < v[i[j] + 1]where v[0] := - Inf,v[N+1] := + Inf, and N <- length(v).At the two boundaries, the returned index may differ by 1, dependingon the optional arguments rightmost.closed and all.inside.","leftLabel":"base","rightLabel":"R: Find Interval Numbers or Indices"},"force":{"text":"force","snippet":"force(x)","prefix":"force","type":"function","description":"Forces the evaluation of a function argument.","leftLabel":"base","rightLabel":"R: Force Evaluation of an Argument"},"forceAndCall":{"text":"forceAndCall","snippet":"forceAndCall(n, FUN, ...)","prefix":"forceAndCall","type":"function","description":"Call a function with a specified number of leading arguments forcedbefore the call if the function is a closure.","leftLabel":"base","rightLabel":"R: Call a function with Some Arguments Forced"},"formals":{"text":"formals","snippet":"formals(fun = sys.function(sys.parent()))formals(fun, envir = environment(fun)) <- value","prefix":"formals","type":"function","description":"Get or set the formal arguments of a function.","leftLabel":"base","rightLabel":"R: Access to and Manipulation of the Formal Arguments"},"format.1":{"text":"format","snippet":"format(x, ...)## Default S3 method:format(x, trim = FALSE, digits = NULL, nsmall = 0L,       justify = c(\"left\", \"right\", \"centre\", \"none\"),       width = NULL, na.encode = TRUE, scientific = NA,       big.mark   = \"\",   big.interval = 3L,       small.mark = \"\", small.interval = 5L,       decimal.mark = getOption(\"OutDec\"),       zero.print = NULL, drop0trailing = FALSE, ...)## S3 method for class 'data.frame'format(x, ..., justify = \"none\")## S3 method for class 'factor'format(x, ...)## S3 method for class 'AsIs'format(x, width = 12, ...)","prefix":"format","type":"function","description":"Format an R object for pretty printing.","leftLabel":"base","rightLabel":"R: Encode in a Common Format"},"format.info":{"text":"format.info","snippet":"format.info(x, digits = NULL, nsmall = 0)","prefix":"format.info","type":"function","description":"Information is returned on how format(x, digits, nsmall)would be formatted.","leftLabel":"base","rightLabel":"R: format(.) Information"},"format.pval":{"text":"format.pval","snippet":"format.pval(pv, digits = max(1, getOption(\"digits\") - 2),            eps = .Machine$double.eps, na.form = \"NA\", ...)","prefix":"format.pval","type":"function","description":"format.pval is intended for formatting p-values.","leftLabel":"base","rightLabel":"R: Format P Values"},"formatDL":{"text":"formatDL","snippet":"formatDL(x, y, style = c(\"table\", \"list\"),         width = 0.9 * getOption(\"width\"), indent = NULL)","prefix":"formatDL","type":"function","description":"Format vectors of items and their descriptions as 2-columntables or LaTeX-style description lists.","leftLabel":"base","rightLabel":"R: Format Description Lists"},"formatc":{"text":"formatc","snippet":"formatC(x, digits = NULL, width = NULL,        format = NULL, flag = \"\", mode = NULL,        big.mark = \"\", big.interval = 3L,        small.mark = \"\", small.interval = 5L,        decimal.mark = getOption(\"OutDec\"),        preserve.width = \"individual\", zero.print = NULL,        drop0trailing = FALSE)prettyNum(x, big.mark = \"\",   big.interval = 3L,          small.mark  = \"\", small.interval = 5L,          decimal.mark = getOption(\"OutDec\"), input.d.mark = decimal.mark,          preserve.width = c(\"common\", \"individual\", \"none\"),          zero.print = NULL, drop0trailing = FALSE, is.cmplx = NA,          ...).format.zeros(x, zero.print, nx = suppressWarnings(as.numeric(x)))","prefix":"formatc","type":"function","description":"Formatting numbers individually and flexibly, formatC() usingC style format specifications.","leftLabel":"base","rightLabel":"R: Formatting Using C-style Formats"},"function":{"text":"function","snippet":"function( arglist ) exprreturn(value)","prefix":"function","type":"function","description":"These functions provide the base mechanisms for definingnew functions in the R language.","leftLabel":"base","rightLabel":"R: Function Definition"},"funprog":{"text":"funprog","snippet":"Reduce(f, x, init, right = FALSE, accumulate = FALSE)Filter(f, x)Find(f, x, right = FALSE, nomatch = NULL)Map(f, ...)Negate(f)Position(f, x, right = FALSE, nomatch = NA_integer_)","prefix":"funprog","type":"function","description":"Reduce uses a binary function to successively combine theelements of a given vector and a possibly given initial value.Filter extracts the elements of a vector for which a predicate(logical) function gives true.  Find and Position givethe first or last such element and its position in the vector,respectively.  Map applies a function to the correspondingelements of given vectors.  Negate creates the negation of agiven function.","leftLabel":"base","rightLabel":"R: Common Higher-Order Functions in Functional Programming..."},"gc":{"text":"gc","snippet":"gc(verbose = getOption(\"verbose\"), reset = FALSE)gcinfo(verbose)","prefix":"gc","type":"function","description":"A call of gc causes a garbage collection to take place.gcinfo sets a flag so thatautomatic collection is either silent (verbose = FALSE) orprints memory usage statistics (verbose = TRUE).","leftLabel":"base","rightLabel":"R: Garbage Collection"},"gc.time":{"text":"gc.time","snippet":"gc.time(on = TRUE)","prefix":"gc.time","type":"function","description":"This function reports the time spent in garbage collection so far inthe R session while GC timing was enabled.","leftLabel":"base","rightLabel":"R: Report Time Spent in Garbage Collection"},"gctorture":{"text":"gctorture","snippet":"gctorture(on = TRUE)gctorture2(step, wait = step, inhibit_release = FALSE)","prefix":"gctorture","type":"function","description":"Provokes garbage collection on (nearly) every memory allocation.Intended to ferret out memory protection bugs.  Also makes R runvery slowly, unfortunately.","leftLabel":"base","rightLabel":"R: Torture Garbage Collector"},"get":{"text":"get","snippet":"get(x, pos = -1, envir = as.environment(pos), mode = \"any\",    inherits = TRUE)mget(x, envir = as.environment(-1), mode = \"any\", ifnotfound,     inherits = FALSE)dynGet(x, ifnotfound = , minframe = 1L, inherits = FALSE)","prefix":"get","type":"function","description":"Search by name for an object (get) or zero or more objects(mget).","leftLabel":"base","rightLabel":"R: Return the Value of a Named Object"},"getCallingDLL":{"text":"getCallingDLL","snippet":"getCallingDLL(f = sys.function(-1), doStop = FALSE)getCallingDLLe(e)","prefix":"getCallingDLL","type":"function","description":"This is an internal function that is called from R's C code todetermine the enclosing namespace of a.C/.Call/.Fortran/.External call which hasno PACKAGE argument. If the call has been made from a functionwithin a namespace, then we can find the DLL associated with thatnamespace.  The purpose of this is to avoid having to use thePACKAGE argument in these native calls and so better supportversions of packages.","leftLabel":"base","rightLabel":"R: Compute DLL for Native Interface Call"},"getDLLRegisteredRoutines":{"text":"getDLLRegisteredRoutines","snippet":"getDLLRegisteredRoutines(dll, addNames = TRUE)","prefix":"getDLLRegisteredRoutines","type":"function","description":"This function allows us to query the set of routinesin a DLL that are registered with R to enhancedynamic lookup, error handling when calling native routines,and potentially security in the future.This function provides a description of each of theregistered routines in the DLL for the different interfaces,i.e. .C, .Call, .Fortranand .External.","leftLabel":"base","rightLabel":"R: Reflectance Information for C/Fortran routines in a DLL"},"getLoadedDLLs":{"text":"getLoadedDLLs","snippet":"getLoadedDLLs()","prefix":"getLoadedDLLs","type":"function","description":"This function provides a way to get a list of all the DLLs (seedyn.load) that are currently loaded in the R session.","leftLabel":"base","rightLabel":"R: Get DLLs Loaded in Current Session"},"getNativeSymbolInfo":{"text":"getNativeSymbolInfo","snippet":"getNativeSymbolInfo(name, PACKAGE, unlist = TRUE,                    withRegistrationInfo = FALSE)","prefix":"getNativeSymbolInfo","type":"function","description":"This finds and returns a description of one or more dynamically loadedor ‘exported’ built-in native symbols.  For each name, itreturns information about the name of the symbol, the library in whichit is located and, if available, the number of arguments it expectsand by which interface it should be called (i.e .Call,.C, .Fortran, or.External). Additionally, it returns the address of thesymbol and this can be passed to other C routines.  Specifically, thisprovides a way to explicitly share symbols between differentdynamically loaded package libraries.  Also, it provides a way toquery where symbols were resolved, and aids diagnosing strangebehavior associated with dynamic resolution.","leftLabel":"base","rightLabel":"R: Obtain a Description of one or more Native (C/Fortran)..."},"gettext":{"text":"gettext","snippet":"gettext(..., domain = NULL)ngettext(n, msg1, msg2, domain = NULL)bindtextdomain(domain, dirname = NULL)","prefix":"gettext","type":"function","description":"If Native Language Support was enabled in this build of R, attempt totranslate character vectors or set where the translations are to be found.","leftLabel":"base","rightLabel":"R: Translate Text Messages"},"getwd":{"text":"getwd","snippet":"getwd()setwd(dir)","prefix":"getwd","type":"function","description":"getwd returns an absolute filepath representing the currentworking directory of the R process; setwd(dir) is used to setthe working directory to dir.","leftLabel":"base","rightLabel":"R: Get or Set Working Directory"},"gl":{"text":"gl","snippet":"gl(n, k, length = n*k, labels = seq_len(n), ordered = FALSE)","prefix":"gl","type":"function","description":"Generate factors by specifying the pattern of their levels.","leftLabel":"base","rightLabel":"R: Generate Factor Levels"},"grep":{"text":"grep","snippet":"grep(pattern, x, ignore.case = FALSE, perl = FALSE, value = FALSE,     fixed = FALSE, useBytes = FALSE, invert = FALSE)grepl(pattern, x, ignore.case = FALSE, perl = FALSE,      fixed = FALSE, useBytes = FALSE)sub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE,    fixed = FALSE, useBytes = FALSE)gsub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE,     fixed = FALSE, useBytes = FALSE)regexpr(pattern, text, ignore.case = FALSE, perl = FALSE,        fixed = FALSE, useBytes = FALSE)gregexpr(pattern, text, ignore.case = FALSE, perl = FALSE,         fixed = FALSE, useBytes = FALSE)regexec(pattern, text, ignore.case = FALSE, perl = FALSE,        fixed = FALSE, useBytes = FALSE)","prefix":"grep","type":"function","description":"grep, grepl, regexpr, gregexpr andregexec search for matches to argument pattern withineach element of a character vector: they differ in the format of andamount of detail in the results.","leftLabel":"base","rightLabel":"R: Pattern Matching and Replacement"},"grepRaw":{"text":"grepRaw","snippet":"grepRaw(pattern, x, offset = 1L, ignore.case = FALSE,        value = FALSE, fixed = FALSE, all = FALSE, invert = FALSE)","prefix":"grepRaw","type":"function","description":"grepRaw searches for substring pattern matches within araw vector x.","leftLabel":"base","rightLabel":"R: Pattern Matching for Raw Vectors"},"groupGeneric":{"text":"groupGeneric","snippet":"## S3 methods for group generics have prototypes:Math(x, \\dots)Ops(e1, e2)Complex(z)Summary(\\dots, na.rm = FALSE)","prefix":"groupGeneric","type":"function","description":"Group generic methods can be defined for four pre-specified groups offunctions, Math, Ops, Summary and Complex.(There are no objects of these names in base R, but there are in themethods package.)","leftLabel":"base","rightLabel":"R: S3 Group Generic Functions"},"grouping":{"text":"grouping","snippet":"grouping(...)","prefix":"grouping","type":"function","description":"grouping returns a permutation which rearranges its firstargument such that identical values are adjacent to each other.  Alsoreturned as attributes are the group-wise partitioning and the maximumgroup size.","leftLabel":"base","rightLabel":"R: Grouping Permutation"},"gzcon":{"text":"gzcon","snippet":"gzcon(con, level = 6, allowNonCompressed = TRUE, text = FALSE)","prefix":"gzcon","type":"function","description":"gzcon provides a modified connection that wraps an existingconnection, and decompresses reads or compresses writes through thatconnection.  Standard gzip headers are assumed.","leftLabel":"base","rightLabel":"R: (De)compress I/O Through Connections"},"hexmode":{"text":"hexmode","snippet":"as.hexmode(x)## S3 method for class 'hexmode'as.character(x, ...)## S3 method for class 'hexmode'format(x, width = NULL, upper.case = FALSE, ...)## S3 method for class 'hexmode'print(x, ...)","prefix":"hexmode","type":"function","description":"Convert or print integers in hexadecimal format, with as many digitsas are needed to display the largest, using leading zeroes asnecessary.","leftLabel":"base","rightLabel":"R: Display Numbers in Hexadecimal"},"iconv":{"text":"iconv","snippet":"iconv(x, from = \"\", to = \"\", sub = NA, mark = TRUE, toRaw = FALSE)iconvlist()","prefix":"iconv","type":"function","description":"This uses system facilities to convert a character vector betweenencodings: the ‘i’ stands for ‘internationalization’.","leftLabel":"base","rightLabel":"R: Convert Character Vector between Encodings"},"icuSetCollate":{"text":"icuSetCollate","snippet":"icuSetCollate(...)icuGetCollate(type = c(\"actual\", \"valid\"))","prefix":"icuSetCollate","type":"function","description":"Controls the way collation is done by ICU (an optional part of the Rbuild).","leftLabel":"base","rightLabel":"R: Setup Collation by ICU"},"identical":{"text":"identical","snippet":"identical(x, y, num.eq = TRUE, single.NA = TRUE, attrib.as.set = TRUE,          ignore.bytecode = TRUE, ignore.environment = FALSE,          ignore.srcref = TRUE)","prefix":"identical","type":"function","description":"The safe and reliable way to test two objects for beingexactly equal.  It returns TRUE in this case,FALSE in every other case.","leftLabel":"base","rightLabel":"R: Test Objects for Exact Equality"},"identity":{"text":"identity","snippet":"identity(x)","prefix":"identity","type":"function","description":"A trivial identity function returning its argument.","leftLabel":"base","rightLabel":"R: Identity Function"},"ifelse":{"text":"ifelse","snippet":"ifelse(test, yes, no)","prefix":"ifelse","type":"function","description":"ifelse returns a value with the same shape astest which is filled with elements selectedfrom either yes or nodepending on whether the element of testis TRUE or FALSE.","leftLabel":"base","rightLabel":"R: Conditional Element Selection"},"integer":{"text":"integer","snippet":"integer(length = 0)as.integer(x, ...)is.integer(x)","prefix":"integer","type":"function","description":"Creates or tests for objects of type \"integer\".","leftLabel":"base","rightLabel":"R: Integer Vectors"},"interaction":{"text":"interaction","snippet":"interaction(..., drop = FALSE, sep = \".\", lex.order = FALSE)","prefix":"interaction","type":"function","description":"interaction computes a factor which represents the interactionof the given factors.  The result of interaction is always unordered.","leftLabel":"base","rightLabel":"R: Compute Factor Interactions"},"interactive":{"text":"interactive","snippet":"interactive()","prefix":"interactive","type":"function","description":"Return TRUE when R is being used interactively andFALSE otherwise.","leftLabel":"base","rightLabel":"R: Is R Running Interactively?"},"invisible":{"text":"invisible","snippet":"invisible(x)","prefix":"invisible","type":"function","description":"Return a (temporarily) invisible copy of an object.","leftLabel":"base","rightLabel":"R: Change the Print Mode to Invisible"},"is.finite":{"text":"is.finite","snippet":"is.finite(x)is.infinite(x)is.nan(x)InfNaN","prefix":"is.finite","type":"function","description":"is.finite and is.infinite return a vector of the samelength as x, indicating which elements are finite (not infiniteand not missing) or infinite.","leftLabel":"base","rightLabel":"R: Finite, Infinite and NaN Numbers"},"is.function":{"text":"is.function","snippet":"is.function(x)is.primitive(x)","prefix":"is.function","type":"function","description":"Checks whether its argument is a (primitive) function.","leftLabel":"base","rightLabel":"R: Is an Object of Type (Primitive) Function?"},"is.language":{"text":"is.language","snippet":"is.language(x)","prefix":"is.language","type":"function","description":"is.language returns TRUE if x is avariable name, a call, or anexpression.","leftLabel":"base","rightLabel":"R: Is an Object a Language Object?"},"is.object":{"text":"is.object","snippet":"is.object(x)","prefix":"is.object","type":"function","description":"A function rather for internal use.  It returns TRUE if theobject x has the R internal OBJECT bit set, andFALSE otherwise.  The OBJECT bit is set when a\"class\" attribute is added and removed when that attribute isremoved, so this is a very efficient way to check if an object has aclass attribute.  (S4 objects always should.)","leftLabel":"base","rightLabel":"R: Is an Object 'internally classed'?"},"is.recursive":{"text":"is.recursive","snippet":"is.atomic(x)is.recursive(x)","prefix":"is.recursive","type":"function","description":"is.atomic returns TRUE if x is of an atomic type(or NULL) and FALSE otherwise.","leftLabel":"base","rightLabel":"R: Is an Object Atomic or Recursive?"},"is.single":{"text":"is.single","snippet":"is.single(x)","prefix":"is.single","type":"function","description":"is.single reports an error.  There are no single precisionvalues in R.","leftLabel":"base","rightLabel":"R: Is an Object of Single Precision Type?"},"is.unsorted":{"text":"is.unsorted","snippet":"is.unsorted(x, na.rm = FALSE, strictly = FALSE)","prefix":"is.unsorted","type":"function","description":"Test if an object is not sorted (in increasing order), without thecost of sorting it.","leftLabel":"base","rightLabel":"R: Test if an Object is Not Sorted"},"isR":{"text":"isR","snippet":"is.R()","prefix":"isR","type":"function","description":"Test if running under R.","leftLabel":"base","rightLabel":"R: Are we using R, rather than S?"},"isS4":{"text":"isS4","snippet":"isS4(object)asS4(object, flag = TRUE, complete = TRUE)asS3(object, flag = TRUE, complete = TRUE)","prefix":"isS4","type":"function","description":"Tests whether the object is an instance of an S4 class.","leftLabel":"base","rightLabel":"R: Test for an S4 object"},"isSymmetric":{"text":"isSymmetric","snippet":"isSymmetric(object, ...)## S3 method for class 'matrix'isSymmetric(object, tol = 100 * .Machine$double.eps,            tol1 = 8 * tol, ...)","prefix":"isSymmetric","type":"function","description":"Generic function to test if object is symmetric or not.Currently only a matrix method is implemented, where acomplex matrix Z must be “Hermitian” forisSymmetric(Z) to be true.","leftLabel":"base","rightLabel":"R: Test if a Matrix or other Object is Symmetric (Hermitian)"},"jitter":{"text":"jitter","snippet":"jitter(x, factor = 1, amount = NULL)","prefix":"jitter","type":"function","description":"Add a small amount of noise to a numeric vector.","leftLabel":"base","rightLabel":"R: 'Jitter' (Add Noise) to Numbers"},"kappa":{"text":"kappa","snippet":"kappa(z, ...)## Default S3 method:kappa(z, exact = FALSE,      norm = NULL, method = c(\"qr\", \"direct\"), ...)## S3 method for class 'lm'kappa(z, ...)## S3 method for class 'qr'kappa(z, ...).kappa_tri(z, exact = FALSE, LINPACK = TRUE, norm = NULL, ...)rcond(x, norm = c(\"O\",\"I\",\"1\"), triangular = FALSE, ...)","prefix":"kappa","type":"function","description":"The condition number of a regular (square) matrix is the product ofthe norm of the matrix and the norm of its inverse (orpseudo-inverse), and hence depends on the kind of matrix-norm.","leftLabel":"base","rightLabel":"R: Compute or Estimate the Condition Number of a Matrix"},"kronecker":{"text":"kronecker","snippet":"kronecker(X, Y, FUN = \"*\", make.dimnames = FALSE, ...)X %x% Y","prefix":"kronecker","type":"function","description":"Computes the generalised kronecker product of two arrays,X and Y.","leftLabel":"base","rightLabel":"R: Kronecker Products on Arrays"},"l10n_info":{"text":"l10n_info","snippet":"l10n_info()","prefix":"l10n_info","type":"function","description":"Report on localization information.","leftLabel":"base","rightLabel":"R: Localization Information"},"labels":{"text":"labels","snippet":"labels(object, ...)","prefix":"labels","type":"function","description":"Find a suitable set of labels from an object for use in printing orplotting, for example.  A generic function.","leftLabel":"base","rightLabel":"R: Find Labels from Object"},"lapply":{"text":"lapply","snippet":"lapply(X, FUN, ...)sapply(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE)vapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)replicate(n, expr, simplify = \"array\")simplify2array(x, higher = TRUE)","prefix":"lapply","type":"function","description":"lapply returns a list of the same length as X, eachelement of which is the result of applying FUN to thecorresponding element of X.","leftLabel":"base","rightLabel":"R: Apply a Function over a List or Vector"},"lazyload":{"text":"lazyload","snippet":"lazyLoad(filebase, envir = parent.frame(), filter)lazyLoadDBexec(filebase, fun, filter)","prefix":"lazyload","type":"function","description":"Internal functions to lazy load a database of R objects.","leftLabel":"base","rightLabel":"R: Lazy Load a Database of R Objects"},"length":{"text":"length","snippet":"length(x)length(x) <- value","prefix":"length","type":"function","description":"Get or set the length of vectors (including lists) and factors, and ofany other R object for which a method has been defined.","leftLabel":"base","rightLabel":"R: Length of an Object"},"lengths":{"text":"lengths","snippet":"lengths(x, use.names = TRUE)","prefix":"lengths","type":"function","description":"Get the length of each element of a list or atomicvector (is.atomic) as an integer or numeric vector.","leftLabel":"base","rightLabel":"R: Lengths of List or Vector Elements"},"levels":{"text":"levels","snippet":"levels(x)levels(x) <- value","prefix":"levels","type":"function","description":"levels provides access to the levels attribute of a variable.The first form returns the value of the levels of its argumentand the second sets the attribute.","leftLabel":"base","rightLabel":"R: Levels Attributes"},"libPaths":{"text":"libPaths","snippet":".libPaths(new).Library.Library.site","prefix":"libPaths","type":"function","description":".libPaths gets/sets the library trees within which packages arelooked for.","leftLabel":"base","rightLabel":"R: Search Paths for Packages"},"libcurlVersion":{"text":"libcurlVersion","snippet":"libcurlVersion()","prefix":"libcurlVersion","type":"function","description":"Report version of libcurl in use.","leftLabel":"base","rightLabel":"R: Report Version of libcurl"},"library":{"text":"library","snippet":"library(package, help, pos = 2, lib.loc = NULL,        character.only = FALSE, logical.return = FALSE,        warn.conflicts = TRUE, quietly = FALSE,        verbose = getOption(\"verbose\"))require(package, lib.loc = NULL, quietly = FALSE,        warn.conflicts = TRUE,        character.only = FALSE)","prefix":"library","type":"function","description":"library and require load and attach add-on packages.","leftLabel":"base","rightLabel":"R: Loading/Attaching and Listing of Packages"},"library.dynam":{"text":"library.dynam","snippet":"library.dynam(chname, package, lib.loc,              verbose = getOption(\"verbose\"),              file.ext = .Platform$dynlib.ext, ...)library.dynam.unload(chname, libpath,              verbose = getOption(\"verbose\"),              file.ext = .Platform$dynlib.ext).dynLibs(new)","prefix":"library.dynam","type":"function","description":"Load the specified file of compiled code if it has not been loadedalready, or unloads it.","leftLabel":"base","rightLabel":"R: Loading DLLs from Packages"},"license":{"text":"license","snippet":"license()licence()","prefix":"license","type":"function","description":"The license terms under which R is distributed.","leftLabel":"base","rightLabel":"R: The R License Terms"},"list":{"text":"list","snippet":"list(...)pairlist(...)as.list(x, ...)## S3 method for class 'environment'as.list(x, all.names = FALSE, sorted = FALSE, ...)as.pairlist(x)is.list(x)is.pairlist(x)alist(...)","prefix":"list","type":"function","description":"Functions to construct, coerce and check for both kinds of R lists.","leftLabel":"base","rightLabel":"R: Lists - Generic and Dotted Pairs"},"list.files":{"text":"list.files","snippet":"list.files(path = \".\", pattern = NULL, all.files = FALSE,           full.names = FALSE, recursive = FALSE,           ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)       dir(path = \".\", pattern = NULL, all.files = FALSE,           full.names = FALSE, recursive = FALSE,           ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)list.dirs(path = \".\", full.names = TRUE, recursive = TRUE)","prefix":"list.files","type":"function","description":"These functions produce a character vector of the names of files ordirectories in the named directory.","leftLabel":"base","rightLabel":"R: List the Files in a Directory/Folder"},"list2env":{"text":"list2env","snippet":"list2env(x, envir = NULL, parent = parent.frame(),         hash = (length(x) > 100), size = max(29L, length(x)))","prefix":"list2env","type":"function","description":"From a named list x, create anenvironment containing all list components as objects, or“multi-assign” from x into a pre-existing environment.","leftLabel":"base","rightLabel":"R: From A List, Build or Add To an Environment"},"load":{"text":"load","snippet":"load(file, envir = parent.frame(), verbose = FALSE)","prefix":"load","type":"function","description":"Reload datasets written with the function save.","leftLabel":"base","rightLabel":"R: Reload Saved Datasets"},"locales":{"text":"locales","snippet":"Sys.getlocale(category = \"LC_ALL\")Sys.setlocale(category = \"LC_ALL\", locale = \"\")","prefix":"locales","type":"function","description":"Get details of or set aspects of the locale for the R process.","leftLabel":"base","rightLabel":"R: Query or Set Aspects of the Locale"},"logical":{"text":"logical","snippet":"TRUEFALSET; Flogical(length = 0)as.logical(x, ...)is.logical(x)","prefix":"logical","type":"function","description":"Create or test for objects of type \"logical\", and the basiclogical constants.","leftLabel":"base","rightLabel":"R: Logical Vectors"},"lower.tri":{"text":"lower.tri","snippet":"lower.tri(x, diag = FALSE)upper.tri(x, diag = FALSE)","prefix":"lower.tri","type":"function","description":"Returns a matrix of logicals the same size of a given matrix withentries TRUE in the lower or upper triangle.","leftLabel":"base","rightLabel":"R: Lower and Upper Triangular Part of a Matrix"},"ls":{"text":"ls","snippet":"ls(name, pos = -1L, envir = as.environment(pos),   all.names = FALSE, pattern, sorted = TRUE)objects(name, pos= -1L, envir = as.environment(pos),        all.names = FALSE, pattern, sorted = TRUE)","prefix":"ls","type":"function","description":"ls and objects return a vector of character stringsgiving the names of the objects in the specified environment.  Wheninvoked with no argument at the top level prompt, ls shows whatdata sets and functions a user has defined.  When invoked with noargument inside a function, ls returns the names of thefunction's local variables: this is useful in conjunction withbrowser.","leftLabel":"base","rightLabel":"R: List Objects"},"make.names":{"text":"make.names","snippet":"make.names(names, unique = FALSE, allow_ = TRUE)","prefix":"make.names","type":"function","description":"Make syntactically valid names out of character vectors.","leftLabel":"base","rightLabel":"R: Make Syntactically Valid Names"},"make.unique":{"text":"make.unique","snippet":"make.unique(names, sep = \".\")","prefix":"make.unique","type":"function","description":"Makes the elements of a character vector unique byappending sequence numbers to duplicates.","leftLabel":"base","rightLabel":"R: Make Character Strings Unique"},"mapply":{"text":"mapply","snippet":"mapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE,       USE.NAMES = TRUE)","prefix":"mapply","type":"function","description":"mapply is a multivariate version of sapply.mapply applies FUN to the first elements of each ...argument, the second elements, the third elements, and so on.Arguments are recycled if necessary.","leftLabel":"base","rightLabel":"R: Apply a Function to Multiple List or Vector Arguments"},"margin.table":{"text":"margin.table","snippet":"margin.table(x, margin = NULL)","prefix":"margin.table","type":"function","description":"For a contingency table in array form, compute the sum of tableentries for a given index.","leftLabel":"base","rightLabel":"R: Compute table margin"},"mat.or.vec":{"text":"mat.or.vec","snippet":"mat.or.vec(nr, nc)","prefix":"mat.or.vec","type":"function","description":"mat.or.vec creates an nr by nc zero matrix ifnc is greater than 1, and a zero vector of length nr ifnc equals 1.","leftLabel":"base","rightLabel":"R: Create a Matrix or a Vector"},"match":{"text":"match","snippet":"match(x, table, nomatch = NA_integer_, incomparables = NULL)x %in% table","prefix":"match","type":"function","description":"match returns a vector of the positions of (first) matches ofits first argument in its second.","leftLabel":"base","rightLabel":"R: Value Matching"},"match.arg":{"text":"match.arg","snippet":"match.arg(arg, choices, several.ok = FALSE)","prefix":"match.arg","type":"function","description":"match.arg matches arg against a table of candidatevalues as specified by choices, where NULL means to takethe first one.","leftLabel":"base","rightLabel":"R: Argument Verification Using Partial Matching"},"match.call":{"text":"match.call","snippet":"match.call(definition = sys.function(sys.parent()),           call = sys.call(sys.parent()),           expand.dots = TRUE,           envir = parent.frame(2L))","prefix":"match.call","type":"function","description":"match.call returns a call in which all of the specified arguments arespecified by their full names.","leftLabel":"base","rightLabel":"R: Argument Matching"},"match.fun":{"text":"match.fun","snippet":"match.fun(FUN, descend = TRUE)","prefix":"match.fun","type":"function","description":"When called inside functions that take a function as argument, extractthe desired function object while avoiding undesired matching toobjects of other types.","leftLabel":"base","rightLabel":"R: Extract a Function Specified by Name"},"matmult":{"text":"matmult","snippet":"x %*% y","prefix":"matmult","type":"function","description":"Multiplies two matrices, if they are conformable.  If one argument isa vector, it will be promoted to either a row or column matrix to makethe two arguments conformable.  If both are vectors of the samelength, it will return the inner product (as a matrix).","leftLabel":"base","rightLabel":"R: Matrix Multiplication"},"matrix":{"text":"matrix","snippet":"matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,       dimnames = NULL)as.matrix(x, ...)## S3 method for class 'data.frame'as.matrix(x, rownames.force = NA, ...)is.matrix(x)","prefix":"matrix","type":"function","description":"matrix creates a matrix from the given set of values.","leftLabel":"base","rightLabel":"R: Matrices"},"maxCol":{"text":"maxCol","snippet":"max.col(m, ties.method = c(\"random\", \"first\", \"last\"))","prefix":"maxCol","type":"function","description":"Find the maximum position for each row of a matrix, breaking ties at random.","leftLabel":"base","rightLabel":"R: Find Maximum Position in Matrix"},"mean":{"text":"mean","snippet":"mean(x, ...)## Default S3 method:mean(x, trim = 0, na.rm = FALSE, ...)","prefix":"mean","type":"function","description":"Generic function for the (trimmed) arithmetic mean.","leftLabel":"base","rightLabel":"R: Arithmetic Mean"},"memCompress":{"text":"memCompress","snippet":"memCompress(from, type = c(\"gzip\", \"bzip2\", \"xz\", \"none\"))memDecompress(from,              type = c(\"unknown\", \"gzip\", \"bzip2\", \"xz\", \"none\"),              asChar = FALSE)","prefix":"memCompress","type":"function","description":"In-memory compression or decompression for raw vectors.","leftLabel":"base","rightLabel":"R: In-memory Compression and Decompression"},"memory.profile":{"text":"memory.profile","snippet":"memory.profile()","prefix":"memory.profile","type":"function","description":"Lists the usage of the cons cells by SEXPREC type.","leftLabel":"base","rightLabel":"R: Profile the Usage of Cons Cells"},"merge":{"text":"merge","snippet":"merge(x, y, ...)## Default S3 method:merge(x, y, ...)## S3 method for class 'data.frame'merge(x, y, by = intersect(names(x), names(y)),      by.x = by, by.y = by, all = FALSE, all.x = all, all.y = all,      sort = TRUE, suffixes = c(\".x\",\".y\"),      incomparables = NULL, ...)","prefix":"merge","type":"function","description":"Merge two data frames by common columns or row names, or do otherversions of database join operations.","leftLabel":"base","rightLabel":"R: Merge Two Data Frames"},"message":{"text":"message","snippet":"message(..., domain = NULL, appendLF = TRUE)suppressMessages(expr)packageStartupMessage(..., domain = NULL, appendLF = TRUE)suppressPackageStartupMessages(expr).makeMessage(..., domain = NULL, appendLF = FALSE)","prefix":"message","type":"function","description":"Generate a diagnostic message from its arguments.","leftLabel":"base","rightLabel":"R: Diagnostic Messages"},"missing":{"text":"missing","snippet":"missing(x)","prefix":"missing","type":"function","description":"missing can be used to test whether a value was specifiedas an argument to a function.","leftLabel":"base","rightLabel":"R: Does a Formal Argument have a Value?"},"mode":{"text":"mode","snippet":"mode(x)mode(x) <- valuestorage.mode(x)storage.mode(x) <- value","prefix":"mode","type":"function","description":"Get or set the type or storage mode of an object.","leftLabel":"base","rightLabel":"R: The (Storage) Mode of an Object"},"name":{"text":"name","snippet":"as.symbol(x)is.symbol(x)as.name(x)is.name(x)","prefix":"name","type":"function","description":"A ‘name’ (also known as a ‘symbol’) is a way to refer toR objects by name (rather than the value of the object, if any, boundto that name).","leftLabel":"base","rightLabel":"R: Names and Symbols"},"names":{"text":"names","snippet":"names(x)names(x) <- value","prefix":"names","type":"function","description":"Functions to get or set the names of an object.","leftLabel":"base","rightLabel":"R: The Names of an Object"},"nargs":{"text":"nargs","snippet":"nargs()","prefix":"nargs","type":"function","description":"When used inside a function body, nargs returns the number ofarguments supplied to that function, including positionalarguments left blank.","leftLabel":"base","rightLabel":"R: The Number of Arguments to a Function"},"nchar":{"text":"nchar","snippet":"nchar(x, type = \"chars\", allowNA = FALSE, keepNA = NA)nzchar(x, keepNA = FALSE)","prefix":"nchar","type":"function","description":"nchar takes a character vector as an argument andreturns a vector whose elements contain the sizes ofthe corresponding elements of x.","leftLabel":"base","rightLabel":"R: Count the Number of Characters (or Bytes or Width)"},"nlevels":{"text":"nlevels","snippet":"nlevels(x)","prefix":"nlevels","type":"function","description":"Return the number of levels which its argument has.","leftLabel":"base","rightLabel":"R: The Number of Levels of a Factor"},"noquote":{"text":"noquote","snippet":"noquote(obj)## S3 method for class 'noquote'print(x, ...)## S3 method for class 'noquote'c(..., recursive = FALSE)","prefix":"noquote","type":"function","description":"Print character strings without quotes.","leftLabel":"base","rightLabel":"R: Class for 'no quote' Printing of Character Strings"},"norm":{"text":"norm","snippet":"norm(x, type = c(\"O\", \"I\", \"F\", \"M\", \"2\"))","prefix":"norm","type":"function","description":"Computes a matrix norm of x using LAPACK.  The norm can bethe one (\"O\") norm, the infinity (\"I\") norm, theFrobenius (\"F\") norm, the maximum modulus (\"M\") amongelements of a matrix, or the “spectral” or \"2\"-norm, asdetermined by the value of type.","leftLabel":"base","rightLabel":"R: Compute the Norm of a Matrix"},"normalizePath":{"text":"normalizePath","snippet":"normalizePath(path, winslash = \"\\\\\", mustWork = NA)","prefix":"normalizePath","type":"function","description":"Convert file paths to canonical form for the platform, to display themin a user-understandable form and so that relative and absolute paths canbe compared.","leftLabel":"base","rightLabel":"R: Express File Paths in Canonical Form"},"notyet":{"text":"notyet","snippet":".NotYetImplemented().NotYetUsed(arg, error = TRUE)","prefix":"notyet","type":"function","description":"In order to pinpoint missing functionality, the R core team usesthese functions for missing R functions and not yet used arguments ofexisting R functions (which are typically there for compatibilitypurposes).","leftLabel":"base","rightLabel":"R: Not Yet Implemented Functions and Unused Arguments"},"nrow":{"text":"nrow","snippet":"nrow(x)ncol(x)NCOL(x)NROW(x)","prefix":"nrow","type":"function","description":"nrow and ncol return the number of rows or columnspresent in x.NCOL and NROW do the same treating a vector as1-column matrix.","leftLabel":"base","rightLabel":"R: The Number of Rows/Columns of an Array"},"ns-dblcolon":{"text":"ns-dblcolon","snippet":"pkg::namepkg:::name","prefix":"ns-dblcolon","type":"function","description":"Accessing exported and internal variables, i.e. R objects(including lazy loaded data sets) in a namespace.","leftLabel":"base","rightLabel":"R: Double Colon and Triple Colon Operators"},"ns-hooks":{"text":"ns-hooks","snippet":".onLoad(libname, pkgname).onAttach(libname, pkgname).onUnload(libpath).onDetach(libpath).Last.lib(libpath)","prefix":"ns-hooks","type":"function","description":"Packages can supply functions to be called whenloaded, attached, detached or unloaded.","leftLabel":"base","rightLabel":"R: Hooks for Namespace Events"},"ns-internal":{"text":"ns-internal","snippet":"asNamespace(ns, base.OK = TRUE)getNamespaceInfo (ns, which).getNamespaceInfo(ns, which)importIntoEnv(impenv, impnames, expenv, expnames)isBaseNamespace(ns)isNamespace(ns)namespaceExport(ns, vars)namespaceImport(self, ..., from = NULL, except = character(0L))namespaceImportFrom(self, ns, vars, generics, packages,                    from = \"non-package environment\",                    except = character(0L))namespaceImportClasses(self, ns, vars, from = NULL)namespaceImportMethods(self, ns, vars, from = NULL)packageHasNamespace(package, package.lib)parseNamespaceFile(package, package.lib, mustExist = TRUE)registerS3method(genname, class, method, envir = parent.frame())registerS3methods(info, package, env)setNamespaceInfo(ns, which, val).mergeExportMethods(new, ns).mergeImportMethods(impenv, expenv, metaname).knownS3GenericsloadingNamespaceInfo().getNamespace(name)..getNamespace(name, where)","prefix":"ns-internal","type":"function","description":"Internal namespace support functions.  Not intended to be calleddirectly, and only visible because of the special nature of thebase namespace.","leftLabel":"base","rightLabel":"R: Namespace Internals"},"ns-load":{"text":"ns-load","snippet":"attachNamespace(ns, pos = 2L, depends = NULL)loadNamespace(package, lib.loc = NULL,              keep.source = getOption(\"keep.source.pkgs\"),              partial = FALSE, versionCheck = NULL)requireNamespace(package, ..., quietly = FALSE)loadedNamespaces()unloadNamespace(ns)isNamespaceLoaded(name)","prefix":"ns-load","type":"function","description":"Functions to load and unload name spaces.","leftLabel":"base","rightLabel":"R: Loading and Unloading Name Spaces"},"ns-reflect":{"text":"ns-reflect","snippet":"getExportedValue(ns, name)getNamespace(name)getNamespaceExports(ns)getNamespaceImports(ns)getNamespaceName(ns)getNamespaceUsers(ns)getNamespaceVersion(ns)","prefix":"ns-reflect","type":"function","description":"Internal functions to support reflection on namespace objects.","leftLabel":"base","rightLabel":"R: Namespace Reflection Support"},"ns-topenv":{"text":"ns-topenv","snippet":"topenv(envir = parent.frame(),       matchThisEnv = getOption(\"topLevelEnvironment\"))","prefix":"ns-topenv","type":"function","description":"Finding the top level environment from an environmentenvir and its enclosing environments.","leftLabel":"base","rightLabel":"R: Top Level Environment"},"numeric":{"text":"numeric","snippet":"numeric(length = 0)as.numeric(x, ...)is.numeric(x)","prefix":"numeric","type":"function","description":"Creates or coerces objects of type \"numeric\".is.numeric is a more general test of an object beinginterpretable as numbers.","leftLabel":"base","rightLabel":"R: Numeric Vectors"},"numeric_version":{"text":"numeric_version","snippet":"numeric_version(x, strict = TRUE)package_version(x, strict = TRUE)R_system_version(x, strict = TRUE)getRversion()","prefix":"numeric_version","type":"function","description":"A simple S3 class for representing numeric versionsincluding package versions, and associated methods.","leftLabel":"base","rightLabel":"R: Numeric Versions"},"octmode":{"text":"octmode","snippet":"as.octmode(x)## S3 method for class 'octmode'as.character(x, ...)## S3 method for class 'octmode'format(x, width = NULL, ...)## S3 method for class 'octmode'print(x, ...)","prefix":"octmode","type":"function","description":"Convert or print integers in octal format, with as many digits as areneeded to display the largest, using leading zeroes as necessary.","leftLabel":"base","rightLabel":"R: Display Numbers in Octal"},"on.exit":{"text":"on.exit","snippet":"on.exit(expr = NULL, add = FALSE)","prefix":"on.exit","type":"function","description":"on.exit records the expression given as its argument as needingto be executed when the current function exits (either naturally or asthe result of an error).  This is useful for resetting graphicalparameters or performing other cleanup actions.","leftLabel":"base","rightLabel":"R: Function Exit Code"},"options":{"text":"options","snippet":"options(...)getOption(x, default = NULL).Options","prefix":"options","type":"function","description":"Allow the user to set and examine a variety of global optionswhich affect the way in which R computes and displays its results.","leftLabel":"base","rightLabel":"R: Options Settings"},"order":{"text":"order","snippet":"order(..., na.last = TRUE, decreasing = FALSE,      method = c(\"auto\", \"shell\", \"radix\"))sort.list(x, partial = NULL, na.last = TRUE, decreasing = FALSE,          method = c(\"auto\", \"shell\", \"quick\", \"radix\"))","prefix":"order","type":"function","description":"order returns a permutation which rearranges its firstargument into ascending or descending order, breaking ties by furtherarguments. sort.list is the same, using only one argument.See the examples for how to use these functions to sort data frames,etc.","leftLabel":"base","rightLabel":"R: Ordering Permutation"},"outer":{"text":"outer","snippet":"outer(X, Y, FUN = \"*\", ...)X %o% Y","prefix":"outer","type":"function","description":"The outer product of the arrays X and Y is the arrayA with dimension c(dim(X), dim(Y)) where elementA[c(arrayindex.x, arrayindex.y)]    = FUN(X[arrayindex.x], Y[arrayindex.y], ...).","leftLabel":"base","rightLabel":"R: Outer Product of Arrays"},"parse":{"text":"parse","snippet":"parse(file = \"\", n = NULL, text = NULL, prompt = \"?\",      keep.source = getOption(\"keep.source\"), srcfile,      encoding = \"unknown\")","prefix":"parse","type":"function","description":"parse returns the parsed but unevaluated expressions in alist.","leftLabel":"base","rightLabel":"R: Parse Expressions"},"paste":{"text":"paste","snippet":"paste (..., sep = \" \", collapse = NULL)paste0(..., collapse = NULL)","prefix":"paste","type":"function","description":"Concatenate vectors after converting to character.","leftLabel":"base","rightLabel":"R: Concatenate Strings"},"path.expand":{"text":"path.expand","snippet":"path.expand(path)","prefix":"path.expand","type":"function","description":"Expand a path name, for example by replacing a leading tilde by theuser's home directory (if defined on that platform).","leftLabel":"base","rightLabel":"R: Expand File Paths"},"pcre_config":{"text":"pcre_config","snippet":"pcre_config()","prefix":"pcre_config","type":"function","description":"Report some of the configuration options of the version of PCRE in usein this R session.","leftLabel":"base","rightLabel":"R: Report Configuration Options for PCRE"},"pmatch":{"text":"pmatch","snippet":"pmatch(x, table, nomatch = NA_integer_, duplicates.ok = FALSE)","prefix":"pmatch","type":"function","description":"pmatch seeks matches for the elements of its first argumentamong those of its second.","leftLabel":"base","rightLabel":"R: Partial String Matching"},"polyroot":{"text":"polyroot","snippet":"polyroot(z)","prefix":"polyroot","type":"function","description":"Find zeros of a real or complex polynomial.","leftLabel":"base","rightLabel":"R: Find Zeros of a Real or Complex Polynomial"},"pos.to.env":{"text":"pos.to.env","snippet":"pos.to.env(x)","prefix":"pos.to.env","type":"function","description":"Returns the environment at a specified position in the search path.","leftLabel":"base","rightLabel":"R: Convert Positions in the Search Path to Environments"},"pretty":{"text":"pretty","snippet":"pretty(x, ...)## Default S3 method:pretty(x, n = 5, min.n = n %/% 3,  shrink.sml = 0.75,       high.u.bias = 1.5, u5.bias = .5 + 1.5*high.u.bias,       eps.correct = 0, ...)","prefix":"pretty","type":"function","description":"Compute a  sequence of about n+1 equally spaced ‘round’values which cover the range of the values in x.The values are chosen so that they are 1, 2 or 5 times a power of 10.","leftLabel":"base","rightLabel":"R: Pretty Breakpoints"},"print":{"text":"print","snippet":"print(x, ...)## S3 method for class 'factor'print(x, quote = FALSE, max.levels = NULL,      width = getOption(\"width\"), ...)## S3 method for class 'table'print(x, digits = getOption(\"digits\"), quote = FALSE,      na.print = \"\", zero.print = \"0\", justify = \"none\", ...)## S3 method for class 'function'print(x, useSource = TRUE, ...)","prefix":"print","type":"function","description":"print prints its argument and returns it invisibly (viainvisible(x)).  It is a generic function which means thatnew printing methods can be easily added for new classes.","leftLabel":"base","rightLabel":"R: Print Values"},"print.dataframe":{"text":"print.dataframe","snippet":"## S3 method for class 'data.frame'print(x, ..., digits = NULL,      quote = FALSE, right = TRUE, row.names = TRUE)","prefix":"print.dataframe","type":"function","description":"Print a data frame.","leftLabel":"base","rightLabel":"R: Printing Data Frames"},"print.default":{"text":"print.default","snippet":"## Default S3 method:print(x, digits = NULL, quote = TRUE,      na.print = NULL, print.gap = NULL, right = FALSE,      max = NULL, useSource = TRUE, ...)","prefix":"print.default","type":"function","description":"print.default is the default method of the genericprint function which prints its argument.","leftLabel":"base","rightLabel":"R: Default Printing"},"prmatrix":{"text":"prmatrix","snippet":"prmatrix(x, rowlab =, collab =,         quote = TRUE, right = FALSE, na.print = NULL, ...)","prefix":"prmatrix","type":"function","description":"An earlier method for printing matrices, provided for S compatibility.","leftLabel":"base","rightLabel":"R: Print Matrices, Old-style"},"proc.time":{"text":"proc.time","snippet":"proc.time()","prefix":"proc.time","type":"function","description":"proc.time determines how much real and CPU time (in seconds)the currently running R process has already taken.","leftLabel":"base","rightLabel":"R: Running Time of R"},"prod":{"text":"prod","snippet":"prod(..., na.rm = FALSE)","prefix":"prod","type":"function","description":"prod returns the product of all the valuespresent in its arguments.","leftLabel":"base","rightLabel":"R: Product of Vector Elements"},"prop.table":{"text":"prop.table","snippet":"prop.table(x, margin = NULL)","prefix":"prop.table","type":"function","description":"This is really sweep(x, margin, margin.table(x, margin), \"/\")for newbies, except that if margin has length zero, then onegets x/sum(x).","leftLabel":"base","rightLabel":"R: Express Table Entries as Fraction of Marginal Table"},"pushBack":{"text":"pushBack","snippet":"pushBack(data, connection, newLine = TRUE,         encoding = c(\"\", \"bytes\", \"UTF-8\"))pushBackLength(connection)clearPushBack(connection)","prefix":"pushBack","type":"function","description":"Functions to push back text lines onto a connection, and to enquirehow many lines are currently pushed back.","leftLabel":"base","rightLabel":"R: Push Text Back on to a Connection"},"qr":{"text":"qr","snippet":"qr(x, ...)## Default S3 method:qr(x, tol = 1e-07 , LAPACK = FALSE, ...)qr.coef(qr, y)qr.qy(qr, y)qr.qty(qr, y)qr.resid(qr, y)qr.fitted(qr, y, k = qr$rank)qr.solve(a, b, tol = 1e-7)## S3 method for class 'qr'solve(a, b, ...)is.qr(x)as.qr(x)","prefix":"qr","type":"function","description":"qr computes the QR decomposition of a matrix.","leftLabel":"base","rightLabel":"R: The QR Decomposition of a Matrix"},"qraux":{"text":"qraux","snippet":"qr.X(qr, complete = FALSE, ncol =)qr.Q(qr, complete = FALSE, Dvec =)qr.R(qr, complete = FALSE)","prefix":"qraux","type":"function","description":"Returns the original matrix from which the object was constructed orthe components of the decomposition.","leftLabel":"base","rightLabel":"R: Reconstruct the Q, R, or X Matrices from a QR Object"},"quit":{"text":"quit","snippet":"quit(save = \"default\", status = 0, runLast = TRUE)   q(save = \"default\", status = 0, runLast = TRUE)","prefix":"quit","type":"function","description":"The function quit or its alias q terminate the currentR session.","leftLabel":"base","rightLabel":"R: Terminate an R Session"},"range":{"text":"range","snippet":"range(..., na.rm = FALSE)## Default S3 method:range(..., na.rm = FALSE, finite = FALSE)","prefix":"range","type":"function","description":"range returns a vector containing the minimum and maximum ofall the given arguments.","leftLabel":"base","rightLabel":"R: Range of Values"},"rank":{"text":"rank","snippet":"rank(x, na.last = TRUE,     ties.method = c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"))","prefix":"rank","type":"function","description":"Returns the sample ranks of the values in a vector.  Ties (i.e., equalvalues) and missing values can be handled in several ways.","leftLabel":"base","rightLabel":"R: Sample Ranks"},"rapply":{"text":"rapply","snippet":"rapply(object, f, classes = \"ANY\", deflt = NULL,       how = c(\"unlist\", \"replace\", \"list\"), ...)","prefix":"rapply","type":"function","description":"rapply is a recursive version of lapply.","leftLabel":"base","rightLabel":"R: Recursively Apply a Function to a List"},"raw":{"text":"raw","snippet":"raw(length = 0)as.raw(x)is.raw(x)","prefix":"raw","type":"function","description":"Creates or tests for objects of type \"raw\".","leftLabel":"base","rightLabel":"R: Raw Vectors"},"rawConnection":{"text":"rawConnection","snippet":"rawConnection(object, open = \"r\")rawConnectionValue(con)","prefix":"rawConnection","type":"function","description":"Input and output raw connections.","leftLabel":"base","rightLabel":"R: Raw Connections"},"rawConversion":{"text":"rawConversion","snippet":"charToRaw(x)rawToChar(x, multiple = FALSE)rawShift(x, n)rawToBits(x)intToBits(x)packBits(x, type = c(\"raw\", \"integer\"))","prefix":"rawConversion","type":"function","description":"Conversion and manipulation of  objects of type \"raw\".","leftLabel":"base","rightLabel":"R: Convert to or from Raw Vectors"},"readBin":{"text":"readBin","snippet":"readBin(con, what, n = 1L, size = NA_integer_, signed = TRUE,        endian = .Platform$endian)writeBin(object, con, size = NA_integer_,         endian = .Platform$endian, useBytes = FALSE)","prefix":"readBin","type":"function","description":"Read binary data from or write binary data to a connection or raw vector.","leftLabel":"base","rightLabel":"R: Transfer Binary Data To and From Connections"},"readChar":{"text":"readChar","snippet":"readChar(con, nchars, useBytes = FALSE)writeChar(object, con, nchars = nchar(object, type = \"chars\"),          eos = \"\", useBytes = FALSE)","prefix":"readChar","type":"function","description":"Transfer character strings to and from connections, without assumingthey are null-terminated on the connection.","leftLabel":"base","rightLabel":"R: Transfer Character Strings To and From Connections"},"readLines":{"text":"readLines","snippet":"readLines(con = stdin(), n = -1L, ok = TRUE, warn = TRUE,          encoding = \"unknown\", skipNul = FALSE)","prefix":"readLines","type":"function","description":"Read some or all text lines from a connection.","leftLabel":"base","rightLabel":"R: Read Text Lines from a Connection"},"readRDS":{"text":"readRDS","snippet":"saveRDS(object, file = \"\", ascii = FALSE, version = NULL,        compress = TRUE, refhook = NULL)readRDS(file, refhook = NULL)","prefix":"readRDS","type":"function","description":"Functions to write a single R object to a file, and to restore it.","leftLabel":"base","rightLabel":"R: Serialization Interface for Single Objects"},"readRenviron":{"text":"readRenviron","snippet":"readRenviron(path)","prefix":"readRenviron","type":"function","description":"Read as file such as ‘.Renviron’ or ‘Renviron.site’ in theformat described in the help for Startup, and set environmentvariables as defined in the file.","leftLabel":"base","rightLabel":"R: Set Environment Variables from a File"},"readline":{"text":"readline","snippet":"readline(prompt = \"\")","prefix":"readline","type":"function","description":"readline reads a line from the terminal (in interactive use).","leftLabel":"base","rightLabel":"R: Read a Line from the Terminal"},"reg.finalizer":{"text":"reg.finalizer","snippet":"  reg.finalizer(e, f, onexit = FALSE)","prefix":"reg.finalizer","type":"function","description":"Registers an R function to be called upon garbage collection ofobject or (optionally) at the end of an R session.","leftLabel":"base","rightLabel":"R: Finalization of Objects"},"regex":{"text":"regex","snippet":{},"prefix":"regex","type":"function","description":"This help page documents the regular expression patterns supported bygrep and related functions grepl, regexpr,gregexpr, sub and gsub, as well as bystrsplit.","leftLabel":"base","rightLabel":"R: Regular Expressions as used in R"},"regmatches":{"text":"regmatches","snippet":"regmatches(x, m, invert = FALSE)regmatches(x, m, invert = FALSE) <- value","prefix":"regmatches","type":"function","description":"Extract or replace matched substrings from match data obtained byregexpr, gregexpr orregexec.","leftLabel":"base","rightLabel":"R: Extract or Replace Matched Substrings"},"rep":{"text":"rep","snippet":"rep(x, ...)rep.int(x, times)rep_len(x, length.out)","prefix":"rep","type":"function","description":"rep replicates the values in x.  It is a genericfunction, and the (internal) default method is described here.","leftLabel":"base","rightLabel":"R: Replicate Elements of Vectors and Lists"},"replace":{"text":"replace","snippet":"replace(x, list, values)","prefix":"replace","type":"function","description":"replace replaces the values in xwith indices given in list by those given in values.If necessary, the values in values are recycled.","leftLabel":"base","rightLabel":"R: Replace Values in a Vector"},"rev":{"text":"rev","snippet":"rev(x)","prefix":"rev","type":"function","description":"rev provides a reversed version of its argument.  It is genericfunction with a default method for vectors and one fordendrograms.","leftLabel":"base","rightLabel":"R: Reverse Elements"},"rle":{"text":"rle","snippet":"rle(x)inverse.rle(x, ...)## S3 method for class 'rle'print(x, digits = getOption(\"digits\"), prefix = \"\", ...)","prefix":"rle","type":"function","description":"Compute the lengths and values of runs of equal values in a vector– or the reverse operation.","leftLabel":"base","rightLabel":"R: Run Length Encoding"},"rm":{"text":"rm","snippet":"remove(..., list = character(), pos = -1,       envir = as.environment(pos), inherits = FALSE)rm    (..., list = character(), pos = -1,       envir = as.environment(pos), inherits = FALSE)","prefix":"rm","type":"function","description":"remove and rm can be used to remove objects.  These canbe specified successively as character strings, or in the charactervector list, or through a combination of both.  All objectsthus specified will be removed.","leftLabel":"base","rightLabel":"R: Remove Objects from a Specified Environment"},"round.POSIXt":{"text":"round.POSIXt","snippet":"## S3 method for class 'POSIXt'round(x, units = c(\"secs\", \"mins\", \"hours\", \"days\"))## S3 method for class 'POSIXt'trunc(x, units = c(\"secs\", \"mins\", \"hours\", \"days\"), ...)## S3 method for class 'Date'round(x, ...)## S3 method for class 'Date'trunc(x, ...)","prefix":"round.POSIXt","type":"function","description":"Round or truncate date-time objects.","leftLabel":"base","rightLabel":"R: Round / Truncate Data-Time Objects"},"row":{"text":"row","snippet":"row(x, as.factor = FALSE)","prefix":"row","type":"function","description":"Returns a matrix of integers indicating their row number in amatrix-like object, or a factor indicating the row labels.","leftLabel":"base","rightLabel":"R: Row Indexes"},"row.names":{"text":"row.names","snippet":"row.names(x)row.names(x) <- value","prefix":"row.names","type":"function","description":"All data frames have a row names attribute, a character vector oflength the number of rows with no duplicates nor missing values.","leftLabel":"base","rightLabel":"R: Get and Set Row Names for Data Frames"},"rowsum":{"text":"rowsum","snippet":"rowsum(x, group, reorder = TRUE, ...)## S3 method for class 'data.frame'rowsum(x, group, reorder = TRUE, na.rm = FALSE, ...)## Default S3 method:rowsum(x, group, reorder = TRUE, na.rm = FALSE, ...)","prefix":"rowsum","type":"function","description":"Compute column sums across rows of a numeric matrix-like object foreach level of a grouping variable.  rowsum is generic, with amethod for data frames and a default method for vectors and matrices.","leftLabel":"base","rightLabel":"R: Give Column Sums of a Matrix or Data Frame, Based on a..."},"sQuote":{"text":"sQuote","snippet":"sQuote(x)dQuote(x)","prefix":"sQuote","type":"function","description":"Single or double quote text by combining with appropriate single ordouble left and right quotation marks.","leftLabel":"base","rightLabel":"R: Quote Text"},"sample":{"text":"sample","snippet":"sample(x, size, replace = FALSE, prob = NULL)sample.int(n, size = n, replace = FALSE, prob = NULL,           useHash = (!replace && is.null(prob) && size <= n/2 && n > 1e7))","prefix":"sample","type":"function","description":"sample takes a sample of the specified size from the elementsof x using either with or without replacement.","leftLabel":"base","rightLabel":"R: Random Samples and Permutations"},"save":{"text":"save","snippet":"save(..., list = character(),     file = stop(\"'file' must be specified\"),     ascii = FALSE, version = NULL, envir = parent.frame(),     compress = isTRUE(!ascii), compression_level,     eval.promises = TRUE, precheck = TRUE)save.image(file = \".RData\", version = NULL, ascii = FALSE,           compress = !ascii, safe = TRUE)","prefix":"save","type":"function","description":"save writes an external representation of R objects to thespecified file.  The objects can be read back from the file at a laterdate by using the function load or attach(or data in some cases).","leftLabel":"base","rightLabel":"R: Save R Objects"},"scale":{"text":"scale","snippet":"scale(x, center = TRUE, scale = TRUE)","prefix":"scale","type":"function","description":"scale is generic function whose default method centers and/orscales the columns of a numeric matrix.","leftLabel":"base","rightLabel":"R: Scaling and Centering of Matrix-like Objects"},"scan":{"text":"scan","snippet":"scan(file = \"\", what = double(), nmax = -1, n = -1, sep = \"\",     quote = if(identical(sep, \"\\n\")) \"\" else \"'\\\"\", dec = \".\",     skip = 0, nlines = 0, na.strings = \"NA\",     flush = FALSE, fill = FALSE, strip.white = FALSE,     quiet = FALSE, blank.lines.skip = TRUE, multi.line = TRUE,     comment.char = \"\", allowEscapes = FALSE,     fileEncoding = \"\", encoding = \"unknown\", text, skipNul = FALSE)","prefix":"scan","type":"function","description":"Read data into a vector or list from the console or file.","leftLabel":"base","rightLabel":"R: Read Data Values"},"search":{"text":"search","snippet":"search()searchpaths()","prefix":"search","type":"function","description":"Gives a list of attached packages(see library), and R objects, usuallydata.frames.","leftLabel":"base","rightLabel":"R: Give Search Path for R Objects"},"seek":{"text":"seek","snippet":"seek(con, ...)## S3 method for class 'connection'seek(con, where = NA, origin = \"start\", rw = \"\", ...)isSeekable(con)truncate(con, ...)","prefix":"seek","type":"function","description":"Functions to re-position connections.","leftLabel":"base","rightLabel":"R: Functions to Reposition Connections"},"seq.Date":{"text":"seq.Date","snippet":"## S3 method for class 'Date'seq(from, to, by, length.out = NULL, along.with = NULL, ...)","prefix":"seq.Date","type":"function","description":"The method for seq for objects of class class\"Date\" representing calendar dates.","leftLabel":"base","rightLabel":"R: Generate Regular Sequences of Dates"},"seq.POSIXt":{"text":"seq.POSIXt","snippet":"## S3 method for class 'POSIXt'seq(from, to, by, length.out = NULL, along.with = NULL, ...)","prefix":"seq.POSIXt","type":"function","description":"The method for seq for date-time classes.","leftLabel":"base","rightLabel":"R: Generate Regular Sequences of Times"},"seq":{"text":"seq","snippet":"seq(...)## Default S3 method:seq(from = 1, to = 1, by = ((to - from)/(length.out - 1)),    length.out = NULL, along.with = NULL, ...)seq.int(from, to, by, length.out, along.with, ...)seq_along(along.with)seq_len(length.out)","prefix":"seq","type":"function","description":"Generate regular sequences.  seq is a standard generic with adefault method.  seq.int is a primitive which can bemuch faster but has a few restrictions.  seq_along andseq_len are very fast primitives for two common cases.","leftLabel":"base","rightLabel":"R: Sequence Generation"},"sequence":{"text":"sequence","snippet":"sequence(nvec)","prefix":"sequence","type":"function","description":"For each element of nvec the sequence seq_len(nvec[i])is created.  These are concatenated and the result returned.","leftLabel":"base","rightLabel":"R: Create A Vector of Sequences"},"serialize":{"text":"serialize","snippet":"serialize(object, connection, ascii, xdr = TRUE,          version = NULL, refhook = NULL)unserialize(connection, refhook = NULL)","prefix":"serialize","type":"function","description":"A simple low-level interface for serializing to connections.","leftLabel":"base","rightLabel":"R: Simple Serialization Interface"},"setTimeLimit":{"text":"setTimeLimit","snippet":"setTimeLimit(cpu = Inf, elapsed = Inf, transient = FALSE)setSessionTimeLimit(cpu = Inf, elapsed = Inf)","prefix":"setTimeLimit","type":"function","description":"Functions to set CPU and/or elapsed time limits for top-levelcomputations or the current session.","leftLabel":"base","rightLabel":"R: Set CPU and/or Elapsed Time Limits"},"sets":{"text":"sets","snippet":"union(x, y)intersect(x, y)setdiff(x, y)setequal(x, y)is.element(el, set)","prefix":"sets","type":"function","description":"Performs set union, intersection, (asymmetric!) difference,equality and membership on two vectors.","leftLabel":"base","rightLabel":"R: Set Operations"},"shQuote":{"text":"shQuote","snippet":"shQuote(string, type = c(\"sh\", \"csh\", \"cmd\", \"cmd2\"))","prefix":"shQuote","type":"function","description":"Quote a string to be passed to an operating system shell.","leftLabel":"base","rightLabel":"R: Quote Strings for Use in OS Shells"},"showConnections":{"text":"showConnections","snippet":"showConnections(all = FALSE)getConnection(what)closeAllConnections()stdin()stdout()stderr()isatty(con)","prefix":"showConnections","type":"function","description":"Display aspects of connections.","leftLabel":"base","rightLabel":"R: Display Connections"},"sign":{"text":"sign","snippet":"sign(x)","prefix":"sign","type":"function","description":"sign returns a vector with the signs of the correspondingelements of x (the sign of a real number is 1, 0, or -1if the number is positive, zero, or negative, respectively).","leftLabel":"base","rightLabel":"R: Sign Function"},"sink":{"text":"sink","snippet":"sink(file = NULL, append = FALSE, type = c(\"output\", \"message\"),     split = FALSE)sink.number(type = c(\"output\", \"message\"))","prefix":"sink","type":"function","description":"sink diverts R output to a connection (and stops such diversions).","leftLabel":"base","rightLabel":"R: Send R Output to a File"},"slice.index":{"text":"slice.index","snippet":"slice.index(x, MARGIN)","prefix":"slice.index","type":"function","description":"Returns a matrix of integers indicating the number of their slice in agiven array.","leftLabel":"base","rightLabel":"R: Slice Indexes in an Array"},"slotOp":{"text":"slotOp","snippet":"object@nameobject@name <- value","prefix":"slotOp","type":"function","description":"Extract or replace the contents of a slot in a object with aformal (S4) class structure.","leftLabel":"base","rightLabel":"R: Extract or Replace A Slot"},"socketSelect":{"text":"socketSelect","snippet":"socketSelect(socklist, write = FALSE, timeout = NULL)","prefix":"socketSelect","type":"function","description":"Waits for the first of several socket connections to become available.","leftLabel":"base","rightLabel":"R: Wait on Socket Connections"},"solve":{"text":"solve","snippet":"solve(a, b, ...)## Default S3 method:solve(a, b, tol, LINPACK = FALSE, ...)","prefix":"solve","type":"function","description":"This generic function solves the equation a %*% x = b for x,where b can be either a vector or a matrix.","leftLabel":"base","rightLabel":"R: Solve a System of Equations"},"sort":{"text":"sort","snippet":"sort(x, decreasing = FALSE, ...)## Default S3 method:sort(x, decreasing = FALSE, na.last = NA, ...)sort.int(x, partial = NULL, na.last = NA, decreasing = FALSE,         method = c(\"auto\", \"shell\", \"quick\", \"radix\"), index.return = FALSE)","prefix":"sort","type":"function","description":"Sort (or order) a vector or factor (partially) intoascending or descending order.  For ordering along more than onevariable, e.g., for sorting data frames, see order.","leftLabel":"base","rightLabel":"R: Sorting or Ordering Vectors"},"source":{"text":"source","snippet":"source(file, local = FALSE, echo = verbose, print.eval = echo,       exprs, spaced = use_file,       verbose = getOption(\"verbose\"),       prompt.echo = getOption(\"prompt\"),       max.deparse.length = 150, width.cutoff = 60L,       deparseCtrl = \"showAttributes\",       chdir = FALSE,       encoding = getOption(\"encoding\"),       continue.echo = getOption(\"continue\"),       skip.echo = 0, keep.source = getOption(\"keep.source\"))withAutoprint(exprs, evaluated = FALSE, local = parent.frame(),              print. = TRUE, echo = TRUE, max.deparse.length = Inf,              width.cutoff = max(20, getOption(\"width\")),              deparseCtrl = c(\"keepInteger\", \"showAttributes\", \"keepNA\"),              ...)","prefix":"source","type":"function","description":"source causes R to accept its input from the named file or URLor connection or expressions directly.  Input is read andparsed from that fileuntil the end of the file is reached, then the parsed expressions areevaluated sequentially in the chosen environment.","leftLabel":"base","rightLabel":"R: Read R Code from a File, a Connection or Expressions"},"split":{"text":"split","snippet":"split(x, f, drop = FALSE, ...)## Default S3 method:split(x, f, drop = FALSE, sep = \".\", lex.order = FALSE, ...)split(x, f, drop = FALSE, ...) <- valueunsplit(value, f, drop = FALSE)","prefix":"split","type":"function","description":"split divides the data in the vector x into the groupsdefined by f.  The replacement forms replace valuescorresponding to such a division.  unsplit reverses the effect ofsplit.","leftLabel":"base","rightLabel":"R: Divide into Groups and Reassemble"},"sprintf":{"text":"sprintf","snippet":"sprintf(fmt, ...)gettextf(fmt, ..., domain = NULL)","prefix":"sprintf","type":"function","description":"A wrapper for the C function sprintf, that returns a charactervector containing a formatted combination of text and variable values.","leftLabel":"base","rightLabel":"R: Use C-style String Formatting Commands"},"srcfile":{"text":"srcfile","snippet":"srcfile(filename, encoding = getOption(\"encoding\"), Enc = \"unknown\")srcfilecopy(filename, lines, timestamp = Sys.time(), isFile = FALSE)srcfilealias(filename, srcfile)getSrcLines(srcfile, first, last)srcref(srcfile, lloc)## S3 method for class 'srcfile'print(x, ...)## S3 method for class 'srcfile'summary(object, ...)## S3 method for class 'srcfile'open(con, line, ...)## S3 method for class 'srcfile'close(con, ...)## S3 method for class 'srcref'print(x, useSource = TRUE, ...)## S3 method for class 'srcref'summary(object, useSource = FALSE, ...)## S3 method for class 'srcref'as.character(x, useSource = TRUE, to = x, ...).isOpen(srcfile)","prefix":"srcfile","type":"function","description":"These functions are for working with source files and more generallywith “source references” (\"srcref\"), i.e., references tosource code.  The resulting data is used for printing and source leveldebugging, and is typically available in interactive R sessions,namely when options(keep.source = TRUE).","leftLabel":"base","rightLabel":"R: References to Source Files and Code"},"standardGeneric":{"text":"standardGeneric","snippet":"standardGeneric(f, fdef)","prefix":"standardGeneric","type":"function","description":"The function standardGeneric initiates dispatch of S4methods: see the references and the documentation of themethods package.  Usually, calls to this function aregenerated automatically and not explicitly by the programmer.","leftLabel":"base","rightLabel":"R: Formal Method System - Dispatching S4 Methods"},"startsWith":{"text":"startsWith","snippet":"startsWith(x, prefix)  endsWith(x, suffix)","prefix":"startsWith","type":"function","description":"Determines if entries of x start or end with string (entries of)prefix or suffix respectively, where strings arerecycled to common lengths.","leftLabel":"base","rightLabel":"R: Does String Start or End With Another String?"},"stop":{"text":"stop","snippet":"stop(..., call. = TRUE, domain = NULL)geterrmessage()","prefix":"stop","type":"function","description":"stop stops execution of the current expression and executesan error action.","leftLabel":"base","rightLabel":"R: Stop Function Execution"},"stopifnot":{"text":"stopifnot","snippet":"stopifnot(...)","prefix":"stopifnot","type":"function","description":"If any of the expressions in ... are not allTRUE, stop is called, producing an error messageindicating the first of the elements of ... which werenot true.","leftLabel":"base","rightLabel":"R: Ensure the Truth of R Expressions"},"strptime":{"text":"strptime","snippet":"## S3 method for class 'POSIXct'format(x, format = \"\", tz = \"\", usetz = FALSE, ...)## S3 method for class 'POSIXlt'format(x, format = \"\", usetz = FALSE, ...)## S3 method for class 'POSIXt'as.character(x, ...)strftime(x, format = \"\", tz = \"\", usetz = FALSE, ...)strptime(x, format, tz = \"\")","prefix":"strptime","type":"function","description":"Functions to convert between character representations and objects ofclasses \"POSIXlt\" and \"POSIXct\" representing calendardates and times.","leftLabel":"base","rightLabel":"R: Date-time Conversion Functions to and from Character"},"strrep":{"text":"strrep","snippet":"strrep(x, times)","prefix":"strrep","type":"function","description":"Repeat the character strings in a character vector a given number oftimes (i.e., concatenate the respective numbers of copies of thestrings).","leftLabel":"base","rightLabel":"R: Repeat the Elements of a Character Vector"},"strsplit":{"text":"strsplit","snippet":"strsplit(x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE)","prefix":"strsplit","type":"function","description":"Split the elements of a character vector x into substringsaccording to the matches to substring split within them.","leftLabel":"base","rightLabel":"R: Split the Elements of a Character Vector"},"strtoi":{"text":"strtoi","snippet":"strtoi(x, base = 0L)","prefix":"strtoi","type":"function","description":"Convert strings to integers according to the given base using the Cfunction strtol, or choose a suitable base following the C rules.","leftLabel":"base","rightLabel":"R: Convert Strings to Integers"},"strtrim":{"text":"strtrim","snippet":"strtrim(x, width)","prefix":"strtrim","type":"function","description":"Trim character strings to specified display widths.","leftLabel":"base","rightLabel":"R: Trim Character Strings to Specified Display Widths"},"structure":{"text":"structure","snippet":"structure(.Data, ...)","prefix":"structure","type":"function","description":"structure returns the given object with furtherattributes set.","leftLabel":"base","rightLabel":"R: Attribute Specification"},"strwrap":{"text":"strwrap","snippet":"strwrap(x, width = 0.9 * getOption(\"width\"), indent = 0,        exdent = 0, prefix = \"\", simplify = TRUE, initial = prefix)","prefix":"strwrap","type":"function","description":"Each character string in the input is first split into paragraphs (orlines containing whitespace only).  The paragraphs are then formattedby breaking lines at word boundaries.  The target columns for wrappinglines and the indentation of the first and all subsequent lines of aparagraph can be controlled independently.","leftLabel":"base","rightLabel":"R: Wrap Character Strings to Format Paragraphs"},"subset":{"text":"subset","snippet":"subset(x, ...)## Default S3 method:subset(x, subset, ...)## S3 method for class 'matrix'subset(x, subset, select, drop = FALSE, ...)## S3 method for class 'data.frame'subset(x, subset, select, drop = FALSE, ...)","prefix":"subset","type":"function","description":"Return subsets of vectors, matrices or data frames which meet conditions.","leftLabel":"base","rightLabel":"R: Subsetting Vectors, Matrices and Data Frames"},"substitute":{"text":"substitute","snippet":"substitute(expr, env)quote(expr)enquote(cl)","prefix":"substitute","type":"function","description":"substitute returns the parse tree for the (unevaluated)expression expr, substituting any variables bound inenv.","leftLabel":"base","rightLabel":"R: Substituting and Quoting Expressions"},"substr":{"text":"substr","snippet":"substr(x, start, stop)substring(text, first, last = 1000000L)substr(x, start, stop) <- valuesubstring(text, first, last = 1000000L) <- value","prefix":"substr","type":"function","description":"Extract or replace substrings in a character vector.","leftLabel":"base","rightLabel":"R: Substrings of a Character Vector"},"sum":{"text":"sum","snippet":"sum(..., na.rm = FALSE)","prefix":"sum","type":"function","description":"sum returns the sum of all the valuespresent in its arguments.","leftLabel":"base","rightLabel":"R: Sum of Vector Elements"},"summary":{"text":"summary","snippet":"summary(object, ...)## Default S3 method:summary(object, ..., digits)## S3 method for class 'data.frame'summary(object, maxsum = 7,       digits = max(3, getOption(\"digits\")-3), ...)## S3 method for class 'factor'summary(object, maxsum = 100, ...)## S3 method for class 'matrix'summary(object, ...)## S3 method for class 'summaryDefault'format(x, digits = max(3L, getOption(\"digits\") - 3L), ...) ## S3 method for class 'summaryDefault'print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)","prefix":"summary","type":"function","description":"summary is a generic function used to produce result summariesof the results of various model fitting functions.  The functioninvokes particular methods which depend on theclass of the first argument.","leftLabel":"base","rightLabel":"R: Object Summaries"},"svd":{"text":"svd","snippet":"svd(x, nu = min(n, p), nv = min(n, p), LINPACK = FALSE)La.svd(x, nu = min(n, p), nv = min(n, p))","prefix":"svd","type":"function","description":"Compute the singular-value decomposition of a rectangular matrix.","leftLabel":"base","rightLabel":"R: Singular Value Decomposition of a Matrix"},"sweep":{"text":"sweep","snippet":"sweep(x, MARGIN, STATS, FUN = \"-\", check.margin = TRUE, ...)","prefix":"sweep","type":"function","description":"Return an array obtained from an input array by sweeping out a summarystatistic.","leftLabel":"base","rightLabel":"R: Sweep out Array Summaries"},"switch":{"text":"switch","snippet":"switch(EXPR, ...)","prefix":"switch","type":"function","description":"switch evaluates EXPR and accordingly chooses one of thefurther arguments (in ...).","leftLabel":"base","rightLabel":"R: Select One of a List of Alternatives"},"sys.parent":{"text":"sys.parent","snippet":"sys.call(which = 0)sys.frame(which = 0)sys.nframe()sys.function(which = 0)sys.parent(n = 1)sys.calls()sys.frames()sys.parents()sys.on.exit()sys.status()parent.frame(n = 1)","prefix":"sys.parent","type":"function","description":"These functions provide access to environments(‘frames’ in S terminology) associated with functions furtherup the calling stack.","leftLabel":"base","rightLabel":"R: Functions to Access the Function Call Stack"},"sys.source":{"text":"sys.source","snippet":"sys.source(file, envir = baseenv(), chdir = FALSE,           keep.source = getOption(\"keep.source.pkgs\"),           toplevel.env = as.environment(envir))","prefix":"sys.source","type":"function","description":"Parses expressions in the given file, and then successively evaluatesthem in the specified environment.","leftLabel":"base","rightLabel":"R: Parse and Evaluate Expressions from a File"},"system":{"text":"system","snippet":"system(command, intern = FALSE,       ignore.stdout = FALSE, ignore.stderr = FALSE,       wait = TRUE, input = NULL, show.output.on.console = TRUE,       minimized = FALSE, invisible = TRUE)","prefix":"system","type":"function","description":"system invokes the OS command specified by command.","leftLabel":"base","rightLabel":"R: Invoke a System Command"},"system.file":{"text":"system.file","snippet":"system.file(..., package = \"base\", lib.loc = NULL,            mustWork = FALSE)","prefix":"system.file","type":"function","description":"Finds the full file names of files in packages etc.","leftLabel":"base","rightLabel":"R: Find Names of R System Files"},"system.time":{"text":"system.time","snippet":"system.time(expr, gcFirst = TRUE)","prefix":"system.time","type":"function","description":"Return CPU (and other) times that expr used.","leftLabel":"base","rightLabel":"R: CPU Time Used"},"system2":{"text":"system2","snippet":"system2(command, args = character(),        stdout = \"\", stderr = \"\", stdin = \"\", input = NULL,        env = character(), wait = TRUE,        minimized = FALSE, invisible = TRUE)","prefix":"system2","type":"function","description":"system2 invokes the OS command specified by command.","leftLabel":"base","rightLabel":"R: Invoke a System Command"},"t":{"text":"t","snippet":"t(x)","prefix":"t","type":"function","description":"Given a matrix or data.frame x,t returns the transpose of x.","leftLabel":"base","rightLabel":"R: Matrix Transpose"},"table":{"text":"table","snippet":"table(...,      exclude = if (useNA == \"no\") c(NA, NaN),      useNA = c(\"no\", \"ifany\", \"always\"),      dnn = list.names(...), deparse.level = 1)as.table(x, ...)is.table(x)## S3 method for class 'table'as.data.frame(x, row.names = NULL, ...,              responseName = \"Freq\", stringsAsFactors = TRUE,              sep = \"\", base = list(LETTERS))","prefix":"table","type":"function","description":"table uses the cross-classifying factors to build a contingencytable of the counts at each combination of factor levels.","leftLabel":"base","rightLabel":"R: Cross Tabulation and Table Creation"},"tabulate":{"text":"tabulate","snippet":"tabulate(bin, nbins = max(1, bin, na.rm = TRUE))","prefix":"tabulate","type":"function","description":"tabulate takes the integer-valued vector bin and countsthe number of times each integer occurs in it.","leftLabel":"base","rightLabel":"R: Tabulation for Vectors"},"tapply":{"text":"tapply","snippet":"tapply(X, INDEX, FUN = NULL, ..., default = NA, simplify = TRUE)","prefix":"tapply","type":"function","description":"Apply a function to each cell of a ragged array, that is to each(non-empty) group of values given by a unique combination of thelevels of certain factors.","leftLabel":"base","rightLabel":"R: Apply a Function Over a Ragged Array"},"taskCallback":{"text":"taskCallback","snippet":"addTaskCallback(f, data = NULL, name = character())removeTaskCallback(id)","prefix":"taskCallback","type":"function","description":"addTaskCallback registers an R functionthat is to be called each time a top-level taskis completed.","leftLabel":"base","rightLabel":"R: Add or Remove a Top-Level Task Callback"},"taskCallbackManager":{"text":"taskCallbackManager","snippet":"taskCallbackManager(handlers = list(), registered = FALSE,                    verbose = FALSE)","prefix":"taskCallbackManager","type":"function","description":"This provides an entirely S-language mechanismfor managing callbacks or actions  that are invoked atthe conclusion of each top-level task.  Essentially,we register a single R function from this managerwith the underlying, nativetask-callback mechanism and this function handles invoking the otherR callbacks under the control of the manager.The manager consists of a collection of functions that access sharedvariables to manage the list of user-level callbacks.","leftLabel":"base","rightLabel":"R: Create an R-level Task Callback Manager"},"taskCallbackNames":{"text":"taskCallbackNames","snippet":"getTaskCallbackNames()","prefix":"taskCallbackNames","type":"function","description":"This provides a way to get the names (or identifiers)for the currently registered task callbacksthat are invoked at the conclusion of each top-level task.These identifiers can be used to remove a callback.","leftLabel":"base","rightLabel":"R: Query the Names of the Current Internal Top-Level Task..."},"tempfile":{"text":"tempfile","snippet":"tempfile(pattern = \"file\", tmpdir = tempdir(), fileext = \"\")tempdir()","prefix":"tempfile","type":"function","description":"tempfile returns a vector of character strings which can be used asnames for temporary files.","leftLabel":"base","rightLabel":"R: Create Names for Temporary Files"},"textconnections":{"text":"textconnections","snippet":"textConnection(object, open = \"r\", local = FALSE,               encoding = c(\"\", \"bytes\", \"UTF-8\"))textConnectionValue(con)","prefix":"textconnections","type":"function","description":"Input and output text connections.","leftLabel":"base","rightLabel":"R: Text Connections"},"tilde":{"text":"tilde","snippet":"y ~ model","prefix":"tilde","type":"function","description":"Tilde is used to separate the left- and right-hand sides in a model formula.","leftLabel":"base","rightLabel":"R: Tilde Operator"},"timezones":{"text":"timezones","snippet":"Sys.timezone(location = TRUE)OlsonNames()","prefix":"timezones","type":"function","description":"Information about time zones in R.  Sys.timezone returnsthe name of the current time zone.","leftLabel":"base","rightLabel":"R: Time Zones"},"toString":{"text":"toString","snippet":"toString(x, ...)## Default S3 method:toString(x, width = NULL, ...)","prefix":"toString","type":"function","description":"This is a helper function for format to produce a singlecharacter string describing an R object.","leftLabel":"base","rightLabel":"R: Convert an R Object to a Character String"},"trace":{"text":"trace","snippet":"trace(what, tracer, exit, at, print, signature,      where = topenv(parent.frame()), edit = FALSE)untrace(what, signature = NULL, where = topenv(parent.frame()))tracingState(on = NULL).doTrace(expr, msg)returnValue(default = NULL)","prefix":"trace","type":"function","description":"A call to trace allows you to insert debugging code (e.g., acall to browser or recover) at chosenplaces in any function.  A call to untrace cancels the tracing.Specified methods can be traced the same way, without tracing allcalls to the generic function.  Trace code (tracer) can be anyR expression.  Tracing can be temporarily turned on or off globallyby calling tracingState.","leftLabel":"base","rightLabel":"R: Interactive Tracing and Debugging of Calls to a Function or..."},"traceback":{"text":"traceback","snippet":"traceback(x = NULL, max.lines = getOption(\"deparse.max.lines\")).traceback(x = NULL)","prefix":"traceback","type":"function","description":"By default traceback() prints the call stack of the lastuncaught error, i.e., the sequence of calls that lead to the error.This is useful when an error occurs with an unidentifiable errormessage.  It can also be used to print the current stack orarbitrary lists of deparsed calls.","leftLabel":"base","rightLabel":"R: Get and Print Call Stacks"},"tracemem":{"text":"tracemem","snippet":"tracemem(x)untracemem(x)retracemem(x, previous = NULL)","prefix":"tracemem","type":"function","description":"This function marks an object so that a message is printed whenever theinternal code copies the object.  It is amajor cause of hard-to-predict memory use in R.","leftLabel":"base","rightLabel":"R: Trace Copying of Objects"},"transform":{"text":"transform","snippet":"transform(`_data`, ...)","prefix":"transform","type":"function","description":"transform is a generic function, which—at leastcurrently—only does anything useful withdata frames.  transform.default converts its first argument toa data frame if possible and calls transform.data.frame.","leftLabel":"base","rightLabel":"R: Transform an Object, for Example a Data Frame"},"trimws":{"text":"trimws","snippet":"trimws(x, which = c(\"both\", \"left\", \"right\"))","prefix":"trimws","type":"function","description":"Remove leading and/or trailing whitespace from character strings.","leftLabel":"base","rightLabel":"R: Remove Leading/Trailing Whitespace"},"try":{"text":"try","snippet":"try(expr, silent = FALSE,    outFile = getOption(\"try.outFile\", default = stderr()))","prefix":"try","type":"function","description":"try is a wrapper to run an expression that might fail and allowthe user's code to handle error-recovery.","leftLabel":"base","rightLabel":"R: Try an Expression Allowing Error Recovery"},"typeof":{"text":"typeof","snippet":"typeof(x)","prefix":"typeof","type":"function","description":"typeof determines the (R internal)type or storage mode of any object","leftLabel":"base","rightLabel":"R: The Type of an Object"},"unique":{"text":"unique","snippet":"unique(x, incomparables = FALSE, ...)## Default S3 method:unique(x, incomparables = FALSE, fromLast = FALSE,        nmax = NA, ...)## S3 method for class 'matrix'unique(x, incomparables = FALSE, MARGIN = 1,       fromLast = FALSE, ...)## S3 method for class 'array'unique(x, incomparables = FALSE, MARGIN = 1,       fromLast = FALSE, ...)","prefix":"unique","type":"function","description":"unique returns a vector, data frame or array like xbut with duplicate elements/rows removed.","leftLabel":"base","rightLabel":"R: Extract Unique Elements"},"unlink":{"text":"unlink","snippet":"unlink(x, recursive = FALSE, force = FALSE)","prefix":"unlink","type":"function","description":"unlink deletes the file(s) or directories specified by x.","leftLabel":"base","rightLabel":"R: Delete Files and Directories"},"unlist":{"text":"unlist","snippet":"unlist(x, recursive = TRUE, use.names = TRUE)","prefix":"unlist","type":"function","description":"Given a list structure x, unlist simplifies it toproduce a vector which contains all the atomic componentswhich occur in x.","leftLabel":"base","rightLabel":"R: Flatten Lists"},"unname":{"text":"unname","snippet":"unname(obj, force = FALSE)","prefix":"unname","type":"function","description":"Remove the names or dimnames attribute ofan R object.","leftLabel":"base","rightLabel":"R: Remove 'names' or 'dimnames'"},"userhooks":{"text":"userhooks","snippet":"getHook(hookName)setHook(hookName, value,        action = c(\"append\", \"prepend\", \"replace\"))packageEvent(pkgname,             event = c(\"onLoad\", \"attach\", \"detach\", \"onUnload\"))","prefix":"userhooks","type":"function","description":"These functions allow users to set actions to be taken before packagesare attached/detached and namespaces are (un)loaded.","leftLabel":"base","rightLabel":"R: Functions to Get and Set Hooks for Load, Attach, Detach and..."},"utf8Conversion":{"text":"utf8Conversion","snippet":"utf8ToInt(x)intToUtf8(x, multiple = FALSE)","prefix":"utf8Conversion","type":"function","description":"Conversion of UTF-8 encoded character vectors to and from integervectors representing a UTF-32 encoding.","leftLabel":"base","rightLabel":"R: Convert Integer Vectors to or from UTF-8-encoded Character..."},"validUTF8":{"text":"validUTF8","snippet":"validUTF8(x)validEnc(x)","prefix":"validUTF8","type":"function","description":"Check if each element of a character vector is valid in its impliedencoding.","leftLabel":"base","rightLabel":"R: Check if a Character Vector is Validly Encoded"},"vector":{"text":"vector","snippet":"vector(mode = \"logical\", length = 0)as.vector(x, mode = \"any\")is.vector(x, mode = \"any\")","prefix":"vector","type":"function","description":"vector produces a vector of the given length and mode.","leftLabel":"base","rightLabel":"R: Vectors"},"warning":{"text":"warning","snippet":"warning(..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE,        domain = NULL)suppressWarnings(expr)","prefix":"warning","type":"function","description":"Generates a warning message that corresponds to its argument(s) and(optionally) the expression or function from which it was called.","leftLabel":"base","rightLabel":"R: Warning Messages"},"warnings":{"text":"warnings","snippet":"warnings(...)","prefix":"warnings","type":"function","description":"warnings and its print method print thevariable last.warning in a pleasing form.","leftLabel":"base","rightLabel":"R: Print Warning Messages"},"weekday.POSIXt":{"text":"weekday.POSIXt","snippet":"weekdays(x, abbreviate)## S3 method for class 'POSIXt'weekdays(x, abbreviate = FALSE)## S3 method for class 'Date'weekdays(x, abbreviate = FALSE)months(x, abbreviate)## S3 method for class 'POSIXt'months(x, abbreviate = FALSE)## S3 method for class 'Date'months(x, abbreviate = FALSE)quarters(x, abbreviate)## S3 method for class 'POSIXt'quarters(x, ...)## S3 method for class 'Date'quarters(x, ...)julian(x, ...)## S3 method for class 'POSIXt'julian(x, origin = as.POSIXct(\"1970-01-01\", tz = \"GMT\"), ...)## S3 method for class 'Date'julian(x, origin = as.Date(\"1970-01-01\"), ...)","prefix":"weekday.POSIXt","type":"function","description":"Extract the weekday, month or quarter, or the Julian time(days since some origin).  These are generic functions: the methodsfor the internal date-time classes are documented here.","leftLabel":"base","rightLabel":"R: Extract Parts of a POSIXt or Date Object"},"which":{"text":"which","snippet":"which(x, arr.ind = FALSE, useNames = TRUE)arrayInd(ind, .dim, .dimnames = NULL, useNames = FALSE)","prefix":"which","type":"function","description":"Give the TRUE indices of a logical object, allowing for arrayindices.","leftLabel":"base","rightLabel":"R: Which indices are TRUE?"},"which.min":{"text":"which.min","snippet":"which.min(x)which.max(x)","prefix":"which.min","type":"function","description":"Determines the location, i.e., index of the (first) minimum or maximumof a numeric (or logical) vector.","leftLabel":"base","rightLabel":"R: Where is the Min() or Max() or first TRUE or FALSE ?"},"with":{"text":"with","snippet":"with(data, expr, ...)within(data, expr, ...)","prefix":"with","type":"function","description":"Evaluate an R expression in an environment constructed from data,possibly modifying (a copy of) the original data.","leftLabel":"base","rightLabel":"R: Evaluate an Expression in a Data Environment"},"withVisible":{"text":"withVisible","snippet":"withVisible(x)","prefix":"withVisible","type":"function","description":"This function evaluates an expression, returning it in a two element listcontaining its value and a flag showing whether it would automatically print.","leftLabel":"base","rightLabel":"R: Return both a Value and its Visibility"},"write":{"text":"write","snippet":"write(x, file = \"data\",      ncolumns = if(is.character(x)) 1 else 5,      append = FALSE, sep = \" \")","prefix":"write","type":"function","description":"The data (usually a matrix) x are written to file file.If x is a two-dimensional matrix you need to transpose it to get thecolumns in file the same as those in the internal representation.","leftLabel":"base","rightLabel":"R: Write Data to a File"},"writeLines":{"text":"writeLines","snippet":"writeLines(text, con = stdout(), sep = \"\\n\", useBytes = FALSE)","prefix":"writeLines","type":"function","description":"Write text lines to a connection.","leftLabel":"base","rightLabel":"R: Write Lines to a Connection"},"xtfrm":{"text":"xtfrm","snippet":"xtfrm(x)","prefix":"xtfrm","type":"function","description":"A generic auxiliary function that produces a numeric vector whichwill sort in the same order as x.","leftLabel":"base","rightLabel":"R: Auxiliary Function for Sorting and Ranking"},"zMachine":{"text":"zMachine","snippet":".Machine","prefix":"zMachine","type":"function","description":".Machine is a variable holding information on the numericalcharacteristics of the machine R is running on, such as the largestdouble or integer and the machine's precision.","leftLabel":"base","rightLabel":"R: Numerical Characteristics of the Machine"},"zScript":{"text":"zScript","snippet":".Script(interpreter, script, args, ...)","prefix":"zScript","type":"function","description":"Internal interface to run a script through its interpreter.","leftLabel":"base","rightLabel":"R: Scripting Language Interface"},"zapsmall":{"text":"zapsmall","snippet":"zapsmall(x, digits = getOption(\"digits\"))","prefix":"zapsmall","type":"function","description":"zapsmall determines a digits argument dr forcalling round(x, digits = dr) such that values close tozero (compared with the maximal absolute value) are ‘zapped’,i.e., treated as 0.","leftLabel":"base","rightLabel":"R: Rounding of Numbers"},"zpackages":{"text":"zpackages","snippet":".packages(all.available = FALSE, lib.loc = NULL)","prefix":"zpackages","type":"function","description":".packages returns information about package availability.","leftLabel":"base","rightLabel":"R: Listing of Packages"},"zutils":{"text":"zutils","snippet":".standard_regexps()","prefix":"zutils","type":"function","description":"Miscellaneous internal/programming utilities.","leftLabel":"base","rightLabel":"R: Miscellaneous Internal/Programming Utilities"},"Signals":{"text":"Signals","snippet":"kill -USR1 pidkill -USR2 pid","prefix":"Signals","type":"function","description":"On receiving SIGUSR1 R will save the workspace and quit.SIGUSR2 has the same result except that the .Lastfunction and on.exit expressions will not be called.","leftLabel":"base","rightLabel":"R: Interrupting Execution of R"}}}